{"version":3,"file":"static/js/4819.8ba650be.chunk.js","mappings":"uMAOO,MAAMA,EAAY,CACxB,EAAG,EACH,EAAG,EACH,GAAI,GACJ,GAAI,GACJ,GAAI,IAOQC,EAAiBA,CAACC,EAAaC,EAAqBC,KAChE,MAAMC,EAAaH,EAAKI,OAClBC,EAAaF,EAAcF,EAAcC,EACzCI,EAAWH,GAAeF,EAAc,GAAKC,EAGnD,OAAOF,EAAKO,MAAMC,KAAKC,IAAIJ,EAAY,GAAIG,KAAKE,IAAIJ,EAAUH,IAAaQ,SAAS,EAa/EC,EAAiDC,IAOhD,IAPiD,eACvDC,EAAc,YACdb,EAAW,QACXC,EAAO,WACPa,EAAU,KACVf,EAAI,MACJgB,GACAH,EACA,MAAMV,EAAaH,EAAKI,OAClBa,EAAYT,KAAKU,KAAKf,EAAaD,GAkDzC,OACCiB,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAAAC,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAF,UACdC,EAAAA,EAAAA,KAAA,QAAME,UAAU,aAAYH,SAffI,MACf,MAAMC,EAAQxB,GAAWD,EAAc,GAAK,EAEtC0B,EAAMzB,EAAUD,EAEtB,OACCkB,EAAAA,EAAAA,MAAA,QAAMK,UAAU,mBAAkBH,SAAA,CAAC,WACzBK,EAAM,OAAKC,EAAMxB,EAAaA,EAAawB,EAAI,OAAKxB,EAAW,IAAEa,IACpE,EAOwBS,QAG/BN,EAAAA,EAAAA,MAACS,EAAAA,GAAe,CAACJ,UAAU,SAAQH,SAAA,CACjCJ,EAAY,IAEZE,EAAAA,EAAAA,MAACU,EAAAA,EAAU,CAACC,UAAWd,EAAMK,SAAA,EAC5BC,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CACdC,SAAO,EACPC,aAAchC,EAAc,EAAI,GAChCiC,QAASA,IAAMpB,EAAe,MAE/BQ,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CACdI,QAAM,EACNF,aAAchC,EAAc,EAAI,GAChCiC,QAASA,IAAMpB,EAAeb,EAAc,KAE5CA,EAAc,EAAI,IAClBqB,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CAACG,QAASA,IAAMpB,EAAeb,EAAc,GAAGoB,SAAC,QArEnDe,MAClB,IAAIC,EAAQ,GAERC,EAAIrC,EAAc,EACtB,KAAOqC,GAAKrC,EAAc,GAAKqC,EAAI,GAClCD,EAAME,MACLjB,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CAASG,QAASA,IAAMpB,EAAeb,EAAc,GAAGoB,SACrEiB,GADmBA,IAKtBA,GAAK,EAYN,IATAD,EAAQA,EAAM1B,UAEd0B,EAAME,MACLjB,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CAAmBS,UAAQ,EAACN,QAASA,IAAMpB,EAAeb,GAAaoB,SACpFpB,GADmBA,IAKtBqC,EAAIrC,EAAc,EACXqC,GAAKrC,EAAc,GAAKqC,GAAKrB,GACnCoB,EAAME,MACLjB,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CAASG,QAASA,IAAMpB,EAAeb,EAAc,GAAGoB,SACrEiB,GADmBA,IAKtBA,GAAK,EAGN,OAAOD,CAAK,EAwCPD,GACAnC,EAAc,EAAIgB,IAClBK,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CAACG,QAASA,IAAMpB,EAAeb,EAAc,GAAGoB,SAAC,SAIjEC,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CACdU,QAAM,EACNR,aAAchC,EAAc,GAAKgB,GACjCiB,QAASA,IAAMpB,EAAeb,EAAc,MAE7CqB,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CACdW,QAAM,EACNT,aAAchC,EAAc,GAAKgB,GACjCiB,QAASA,IAAMpB,EAAeG,SAKjCK,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACNC,KAAK,KACLd,UAAU,MACVe,SAAWC,IACV/B,EAAWgC,SAASD,EAAEE,OAAOC,MAAO,KACpCnC,EAAe,EAAE,EAElBmC,MAAO/C,EAAQgD,WAAW7B,SACzB8B,OAAOC,KAAKtD,GAAWuD,KAAKf,IAC5BhB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAASL,MAAOX,EAAEjB,SACvBiB,GADWA,YAMJ,EAYf1B,EAAkB2C,aAAe,CAChCvC,MAAO,SAGR,S,0HCrJO,MAAMwC,EAA2C3C,IAQjD,IARkD,SACxDQ,EAAQ,UACRS,EAAS,UACTN,EAAS,IACTiC,EAAG,GACHC,EAAE,SACFlB,EAAQ,QACRmB,GACA9C,EACA,OACCM,EAAAA,EAAAA,MAACyC,EAAAA,EAAU,CACVH,IAAKA,EACLjC,UAAWqC,IAAW,kBAAmB,CAAEC,OAAQtB,GAAYhB,GAC/D,eAAcgB,EAAW,OAAS,KAClC,aAAYV,GAAaT,EAASA,SAAA,CACjCsC,GACmB,kBAAZA,IACPI,EAAAA,EAAAA,cAAaJ,EAAS,CACrBnC,UAAWqC,IAAW,kBAAmBF,EAAQK,MAAMxC,aAExDgB,EACAnB,GAEAC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAO,CAACP,GAAIA,EAAI,aAAY5B,EAAUT,SACrCA,MAGS,EAafmC,EAAeD,aAAe,CAC7B/B,eAAW0C,EACXpC,eAAWoC,EACXT,IAAK,KACLjB,UAAU,EACVmB,aAASO,GAmBV,MAAMC,EAAmCC,IAUlC,IAVmC,SACzC/C,EAAQ,KACRgD,EAAI,IACJZ,EAAG,QACHa,EAAO,QACPC,EAAO,UACPzC,EAAS,WACT0C,EAAU,SACVC,EAAQ,QACRd,GACAS,EACA,MAAMM,EAAsB,WAAZf,GAAwBA,EACxC,OACCrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACVH,IAAKA,EACL,aAAY3B,EACZ6C,MACChB,EACG,CACA,0BACoB,kBAAZA,EAAwB,IAAGA,KAAa,QAEhD,KACHtC,UACDF,EAAAA,EAAAA,MAACyC,EAAAA,EAAU,CAACH,IAAKa,EAAS9C,UAAU,aAAYH,SAAA,CAC9CoD,IACAnD,EAAAA,EAAAA,KAACkC,EAAc,CAACE,GAAG,IAAI5B,UAAU,OAAMT,SACrCoD,IAGFJ,EACEA,EAAKhB,KAAI,CAACuB,EAAMC,KAChBvD,EAAAA,EAAAA,KAACkC,EAAc,CAEdC,IAAKmB,EAAKnB,KAAOc,EACjBb,GAAIkB,EAAKlB,GACTlB,SAAUgC,GAAcH,EAAKjE,SAAWyE,EAAQ,EAChDlB,QAASe,EAAwBrD,SAChCuD,EAAKE,OALDF,EAAKE,SAQXC,EAAAA,SAAAA,IAAa1D,GAAU,CAAC2D,EAAOH,KAE/Bd,EAAAA,EAAAA,cAAaiB,EAAO,CAEnBvB,IAAKuB,EAAMhB,MAAMP,KAAOc,EAExB/B,SAAUgC,GAAcnD,EAASjB,SAAWyE,EAAQ,EAEpDlB,QAASqB,EAAMhB,MAAML,SAAWe,UAIzB,EA+BfP,EAAWZ,aAAe,CACzBlC,cAAU6C,EACVT,IAAK,MACLa,QAAS,KACTC,QAAS,KACTzC,UAAW,aACXuC,UAAMH,EACNM,YAAY,EACZC,UAAUnD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CAACC,KAAK,mBACrBvB,SAASrC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CAACC,KAAK,kBAGrB,S,mEC9KA,MAAM5B,EAA2BzC,IAA8D,IAA7D,SAAEQ,EAAQ,MAAE4B,EAAK,SAAEkC,EAAQ,eAAEC,KAAmBpB,GAAOnD,EACxF,OACCS,EAAAA,EAAAA,KAAA,UACC2B,MAAOA,EACPkC,SAAUA,EACV,kBAAiBC,GAAkB/D,KAE/B2C,EAAK3C,SACRA,GACO,EASXiC,EAAOC,aAAe,CACrB4B,UAAU,EACVC,eAAgB,KAChBnC,WAAOiB,GAWD,MAAMmB,EAA6BjB,IAAe,IAAd,KAAEC,GAAMD,EAClD,OAAW,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMhB,KAAKuB,IAEjBtD,EAAAA,EAAAA,KAACgC,EAAM,CAAkBL,MAAO2B,EAAK3B,SAAW2B,EAAIvD,SACjDuD,EAAKU,MAAoBV,EAAK5D,OADpB4D,EAAK3B,QAGjB,EAaH,G,oGC5CO,MAAMlB,GAAiBwD,EAAAA,EAAAA,aAC7B,CAAA1E,EAaC2E,KACK,IAbL,UACChE,EAAS,WACTS,EAAU,SACVO,EAAQ,OACRL,EAAM,QACNH,EAAO,OACPS,EAAM,OACNC,EAAM,SACNrB,EAAQ,QACRa,KACG8B,GACHnD,EAGD,OACCS,EAAAA,EAAAA,KAAA,MACCkE,IAAKA,EACLhE,UAAWqC,IACV,YACA,CACCsB,SAAUlD,EACV6B,OAAQtB,GAEThB,MAGGwC,EAAK3C,UACTF,EAAAA,EAAAA,MAAA,QACCsE,KAAK,SACLvD,QAASA,EACTwD,UAAWxD,EACXV,UAAU,YACVmE,SAAU1D,GAAc,OAAIiC,EAC5B,gBAAejC,EAAa,YAASiC,EACrC,cACE/B,EAAU,aAAkBM,GAAU,cAAiB,GAAEpB,SAC1DA,SAAA,CACAc,IAAUb,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CAACC,KAAK,gBACrBlD,IAAWV,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CAACC,KAAK,cACtBzC,IAAUnB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CAACC,KAAK,iBACrBxC,IAAUpB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CAACC,KAAK,aACrB7D,MAEE,IAIRU,EAAe6D,YAAc,iBAY7B7D,EAAewB,aAAe,CAC7B/B,eAAW0C,EACXjC,YAAY,EACZO,UAAU,EACVL,QAAQ,EACRH,SAAS,EACTS,QAAQ,EACRC,QAAQ,EACRrB,SAAU,KACVa,aAASgC,GAaV,MAAMrC,GAAa0D,EAAAA,EAAAA,aAClB,CAAAnB,EAAqDoB,KAAS,IAA7D,UAAE1D,EAAS,UAAEN,EAAS,SAAEH,EAAQ,KAAEuB,KAASoB,GAAOI,EAClD,OAEC9C,EAAAA,EAAAA,KAAA,OAAKkE,IAAKA,EAAK,aAAY1D,EAAWN,UAAWA,KAAewC,EAAK3C,UACpEC,EAAAA,EAAAA,KAAA,MAAIE,UAAWqC,IAAW,aAAc,CAAE,CAAE,cAAajB,KAASA,GAAQ,OAAOvB,SAC/EA,KAEG,IAITQ,EAAW+D,YAAc,aAOzB/D,EAAW0B,aAAe,CACzB/B,eAAW0C,EACXtB,KAAM,MAGP,S,mGCpGO,MAAMiD,GAAcN,EAAAA,EAAAA,aAC1B,CAAA1E,EAaC2E,KACK,IAbL,GACCM,EAAE,UACFtE,EAAS,SACTH,EAAQ,SACR0E,EAAQ,QACRC,EAAO,UACPC,EAAS,gBACTC,EAAe,cACfC,EAAa,kBACbC,KACGpC,GACHnD,EAGD,OACCM,EAAAA,EAAAA,MAAAkF,EAAAA,SAAA,CAAAhF,SAAA,EACCC,EAAAA,EAAAA,KAAA,OACCkE,IAAKA,EACLM,GAAIA,EACJtE,UAAWqC,IACV,CACC,cAAemC,GAAWC,GAAaC,EACvC,YAAaF,GAAWC,IAAcC,GAEvC1E,MAGGwC,EAAK3C,SACR0D,EAAAA,SAAAA,IAAa1D,GAAW2D,IACxBjB,EAAAA,EAAAA,cAAaiB,EAAO,CACnBe,SAAUf,EAAMhB,MAAM+B,UAAYA,EAClCC,UACAC,YACAC,kBACAC,gBACAC,oBACAE,gBAAgB,SAInBhF,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CACVN,UAAWA,EACXC,gBAAiBA,EACjBC,cAAeA,EACfK,UAAWJ,MAEV,IAINP,EAAYD,YAAc,cAa1BC,EAAYtC,aAAe,CAC1BuC,QAAI5B,EACJ1C,eAAW0C,EACX6B,UAAU,EACVE,WAAW,EACXD,SAAS,EACTE,qBAAiBhC,EACjBiC,mBAAejC,EACfkC,mBAAmB,GA4BpB,MAAMK,GAASlB,EAAAA,EAAAA,aACd,CAAAnB,EA2BCoB,KACK,IA3BL,GACCM,EAAE,UACFtE,EAAS,KACTkF,EAAI,KACJC,EAAI,MACJ3F,EAAK,MACLiC,EAAK,QACL2D,EAAO,SACPzB,EAAQ,SACRY,EAAQ,iBACRc,EAAgB,QAChBb,EAAO,UACPC,EAAS,gBACTC,EAAe,cACfC,EAAa,eACbG,EAAc,kBACdF,EAAiB,OACjBU,EAAM,SACNjE,EAAQ,QACRkE,EAAO,QACPC,EAAO,UACPC,EAAS,SACTC,EAAQ,UACRpF,KACGkC,GACHI,EAGD,MAAM+C,GACL7F,EAAAA,EAAAA,KAAA,SACCkE,IAAKA,EACLhE,UAAWqC,IACV,mBACA,CACC,OAAQgD,EACR,cAAeb,GAAWC,GAAaC,EACvC,YAAaF,GAAWC,IAAcC,GAEvC1E,GAEDkF,KAAe,OAATA,EAAgBZ,EAAKY,EAC3BC,KAAe,UAATA,EAAmB,QAAU,WACnCb,GAAIA,EACJ7C,MAAOA,EACP2D,QAAkB,UAATD,EAAmBC,IAAY3D,IAAU2D,EAClDzB,SAAUA,EACV2B,OAAQA,EACRjE,SAAUA,EACVkE,QAASA,EACTC,QAASA,EACTC,UAAWA,EACXC,SAAUA,EACV,aAAYpF,KAERkC,IAIN,OAAI6C,EACIM,GAGPhG,EAAAA,EAAAA,MAAA,OACCK,UAAWqC,IAAW,aAAc,CACnC,cAAwB,WAAT8C,EACf,oBAAqBZ,IACnB1E,SAAA,CACF8F,EACAnG,IACAM,EAAAA,EAAAA,KAAA,SAAOE,UAAU,mBAAmB4F,QAAStB,EAAGzE,SAC9CL,IAGFsF,IACAhF,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CACVN,UAAWA,EACXC,gBAAiBA,EACjBC,cAAeA,EACfK,UAAWJ,MAGR,IAITK,EAAOb,YAAc,SA2BrBa,EAAOlD,aAAe,CACrBuC,QAAI5B,EACJ1C,eAAW0C,EACXwC,KAAM,KACNC,KAAM,WACN3F,MAAO,KACP4F,SAAS,EACTzB,UAAU,EACVY,UAAU,EACVc,kBAAkB,EAClBZ,WAAW,EACXD,SAAS,EACTE,qBAAiBhC,EACjBiC,mBAAejC,EACfoC,gBAAgB,EAChBF,mBAAmB,EACnBU,YAAQ5C,EACRrB,cAAUqB,EACV6C,aAAS7C,EACT8C,aAAS9C,EACT+C,eAAW/C,EACXgD,cAAUhD,EACVpC,eAAWoC,GAGZ,S,sGCpOA,MAAMvB,GAAS4C,EAAAA,EAAAA,aACd,CAAA1E,EAiCC2E,KACK,IAjCL,GACCM,EAAE,KACFY,EAAI,UACJlF,EAAS,SACTH,EAAQ,SACRgG,EAAQ,YACRC,EAAW,gBACXC,EAAe,eACfnC,EAAc,UACdtD,EAAS,KACTuC,EAAI,SACJmD,EAAQ,MACR1C,EAAK,KACLlC,EAAI,SACJuC,EAAQ,MACRlC,EAAK,aACLwE,EAAY,QACZzB,EAAO,UACPC,EAAS,gBACTC,EAAe,cACfC,EAAa,eACbG,EAAc,kBACdF,EAAiB,OACjBU,EAAM,SACNjE,EAAQ,QACRkE,EAAO,QACPC,EAAO,UACPC,EAAS,SACTC,KACGlD,GACHnD,EAID,OACCM,EAAAA,EAAAA,MAAAkF,EAAAA,SAAA,CAAAhF,SAAA,EACCF,EAAAA,EAAAA,MAAA,UACCqE,IAAKA,EACLM,GAAIA,EACJtE,UAAWqC,IACV,cACA,CACC,CAAE,eAAcjB,KAASA,EACzB,aAAwB,KAAVK,GAAgBqE,EAC9B,cAAetB,GAAWC,GAAaC,EACvC,YAAaF,GAAWC,IAAcC,GAEvC1E,GAEDkF,KAAMA,EACN,aAAY5E,EACZ,mBAAkByF,EAClB,kBAAiBnC,EACjBoC,SAAUA,EACVrC,SAAUA,EACVL,MAAOA,EACP7B,MAAOA,EACPwE,aAAcA,EACdJ,SAAUA,EACVP,OAAQA,EACRjE,SAAUA,EACVkE,QAASA,EACTC,QAASA,EACTC,UAAWA,EACXC,SAAUA,KAENlD,EAAK3C,SAAA,CACRiG,IACAhG,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACL,MAAM,GAAGyE,QAAM,EAAArG,SACrBiG,IAGFjG,GAAagD,IAAQ/C,EAAAA,EAAAA,KAAC+D,EAAAA,EAAO,CAAChB,KAAMA,OAErCiC,IACAhF,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CACVN,UAAWA,EACXC,gBAAiBA,EACjBC,cAAeA,EACfK,UAAWJ,MAGX,IAINzD,EAAOiD,YAAc,SA+ErBjD,EAAOY,aAAe,CACrBuC,QAAI5B,EACJ1C,eAAW0C,EACXwC,UAAMxC,EACN7C,SAAU,KACViG,iBAAapD,EACbsD,UAAU,EACV5E,UAAMsB,EACNiB,UAAU,EACVkC,UAAU,EACVE,qBAAiBrD,EACjBkB,oBAAgBlB,EAChBY,WAAOZ,EACPjB,WAAOiB,EACPuD,kBAAcvD,EACdG,UAAMH,EACN+B,WAAW,EACXD,SAAS,EACTE,qBAAiBhC,EACjBiC,mBAAejC,EACfoC,gBAAgB,EAChBF,mBAAmB,EACnBU,YAAQ5C,EACRrB,cAAUqB,EACV6C,aAAS7C,EACT8C,aAAS9C,EACT+C,eAAW/C,EACXgD,cAAUhD,GAGX,S,mFCpOA,MAqEA,EArEwBlE,IACvB,MAAM2H,GAAcC,EAAAA,EAAAA,IAAU,CAC7BC,SACCC,EACAC,GAGD,EACAC,cAAe,CACdC,WAAW,EACXC,aAAc,OAKhBC,EAAAA,EAAAA,YAAU,KACLR,EAAYG,OAAOG,UACtBN,EAAYS,UAAU,IAClBT,EAAYG,OAEfI,aAAclI,EAAKqD,KAAKgF,GAAMA,EAAEvC,GAAG5C,eAGpCyE,EAAYS,UAAU,IAClBT,EAAYG,OACfI,aAAc,KAGT,SAEL,CAACP,EAAYG,OAAOG,YAGvB,MAAMzC,GAAM8C,EAAAA,EAAAA,QAAyB,OACrCH,EAAAA,EAAAA,YAAU,KACL3C,EAAI+C,UAEJZ,EAAYG,OAAOI,aAAa9H,QAClCuH,EAAYG,OAAOI,aAAa9H,SAAWJ,EAAKqD,KAAKgF,GAAMA,EAAEvC,GAAG5C,aAAY9C,QAE5EoF,EAAI+C,QAAQ3B,SAAU,EACtBpB,EAAI+C,QAAQC,eAAgB,GAE5Bb,EAAYG,OAAOI,aAAa9H,SAAWJ,EAAKqD,KAAKgF,GAAMA,EAAEvC,GAAG5C,aAAY9C,QAE5EoF,EAAI+C,QAAQ3B,SAAU,EACtBpB,EAAI+C,QAAQC,eAAgB,GACyB,IAA3Cb,EAAYG,OAAOI,aAAa9H,SAC1CoF,EAAI+C,QAAQ3B,SAAU,EACtBpB,EAAI+C,QAAQC,eAAgB,GAE9B,GACE,CAACb,EAAYG,OAAOG,UAAWN,EAAYG,OAAOI,aAAclI,IAEnE,MAAMyI,GACLnH,EAAAA,EAAAA,KAACmF,EAAAA,EAAM,CACNjB,IAAKA,EACLM,GAAG,YACHjD,SAAU8E,EAAYe,aACtB9B,QAASe,EAAYG,OAAOG,UAC5BnG,UAAU,eAIN6G,EAAyBhB,EAAYe,aACrCE,EAAiBjB,EAAYG,OAAOI,aAE1C,MAAO,CAAEP,cAAagB,yBAAwBC,iBAAgBH,iBAAgB,C,kDCrE/E,MA6CA,EA7CwB,SAACpG,GAAiC,IAAnBwG,EAAMC,UAAA1I,OAAA,QAAA8D,IAAA4E,UAAA,GAAAA,UAAA,GAAG,KAC/C,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAASJ,GAyC7C,MAAO,CAAExG,OAvCW6G,EAAAA,EAAAA,UAAQ,KAC3B,MAAMC,EAAgB,IAAI9G,GAgB1B,OAfmB,OAAf0G,GACHI,EAAcC,MAAK,CAACC,EAAGC,IAElBD,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KAEJ,cAAzBR,EAAWS,WAA6B,EAAI,EAGhDH,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KAEJ,cAAzBR,EAAWS,UAA4B,GAAK,EAE7C,IAGFL,CAAa,GAClB,CAAC9G,EAAO0G,IAqBkBU,YAnBRF,IACpB,IAAIC,EAAY,YAEZT,GAAcA,EAAWQ,MAAQA,GAAgC,cAAzBR,EAAWS,YACtDA,EAAY,cAGbR,EAAc,CAAEO,MAAKC,aAAY,EAYQE,iBAThBH,GACpBR,GAKEA,EAAWQ,MAAQA,EAAMR,EAAWS,UAJnC,SAOmDT,aAC7D,C,iMC1BA,MAkNA,EAlNkBY,KACjB,MAuGO1J,EAAaa,IAAkBmI,EAAAA,EAAAA,UAAS,IACxC/I,EAASa,IAAckI,EAAAA,EAAAA,UAAS,IAEjC,MAAE5G,EAAK,YAAEoH,EAAW,iBAAEC,IAAqBE,EAAAA,EAAAA,GAbpC,CACZ,CAAE9D,GAAI,EAAG+D,UAAW,OAAQC,SAAU,OACtC,CAAEhE,GAAI,EAAG+D,UAAW,OAAQC,SAAU,UACtC,CAAEhE,GAAI,EAAG+D,UAAW,MAAOC,SAAU,WACrC,CAAEhE,GAAI,EAAG+D,UAAW,QAASC,SAAU,YACvC,CAAEhE,GAAI,EAAG+D,UAAW,OAAQC,SAAU,OACtC,CAAEhE,GAAI,EAAG+D,UAAW,QAASC,SAAU,UACvC,CAAEhE,GAAI,EAAG+D,UAAW,OAAQC,SAAU,aAOjCC,GAAoBhK,EAAAA,EAAAA,IAAesC,EAAOpC,EAAaC,IACvD,YAAEyH,EAAW,eAAEc,IAAmBuB,EAAAA,EAAAA,GAAeD,GAEvD,OACC5I,EAAAA,EAAAA,MAAC8I,EAAAA,EAAW,CAACnF,MAAOoF,EAAAA,GAAAA,WAAAA,QAAAA,MAAAA,KAAiD7I,SAAA,EACpEC,EAAAA,EAAAA,KAAC6I,EAAAA,GAAS,CAAA9I,UACTC,EAAAA,EAAAA,KAAC8I,EAAAA,GAAa,CAAA/I,UACbC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CACVE,KAAM,CACL,CACCS,MAAOoF,EAAAA,GAAAA,WAAAA,KACPxG,GAAK,IAAGwG,EAAAA,GAAAA,WAAAA,QAET,CACCpF,MAAOoF,EAAAA,GAAAA,WAAAA,QAAAA,MAAAA,KACPxG,GAAK,IAAGwG,EAAAA,GAAAA,WAAAA,QAAAA,MAAAA,gBAMb5I,EAAAA,EAAAA,KAAC+I,EAAAA,EAAI,CAAAhJ,UACJF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQH,UACtBF,EAAAA,EAAAA,MAACmJ,EAAAA,GAAI,CAAAjJ,SAAA,EACJC,EAAAA,EAAAA,KAACiJ,EAAAA,GAAU,CAAAlJ,UACVC,EAAAA,EAAAA,KAACkJ,EAAAA,GAAS,CAACtF,KAAK,aAAY7D,UAC3BC,EAAAA,EAAAA,KAACmJ,EAAAA,GAAS,CAAApJ,SAAC,uBAGbC,EAAAA,EAAAA,KAACoJ,EAAAA,GAAQ,CAAArJ,UACRC,EAAAA,EAAAA,KAACqJ,EAAAA,GAAY,CAAAtJ,SA1IG,yoFA8InBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQH,UACtBF,EAAAA,EAAAA,MAACmJ,EAAAA,GAAI,CAAAjJ,SAAA,EACJC,EAAAA,EAAAA,KAACoJ,EAAAA,GAAQ,CAAArJ,UACRF,EAAAA,EAAAA,MAAA,SAAOK,UAAU,qBAAoBH,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAAD,UACCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACCC,EAAAA,EAAAA,KAAA,MAAIqD,MAAO,CAAEiG,MAAO,IAAKvJ,SAAEoH,KAC3BtH,EAAAA,EAAAA,MAAA,MACCe,QAASA,IAAMuH,EAAY,aAC3BjI,UAAU,2CAA0CH,SAAA,CAAC,aAC1C,KACXC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CACJrC,KAAK,KACLpB,UAAWkI,EAAiB,aAC5BxE,KAAK,mBAGP/D,EAAAA,EAAAA,MAAA,MACCe,QAASA,IAAMuH,EAAY,YAC3BjI,UAAU,2CAA0CH,SAAA,CAAC,YAC3C,KACVC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAI,CACJrC,KAAK,KACLpB,UAAWkI,EAAiB,YAC5BxE,KAAK,wBAKT5D,EAAAA,EAAAA,KAAA,SAAAD,SACE0I,EAAkB1G,KAAKuB,IACvBzD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACCC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAACmF,EAAAA,EAAM,CACNX,GAAIlB,EAAKkB,GAAG5C,WACZwD,KAAK,eACLzD,MAAO2B,EAAKkB,GACZjD,SAAU8E,EAAYe,aACtB9B,QAASe,EAAYG,OAAOI,aAAa2C,SAExCjG,EAAKkB,GAAG5C,iBAIX5B,EAAAA,EAAAA,KAAA,MAAAD,SAAKuD,EAAKiF,aACVvI,EAAAA,EAAAA,KAAA,MAAAD,SAAKuD,EAAKkF,aAdFlF,EAAKkB,cAoBlBxE,EAAAA,EAAAA,KAACV,EAAAA,GAAiB,CACjBZ,KAAMqC,EACNrB,MAAM,QACNF,eAAgBA,EAChBb,YAAaA,EACbC,QAASA,EACTa,WAAYA,gBAMJ,C","sources":["components/PaginationButtons.tsx","components/bootstrap/Breadcrumb.tsx","components/bootstrap/Option.tsx","components/bootstrap/Pagination.tsx","components/bootstrap/forms/Checks.tsx","components/bootstrap/forms/Select.tsx","hooks/useSelectTable.tsx","hooks/useSortableData.ts","pages/documentation/components/TablePage.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardFooter, CardFooterLeft, CardFooterRight } from './bootstrap/Card';\nimport Pagination, { PaginationItem } from './bootstrap/Pagination';\nimport Select from './bootstrap/forms/Select';\nimport Option from './bootstrap/Option';\n\nexport const PER_COUNT = {\n\t3: 3,\n\t5: 5,\n\t10: 10,\n\t25: 25,\n\t50: 50,\n};\n\n// export const dataPagination = (data: any[], currentPage: number, perPage: number) =>\n// \tdata.filter(\n// \t\t(i, index) => index - -1 >= (currentPage - 1) * perPage ,\n// \t);\nexport const dataPagination = (data: any[], currentPage: number, perPage: number) => {\n\tconst totalItems = data.length;\n\tconst startIndex = totalItems - (currentPage * perPage);\n\tconst endIndex = totalItems - ((currentPage - 1) * perPage);\n\t\n\t// Make sure to return only items that are within the bounds of the array\n\treturn data.slice(Math.max(startIndex, 0), Math.min(endIndex, totalItems)).reverse();\n};\n\n\n\ninterface IPaginationButtonsProps {\n\tsetCurrentPage(...args: unknown[]): unknown;\n\tcurrentPage: number;\n\tperPage: number;\n\tsetPerPage(...args: unknown[]): unknown;\n\tdata: unknown[];\n\tlabel?: string;\n}\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({\n\tsetCurrentPage,\n\tcurrentPage,\n\tperPage,\n\tsetPerPage,\n\tdata,\n\tlabel,\n}) => {\n\tconst totalItems = data.length;\n\tconst totalPage = Math.ceil(totalItems / perPage);\n\n\tconst pagination = () => {\n\t\tlet items = [];\n\n\t\tlet i = currentPage - 1;\n\t\twhile (i >= currentPage - 1 && i > 0) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage - 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti -= 1;\n\t\t}\n\n\t\titems = items.reverse();\n\n\t\titems.push(\n\t\t\t<PaginationItem key={currentPage} isActive onClick={() => setCurrentPage(currentPage)}>\n\t\t\t\t{currentPage}\n\t\t\t</PaginationItem>,\n\t\t);\n\n\t\ti = currentPage + 1;\n\t\twhile (i <= currentPage + 1 && i <= totalPage) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage + 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti += 1;\n\t\t}\n\n\t\treturn items;\n\t};\n\n\tconst getInfo = () => {\n\t\tconst start = perPage * (currentPage - 1) + 1;\n\n\t\tconst end = perPage * currentPage;\n\n\t\treturn (\n\t\t\t<span className='pagination__desc'>\n\t\t\t\tShowing {start} to {end > totalItems ? totalItems : end} of {totalItems} {label}\n\t\t\t</span>\n\t\t);\n\t};\n\n\treturn (\n\t\t<CardFooter>\n\t\t\t<CardFooterLeft>\n\t\t\t\t<span className='text-muted'>{getInfo()}</span>\n\t\t\t</CardFooterLeft>\n\n\t\t\t<CardFooterRight className='d-flex'>\n\t\t\t\t{totalPage > 1 && (\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t<Pagination ariaLabel={label}>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisFirst\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisPrev\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage - 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{currentPage - 1 > 1 && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage - 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{pagination()}\n\t\t\t\t\t\t{currentPage + 1 < totalPage && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage + 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisNext\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage + 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisLast\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(totalPage)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Pagination>\n\t\t\t\t)}\n\n\t\t\t\t<Select\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tariaLabel='Per'\n\t\t\t\t\tonChange={(e: { target: { value: string } }) => {\n\t\t\t\t\t\tsetPerPage(parseInt(e.target.value, 10));\n\t\t\t\t\t\tsetCurrentPage(1);\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={perPage.toString()}>\n\t\t\t\t\t{Object.keys(PER_COUNT).map((i) => (\n\t\t\t\t\t\t<Option key={i} value={i}>\n\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</CardFooterRight>\n\t\t</CardFooter>\n\t);\n};\nPaginationButtons.propTypes = {\n\tsetCurrentPage: PropTypes.func.isRequired,\n\tcurrentPage: PropTypes.number.isRequired,\n\tperPage: PropTypes.number.isRequired,\n\tsetPerPage: PropTypes.func.isRequired,\n\t// eslint-disable-next-line react/forbid-prop-types\n\tdata: PropTypes.array.isRequired,\n\tlabel: PropTypes.string,\n};\nPaginationButtons.defaultProps = {\n\tlabel: 'items',\n};\n\nexport default PaginationButtons;\n","import React, {\n\tChildren,\n\tcloneElement,\n\tFC,\n\tJSXElementConstructor,\n\tReactElement,\n\tReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport TagWrapper from '../TagWrapper';\nimport Icon from '../icon/Icon';\n\ninterface IBreadcrumbItemProps extends Record<string, any> {\n\tchildren: ReactNode;\n\tariaLabel?: string;\n\tclassName?: string;\n\ttag?: string;\n\tto: string;\n\tisActive?: boolean;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\n\tchildren,\n\tariaLabel,\n\tclassName,\n\ttag,\n\tto,\n\tisActive,\n\tdivider,\n}) => {\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\n\t\t\taria-current={isActive ? 'page' : null}\n\t\t\taria-label={ariaLabel || children}>\n\t\t\t{divider &&\n\t\t\t\ttypeof divider !== 'string' &&\n\t\t\t\tcloneElement(divider, {\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\n\t\t\t\t})}\n\t\t\t{isActive ? (\n\t\t\t\tchildren\n\t\t\t) : (\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\n\t\t\t\t\t{children}\n\t\t\t\t</NavLink>\n\t\t\t)}\n\t\t</TagWrapper>\n\t);\n};\nBreadcrumbItem.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tariaLabel: PropTypes.string,\n\tclassName: PropTypes.string,\n\ttag: PropTypes.string,\n\tto: PropTypes.string.isRequired,\n\tisActive: PropTypes.bool,\n\t// @ts-ignore\n\tdivider: PropTypes.node,\n};\nBreadcrumbItem.defaultProps = {\n\tclassName: undefined,\n\tariaLabel: undefined,\n\ttag: 'li',\n\tisActive: false,\n\tdivider: undefined,\n};\n\n// TODO:: children or list req\ninterface IBreadcrumbProps extends Record<string, any> {\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\n\tlist?: {\n\t\ttitle: string;\n\t\tto: string;\n\t\ttag?: 'div' | 'li';\n\t}[];\n\ttag?: 'nav' | 'div' | 'section';\n\tlistTag?: 'div' | 'ol' | 'ul';\n\titemTag?: 'div' | 'li';\n\tariaLabel?: string | null;\n\tautoActive?: boolean;\n\tisToHome?: ReactNode;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\n\tchildren,\n\tlist,\n\ttag,\n\tlistTag,\n\titemTag,\n\tariaLabel,\n\tautoActive,\n\tisToHome,\n\tdivider,\n}) => {\n\tconst DIVIDER = divider !== 'string' && divider;\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\taria-label={ariaLabel}\n\t\t\tstyle={\n\t\t\t\tdivider\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\n\t\t\t\t\t  }\n\t\t\t\t\t: null\n\t\t\t}>\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\n\t\t\t\t{isToHome && (\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\n\t\t\t\t\t\t{isToHome}\n\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t)}\n\t\t\t\t{list\n\t\t\t\t\t? list.map((item, index) => (\n\t\t\t\t\t\t\t<BreadcrumbItem\n\t\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\n\t\t\t\t\t\t\t\tto={item.to}\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\n\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t\t  ))\n\t\t\t\t\t: Children.map(children, (child, index) =>\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tcloneElement(child, {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  )}\n\t\t\t</TagWrapper>\n\t\t</TagWrapper>\n\t);\n};\nBreadcrumb.propTypes = {\n\t// @ts-ignore\n\tchildren: PropTypes.node,\n\ttag: PropTypes.oneOf(['nav', 'div', 'section']),\n\tlistTag: PropTypes.oneOf(['div', 'ol', 'ul']),\n\titemTag: PropTypes.oneOf(['div', 'li']),\n\tariaLabel: PropTypes.string,\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\ttitle: PropTypes.string.isRequired,\n\t\t\tto: PropTypes.string.isRequired,\n\t\t}),\n\t),\n\t/**\n\t * The last element is automatically activated\n\t */\n\tautoActive: PropTypes.bool,\n\t/**\n\t * Icon component or string\n\t */\n\tisToHome: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Icon component or string\n\t */\n\t// @ts-ignore\n\tdivider: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n};\nBreadcrumb.defaultProps = {\n\tchildren: undefined,\n\ttag: 'nav',\n\tlistTag: 'ol',\n\titemTag: 'li',\n\tariaLabel: 'breadcrumb',\n\tlist: undefined,\n\tautoActive: true,\n\tisToHome: <Icon icon='HolidayVillage' />,\n\tdivider: <Icon icon='ChevronRight' />,\n};\n\nexport default Breadcrumb;\n","import React, { FC, HTMLAttributes } from 'react';\nimport PropTypes from 'prop-types';\n\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\n\tchildren: string;\n\tvalue?: string | number;\n\tdisabled?: boolean;\n\tariaLabelledby?: string | null;\n}\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\n\treturn (\n\t\t<option\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\taria-labelledby={ariaLabelledby || children}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</option>\n\t);\n};\nOption.propTypes = {\n\tchildren: PropTypes.string.isRequired,\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tdisabled: PropTypes.bool,\n\tariaLabelledby: PropTypes.string,\n};\nOption.defaultProps = {\n\tdisabled: false,\n\tariaLabelledby: null,\n\tvalue: undefined,\n};\n\nexport interface IOptionsProps {\n\tlist: {\n\t\tvalue?: string | number;\n\t\ttext?: string | number;\n\t\tlabel?: string | number;\n\t}[];\n}\n// @ts-ignore\nexport const Options: FC<IOptionsProps> = ({ list }) => {\n\treturn list?.map((item) => (\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t<Option key={item.value} value={item.value} {...item}>\n\t\t\t{(item.text as string) || (item.label as string)}\n\t\t</Option>\n\t));\n};\nOptions.propTypes = {\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t).isRequired,\n};\n\nexport default Option;\n","import React, { forwardRef, HTMLAttributes, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\n\ninterface IPaginationItemProps extends HTMLAttributes<HTMLLIElement> {\n\tclassName?: string;\n\tisDisabled?: boolean;\n\tisActive?: boolean;\n\tisPrev?: boolean;\n\tisFirst?: boolean;\n\tisNext?: boolean;\n\tisLast?: boolean;\n\tchildren?: ReactNode;\n\tonClick?(...args: unknown[]): unknown | undefined;\n}\nexport const PaginationItem = forwardRef<HTMLLIElement, IPaginationItemProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tisDisabled,\n\t\t\tisActive,\n\t\t\tisPrev,\n\t\t\tisFirst,\n\t\t\tisNext,\n\t\t\tisLast,\n\t\t\tchildren,\n\t\t\tonClick,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<li\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'page-item',\n\t\t\t\t\t{\n\t\t\t\t\t\tdisabled: isDisabled,\n\t\t\t\t\t\tactive: isActive,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}>\n\t\t\t\t<span\n\t\t\t\t\trole='button'\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tonKeyDown={onClick}\n\t\t\t\t\tclassName='page-link'\n\t\t\t\t\ttabIndex={isDisabled ? -1 : undefined}\n\t\t\t\t\taria-disabled={isDisabled ? 'true' : undefined}\n\t\t\t\t\taria-label={\n\t\t\t\t\t\t(isPrev && 'First Page') || (isNext && 'Last Page') || `${children} page`\n\t\t\t\t\t}>\n\t\t\t\t\t{isPrev && <Icon icon='ChevronLeft' />}\n\t\t\t\t\t{isFirst && <Icon icon='FirstPage' />}\n\t\t\t\t\t{isNext && <Icon icon='ChevronRight' />}\n\t\t\t\t\t{isLast && <Icon icon='LastPage' />}\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t);\n\t},\n);\nPaginationItem.displayName = 'PaginationItem';\nPaginationItem.propTypes = {\n\tclassName: PropTypes.string,\n\tisDisabled: PropTypes.bool,\n\tisActive: PropTypes.bool,\n\tisPrev: PropTypes.bool,\n\tisFirst: PropTypes.bool,\n\tisNext: PropTypes.bool,\n\tisLast: PropTypes.bool,\n\tchildren: PropTypes.node,\n\tonClick: PropTypes.func,\n};\nPaginationItem.defaultProps = {\n\tclassName: undefined,\n\tisDisabled: false,\n\tisActive: false,\n\tisPrev: false,\n\tisFirst: false,\n\tisNext: false,\n\tisLast: false,\n\tchildren: null,\n\tonClick: undefined,\n};\n\ninterface IPaginationProps extends HTMLAttributes<HTMLElement> {\n\tariaLabel: string;\n\tchildren:\n\t\t| ReactElement<IPaginationItemProps>\n\t\t| ReactElement<IPaginationItemProps>[]\n\t\t| ReactNode\n\t\t| ReactNode[];\n\tclassName?: string | undefined;\n\tsize?: 'sm' | 'lg' | null;\n}\nconst Pagination = forwardRef<HTMLDivElement, IPaginationProps>(\n\t({ ariaLabel, className, children, size, ...props }, ref) => {\n\t\treturn (\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t<nav ref={ref} aria-label={ariaLabel} className={className} {...props}>\n\t\t\t\t<ul className={classNames('pagination', { [`pagination-${size}`]: size }, 'm-0')}>\n\t\t\t\t\t{children}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t},\n);\nPagination.displayName = 'Pagination';\nPagination.propTypes = {\n\tariaLabel: PropTypes.string.isRequired,\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n\tsize: PropTypes.oneOf(['sm', 'lg']),\n};\nPagination.defaultProps = {\n\tclassName: undefined,\n\tsize: null,\n};\n\nexport default Pagination;\n","import React, {\n\tChildren,\n\tcloneElement,\n\tforwardRef,\n\tHTMLAttributes,\n\tReactElement,\n\tReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Validation from './Validation';\n\ninterface IChecksGroupProps extends HTMLAttributes<HTMLDivElement> {\n\tid?: string | undefined;\n\tclassName?: string;\n\tchildren: ReactElement<IChecksProps> | ReactElement<IChecksProps>[];\n\tisInline?: boolean;\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisTooltipFeedback?: boolean;\n}\nexport const ChecksGroup = forwardRef<HTMLDivElement, IChecksGroupProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\tisInline,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisTooltipFeedback,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tref={ref}\n\t\t\t\t\tid={id}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...props}>\n\t\t\t\t\t{Children.map(children, (child) =>\n\t\t\t\t\t\tcloneElement(child, {\n\t\t\t\t\t\t\tisInline: child.props.isInline || isInline,\n\t\t\t\t\t\t\tisValid,\n\t\t\t\t\t\t\tisTouched,\n\t\t\t\t\t\t\tinvalidFeedback,\n\t\t\t\t\t\t\tvalidFeedback,\n\t\t\t\t\t\t\tisTooltipFeedback,\n\t\t\t\t\t\t\tisValidMessage: false,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<Validation\n\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t},\n);\nChecksGroup.displayName = 'ChecksGroup';\nChecksGroup.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\t// @ts-ignore\n\tchildren: PropTypes.node.isRequired,\n\tisInline: PropTypes.bool,\n\tisTouched: PropTypes.bool,\n\tisValid: PropTypes.bool,\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisTooltipFeedback: PropTypes.bool,\n};\nChecksGroup.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tisInline: false,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisTooltipFeedback: false,\n};\n\nexport interface IChecksProps extends HTMLAttributes<HTMLInputElement> {\n\tid?: string | undefined;\n\tclassName?: string;\n\tname?: string | null;\n\ttype?: 'checkbox' | 'radio' | 'switch';\n\tlabel?: ReactNode;\n\tvalue?: string | number;\n\tchecked?: boolean | string;\n\tdisabled?: boolean;\n\tisInline?: boolean;\n\tisFormCheckInput?: boolean;\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisValidMessage?: boolean;\n\tisTooltipFeedback?: boolean;\n\tonBlur?(...args: unknown[]): unknown;\n\tonChange?(...args: unknown[]): unknown;\n\tonFocus?(...args: unknown[]): unknown;\n\tonInput?(...args: unknown[]): unknown;\n\tonInvalid?(...args: unknown[]): unknown;\n\tonSelect?(...args: unknown[]): unknown;\n\tariaLabel?: string;\n}\nconst Checks = forwardRef<HTMLInputElement, IChecksProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tclassName,\n\t\t\tname,\n\t\t\ttype,\n\t\t\tlabel,\n\t\t\tvalue,\n\t\t\tchecked,\n\t\t\tdisabled,\n\t\t\tisInline,\n\t\t\tisFormCheckInput,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisValidMessage,\n\t\t\tisTooltipFeedback,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonInput,\n\t\t\tonInvalid,\n\t\t\tonSelect,\n\t\t\tariaLabel,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst INNER = (\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'form-check-input',\n\t\t\t\t\t{\n\t\t\t\t\t\t'mt-0': isFormCheckInput,\n\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\tname={name === null ? id : name}\n\t\t\t\ttype={type === 'radio' ? 'radio' : 'checkbox'}\n\t\t\t\tid={id}\n\t\t\t\tvalue={value}\n\t\t\t\tchecked={type === 'radio' ? checked === value : !!checked}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonInput={onInput}\n\t\t\t\tonInvalid={onInvalid}\n\t\t\t\tonSelect={onSelect}\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t);\n\n\t\tif (isFormCheckInput) {\n\t\t\treturn INNER;\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames('form-check', {\n\t\t\t\t\t'form-switch': type === 'switch',\n\t\t\t\t\t'form-check-inline': isInline,\n\t\t\t\t})}>\n\t\t\t\t{INNER}\n\t\t\t\t{label && (\n\t\t\t\t\t<label className='form-check-label' htmlFor={id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t\t{isValidMessage && (\n\t\t\t\t\t<Validation\n\t\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n);\nChecks.displayName = 'Checks';\nChecks.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\tname: PropTypes.string,\n\ttype: PropTypes.oneOf(['checkbox', 'radio', 'switch']),\n\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t// eslint-disable-next-line react/require-default-props\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tchecked: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\tdisabled: PropTypes.bool,\n\tisInline: PropTypes.bool,\n\tisFormCheckInput: PropTypes.bool,\n\tisTouched: PropTypes.bool,\n\tisValid: PropTypes.bool,\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisValidMessage: PropTypes.bool,\n\tisTooltipFeedback: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonFocus: PropTypes.func,\n\tonInput: PropTypes.func,\n\tonInvalid: PropTypes.func,\n\tonSelect: PropTypes.func,\n\tariaLabel: PropTypes.string,\n};\nChecks.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tname: null,\n\ttype: 'checkbox',\n\tlabel: null,\n\tchecked: false,\n\tdisabled: false,\n\tisInline: false,\n\tisFormCheckInput: false,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisValidMessage: true,\n\tisTooltipFeedback: false,\n\tonBlur: undefined,\n\tonChange: undefined,\n\tonFocus: undefined,\n\tonInput: undefined,\n\tonInvalid: undefined,\n\tonSelect: undefined,\n\tariaLabel: undefined,\n};\n\nexport default Checks;\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Option, { IOptionsProps, Options } from '../Option';\nimport Validation from './Validation';\n\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\n\tid?: string;\n\tclassName?: string;\n\tname?: string;\n\tchildren?: ReactNode;\n\tariaLabel: string;\n\tplaceholder?: string;\n\tsize?: 'lg' | 'sm';\n\tmultiple?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\tariaDescribedby?: string;\n\tariaLabelledby?: string;\n\ttitle?: string;\n\tvalue?: string | string[];\n\tdefaultValue?: string | string[];\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisValidMessage?: boolean;\n\tisTooltipFeedback?: boolean;\n\tonBlur?(...args: unknown[]): unknown;\n\tonChange?(...args: unknown[]): unknown;\n\tonFocus?(...args: unknown[]): unknown;\n\tonInput?(...args: unknown[]): unknown;\n\tonInvalid?(...args: unknown[]): unknown;\n\tonSelect?(...args: unknown[]): unknown;\n}\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tname,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\trequired,\n\t\t\tplaceholder,\n\t\t\tariaDescribedby,\n\t\t\tariaLabelledby,\n\t\t\tariaLabel,\n\t\t\tlist,\n\t\t\tmultiple,\n\t\t\ttitle,\n\t\t\tsize,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisValidMessage,\n\t\t\tisTooltipFeedback,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonInput,\n\t\t\tonInvalid,\n\t\t\tonSelect,\n\t\t\t...props\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select\n\t\t\t\t\tref={ref}\n\t\t\t\t\tid={id}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'form-select',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\tname={name}\n\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\taria-describedby={ariaDescribedby}\n\t\t\t\t\taria-labelledby={ariaLabelledby}\n\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\trequired={required}\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tonInput={onInput}\n\t\t\t\t\tonInvalid={onInvalid}\n\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...props}>\n\t\t\t\t\t{placeholder && (\n\t\t\t\t\t\t<Option value='' hidden>\n\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t)}\n\t\t\t\t\t{children || (list && <Options list={list} />)}\n\t\t\t\t</select>\n\t\t\t\t{isValidMessage && (\n\t\t\t\t\t<Validation\n\t\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t},\n);\nSelect.displayName = 'Select';\nSelect.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\t/**\n\t * If the name value is left blank, the id value is assigned.\n\t */\n\tname: PropTypes.string,\n\tchildren: PropTypes.node,\n\tariaLabel: PropTypes.string.isRequired,\n\tplaceholder: PropTypes.string,\n\tsize: PropTypes.oneOf(['lg', 'sm']),\n\tmultiple: PropTypes.bool,\n\t/**\n\t * A *disabled* element isn't editable and isn't sent on submit.\n\t */\n\tdisabled: PropTypes.bool,\n\trequired: PropTypes.bool,\n\tariaDescribedby: PropTypes.string,\n\tariaLabelledby: PropTypes.string,\n\ttitle: PropTypes.string,\n\t/**\n\t * For formik ***`formik.values.ID_OR_NAME`***\n\t */\n\t// @ts-ignore\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tdefaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t),\n\t/**\n\t * For formik ***`formik.touched.ID_OR_NAME`***\n\t */\n\tisTouched: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.isValid`***\n\t */\n\tisValid: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.errors.ID_OR_NAME`***\n\t */\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisValidMessage: PropTypes.bool,\n\tisTooltipFeedback: PropTypes.bool,\n\t/**\n\t * Fires the moment that the element loses focus. For formik ***`formik.handleBlur`***\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * Fires the moment when the value of the element is changed. For formik ***`formik.handleChange`***\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Fires the moment when the element gets focus\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Script to be run when an element gets user input\n\t */\n\tonInput: PropTypes.func,\n\t/**\n\t * Script to be run when an element is invalid\n\t */\n\tonInvalid: PropTypes.func,\n\t/**\n\t * Fires after some text has been selected in an element\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * More information, [react-input-mask](https://github.com/sanniassin/react-input-mask#react-input-mask).\n\t */\n};\nSelect.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tname: undefined,\n\tchildren: null,\n\tplaceholder: undefined,\n\tmultiple: false,\n\tsize: undefined,\n\tdisabled: false,\n\trequired: false,\n\tariaDescribedby: undefined,\n\tariaLabelledby: undefined,\n\ttitle: undefined,\n\tvalue: undefined,\n\tdefaultValue: undefined,\n\tlist: undefined,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisValidMessage: true,\n\tisTooltipFeedback: false,\n\tonBlur: undefined,\n\tonChange: undefined,\n\tonFocus: undefined,\n\tonInput: undefined,\n\tonInvalid: undefined,\n\tonSelect: undefined,\n};\n\nexport default Select;\n","import React, { useEffect, useRef } from 'react';\nimport { FormikHelpers, useFormik } from 'formik';\nimport Checks from '../components/bootstrap/forms/Checks';\n\nconst useSelectTable = (data: any[]) => {\n\tconst selectTable = useFormik({\n\t\tonSubmit<Values>(\n\t\t\tvalues: Values,\n\t\t\tformikHelpers: FormikHelpers<Values>,\n\t\t): void | Promise<any> {\n\t\t\treturn undefined;\n\t\t},\n\t\tinitialValues: {\n\t\t\tselectAll: false,\n\t\t\tselectedList: [],\n\t\t},\n\t});\n\n\t// Update Select List\n\tuseEffect(() => {\n\t\tif (selectTable.values.selectAll) {\n\t\t\tselectTable.setValues({\n\t\t\t\t...selectTable.values,\n\t\t\t\t// @ts-ignore\n\t\t\t\tselectedList: data.map((d) => d.id.toString()),\n\t\t\t});\n\t\t} else {\n\t\t\tselectTable.setValues({\n\t\t\t\t...selectTable.values,\n\t\t\t\tselectedList: [],\n\t\t\t});\n\t\t}\n\t\treturn () => {};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [selectTable.values.selectAll]);\n\n\t// Select All -- indeterminate\n\tconst ref = useRef<HTMLInputElement>(null);\n\tuseEffect(() => {\n\t\tif (ref.current) {\n\t\t\tif (\n\t\t\t\t!!selectTable.values.selectedList.length &&\n\t\t\t\tselectTable.values.selectedList.length !== data.map((d) => d.id.toString()).length\n\t\t\t) {\n\t\t\t\tref.current.checked = false;\n\t\t\t\tref.current.indeterminate = true;\n\t\t\t} else if (\n\t\t\t\tselectTable.values.selectedList.length === data.map((d) => d.id.toString()).length\n\t\t\t) {\n\t\t\t\tref.current.checked = true;\n\t\t\t\tref.current.indeterminate = false;\n\t\t\t} else if (selectTable.values.selectedList.length === 0) {\n\t\t\t\tref.current.checked = false;\n\t\t\t\tref.current.indeterminate = false;\n\t\t\t}\n\t\t}\n\t}, [selectTable.values.selectAll, selectTable.values.selectedList, data]);\n\n\tconst SelectAllCheck = (\n\t\t<Checks\n\t\t\tref={ref}\n\t\t\tid='selectAll'\n\t\t\tonChange={selectTable.handleChange}\n\t\t\tchecked={selectTable.values.selectAll}\n\t\t\tariaLabel='Select All'\n\t\t/>\n\t);\n\n\tconst selectItemHandleChange = selectTable.handleChange;\n\tconst selectedIdList = selectTable.values.selectedList;\n\n\treturn { selectTable, selectItemHandleChange, selectedIdList, SelectAllCheck };\n};\nexport default useSelectTable;\n","import { useMemo, useState } from 'react';\n\nconst useSortableData = (items: any[], config = null) => {\n\tconst [sortConfig, setSortConfig] = useState(config);\n\n\tconst sortedItems = useMemo(() => {\n\t\tconst sortableItems = [...items];\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t}\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, sortConfig]);\n\n\tconst requestSort = (key: any) => {\n\t\tlet direction = 'ascending';\n\t\t// @ts-ignore\n\t\tif (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\t// @ts-ignore\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\tconst getClassNamesFor = (key: any) => {\n\t\tif (!sortConfig) {\n\t\t\treturn 'd-none';\n\t\t}\n\t\t// eslint-disable-next-line consistent-return\n\t\t// @ts-ignore\n\t\treturn sortConfig.key === key ? sortConfig.direction : 'd-none';\n\t};\n\n\treturn { items: sortedItems, requestSort, getClassNamesFor, sortConfig };\n};\n\nexport default useSortableData;\n","import React, { useState } from 'react';\nimport { componentPagesMenu } from '../../../menu';\nimport SubHeader, { SubHeaderLeft } from '../../../layout/SubHeader/SubHeader';\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\nimport Page from '../../../layout/Page/Page';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport Card, {\n\tCardBody,\n\tCardCodeView,\n\tCardHeader,\n\tCardLabel,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport useSortableData from '../../../hooks/useSortableData';\nimport PaginationButtons, { dataPagination } from '../../../components/PaginationButtons';\nimport useSelectTable from '../../../hooks/useSelectTable';\nimport Checks from '../../../components/bootstrap/forms/Checks';\nimport Icon from '../../../components/icon/Icon';\n\nconst TablePage = () => {\n\tconst GENERAL_USAGE = `\nconst Foo = () => {\n\tconst data = [\n\t\t{id: 1, firstName: 'John', lastName: 'Doe' },\n\t\t{id: 2, firstName: 'Ella', lastName: 'Oliver' },\n\t\t{id: 3, firstName: 'Sam', lastName: 'Roberts' },\n\t\t{id: 4, firstName: 'Grace', lastName: 'Buckland' },\n\t\t{id: 5, firstName: 'Jane', lastName: 'Lee' },\n\t\t{id: 6, firstName: 'Chloe', lastName: 'Walker' },\n\t\t{id: 7, firstName: 'Ryan', lastName: 'McGrath' },\n\t];\n\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [perPage, setPerPage] = useState(10);\n\n\tconst { items, requestSort, getClassNamesFor } = useSortableData(filteredData);\n\t/**\n\t  *\n\t  * items: Array\n\t  * requestSort: Function\n\t  * getClassNamesFor: Function\n\t  *\n\t  */\n\tconst onCurrentPageData = dataPagination(items, currentPage, perPage);\n\t/**\n\t  *\n\t  * onCurrentPageData: Array\n\t  *\n\t  */\n\tconst { selectTable, SelectAllCheck } = useSelectTable(onCurrentPageData);\n\t/**\n\t  *\n\t  * selectTable: Object\n\t  * SelectAllCheck: Node\n\t  *\n\t  */\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardBody>\n\t\t\t\t<table>\n\t\t\t\t\t<thead className='table table-modern'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>{SelectAllCheck}</th>\n\t\t\t\t\t\t\t<th onClick={() => requestSort('firstName')}>\n\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('firstName')}\n\t\t\t\t\t\t\t\t\ticon='FilterList'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th onClick={() => requestSort('lastName')}>\n\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('lastName')}\n\t\t\t\t\t\t\t\t\ticon='FilterList'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{onCurrentPageData.map((item) => (\n\t\t\t\t\t\t\t<tr key={item.id.toString()}>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Checks\n\t\t\t\t\t\t\t\t\t\tid={item.id.toString()}\n\t\t\t\t\t\t\t\t\t\tname='selectedList'\n\t\t\t\t\t\t\t\t\t\tvalue={item.id}\n\t\t\t\t\t\t\t\t\t\tonChange={selectTable.handleChange}\n\t\t\t\t\t\t\t\t\t\tchecked={selectTable.values.selectedList.includes( item.id.toString() )}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{item.firstName}</td>\n\t\t\t\t\t\t\t\t<td>{item.lastName}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</CardBody>\n\t\t\t<PaginationButtons\n\t\t\t\tdata={items}\n\t\t\t\tlabel='items'\n\t\t\t\tsetCurrentPage={setCurrentPage}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tperPage={perPage}\n\t\t\t\tsetPerPage={setPerPage}\n\t\t\t/>\n\t\t</Card>\n\t);\n}`;\n\n\tconst data = [\n\t\t{ id: 1, firstName: 'John', lastName: 'Doe' },\n\t\t{ id: 2, firstName: 'Ella', lastName: 'Oliver' },\n\t\t{ id: 3, firstName: 'Sam', lastName: 'Roberts' },\n\t\t{ id: 4, firstName: 'Grace', lastName: 'Buckland' },\n\t\t{ id: 5, firstName: 'Jane', lastName: 'Lee' },\n\t\t{ id: 6, firstName: 'Chloe', lastName: 'Walker' },\n\t\t{ id: 7, firstName: 'Ryan', lastName: 'McGrath' },\n\t];\n\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [perPage, setPerPage] = useState(3);\n\n\tconst { items, requestSort, getClassNamesFor } = useSortableData(data);\n\tconst onCurrentPageData = dataPagination(items, currentPage, perPage);\n\tconst { selectTable, SelectAllCheck } = useSelectTable(onCurrentPageData);\n\n\treturn (\n\t\t<PageWrapper title={componentPagesMenu.components.subMenu.table.text}>\n\t\t\t<SubHeader>\n\t\t\t\t<SubHeaderLeft>\n\t\t\t\t\t<Breadcrumb\n\t\t\t\t\t\tlist={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.text,\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.path}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.subMenu.table.text,\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.subMenu.table.path}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</SubHeaderLeft>\n\t\t\t</SubHeader>\n\t\t\t<Page>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='Assignment'>\n\t\t\t\t\t\t\t\t\t<CardTitle>General Usage</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardCodeView>{GENERAL_USAGE}</CardCodeView>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<table className='table table-modern'>\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: 50 }}>{SelectAllCheck}</th>\n\t\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => requestSort('firstName')}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cursor-pointer text-decoration-underline'>\n\t\t\t\t\t\t\t\t\t\t\t\tFirst Name{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('firstName')}\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='FilterList'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => requestSort('lastName')}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cursor-pointer text-decoration-underline'>\n\t\t\t\t\t\t\t\t\t\t\t\tLast Name{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('lastName')}\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='FilterList'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{onCurrentPageData.map((item) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checks\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={item.id.toString()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='selectedList'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={selectTable.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={selectTable.values.selectedList.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.id.toString(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.firstName}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.lastName}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<PaginationButtons\n\t\t\t\t\t\t\t\tdata={items}\n\t\t\t\t\t\t\t\tlabel='items'\n\t\t\t\t\t\t\t\tsetCurrentPage={setCurrentPage}\n\t\t\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\t\t\tperPage={perPage}\n\t\t\t\t\t\t\t\tsetPerPage={setPerPage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default TablePage;\n"],"names":["PER_COUNT","dataPagination","data","currentPage","perPage","totalItems","length","startIndex","endIndex","slice","Math","max","min","reverse","PaginationButtons","_ref","setCurrentPage","setPerPage","label","totalPage","ceil","_jsxs","CardFooter","children","_jsx","CardFooterLeft","className","getInfo","start","end","CardFooterRight","Pagination","ariaLabel","PaginationItem","isFirst","isDisabled","onClick","isPrev","pagination","items","i","push","isActive","isNext","isLast","Select","size","onChange","e","parseInt","target","value","toString","Object","keys","map","Option","defaultProps","BreadcrumbItem","tag","to","divider","TagWrapper","classNames","active","cloneElement","props","NavLink","undefined","Breadcrumb","_ref2","list","listTag","itemTag","autoActive","isToHome","DIVIDER","style","item","index","title","Children","child","Icon","icon","disabled","ariaLabelledby","Options","text","forwardRef","ref","role","onKeyDown","tabIndex","displayName","ChecksGroup","id","isInline","isValid","isTouched","invalidFeedback","validFeedback","isTooltipFeedback","_Fragment","isValidMessage","Validation","isTooltip","Checks","name","type","checked","isFormCheckInput","onBlur","onFocus","onInput","onInvalid","onSelect","INNER","htmlFor","required","placeholder","ariaDescribedby","multiple","defaultValue","hidden","selectTable","useFormik","onSubmit","values","formikHelpers","initialValues","selectAll","selectedList","useEffect","setValues","d","useRef","current","indeterminate","SelectAllCheck","handleChange","selectItemHandleChange","selectedIdList","config","arguments","sortConfig","setSortConfig","useState","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","TablePage","useSortableData","firstName","lastName","onCurrentPageData","useSelectTable","PageWrapper","componentPagesMenu","SubHeader","SubHeaderLeft","Page","Card","CardHeader","CardLabel","CardTitle","CardBody","CardCodeView","width","includes"],"sourceRoot":""}