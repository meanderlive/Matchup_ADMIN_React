{"version":3,"file":"static/js/637.b9772803.chunk.js","mappings":"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","sources":["common/data/dummyCustomerData.ts","common/data/enumPaymentMethod.ts","components/PaginationButtons.tsx","components/bootstrap/Option.tsx","components/bootstrap/Pagination.tsx","components/bootstrap/forms/Select.tsx","hooks/useSortableData.ts","pages/project_pages/Finance_Admin/Edit_FinanceAdmin.tsx","pages/project_pages/Finance_Admin/Add_FinanceAdmin.tsx","pages/project_pages/Finance_Admin/Delete_FinanceAdmin.tsx","pages/project_pages/Finance_Admin/ActiveUser.tsx","pages/project_pages/Finance_Admin/Finance_Admin.tsx"],"sourcesContent":["import dayjs, { Dayjs } from 'dayjs';\nimport PAYMENTS from './enumPaymentMethod';\nimport UserImage from '../../assets/img/wanna/wanna1.png';\nimport UserImageWebp from '../../assets/img/wanna/wanna1.webp';\nimport UserImage2 from '../../assets/img/wanna/wanna2.png';\nimport UserImage2Webp from '../../assets/img/wanna/wanna2.webp';\nimport UserImage3 from '../../assets/img/wanna/wanna3.png';\nimport UserImage3Webp from '../../assets/img/wanna/wanna3.webp';\nimport UserImage4 from '../../assets/img/wanna/wanna4.png';\nimport UserImage4Webp from '../../assets/img/wanna/wanna4.webp';\nimport UserImage5 from '../../assets/img/wanna/wanna5.png';\nimport UserImage5Webp from '../../assets/img/wanna/wanna5.webp';\nimport UserImage6 from '../../assets/img/wanna/wanna6.png';\nimport UserImage6Webp from '../../assets/img/wanna/wanna6.webp';\nimport UserImage7 from '../../assets/img/wanna/wanna7.png';\nimport UserImage7Webp from '../../assets/img/wanna/wanna7.webp';\n\nconst data: {\n\tid: number;\n\tname: string;\n\temail: string;\n\ttype: string;\n\tmembershipDate: Dayjs;\n\tbalance: number;\n\tpayout: string;\n\tsrc: string;\n\tsrcSet: string;\n\tisOnline?: boolean;\n\tstreetAddress: string;\n\tstreetAddress2: string;\n\tcity: string;\n\tstate: string;\n\tstateFull: string;\n\tzip: string;\n\tstreetAddressDelivery: string;\n\tstreetAddress2Delivery: string;\n\tcityDelivery: string;\n\tstateDelivery: string;\n\tstateFullDelivery: string;\n\tzipDelivery: string;\n\tphone: string;\n\tlatitude: string;\n\tlongitude: string;\n}[] = [\n\t{\n\t\tid: 1,\n\t\tname: 'Jennifer Ferriera',\n\t\temail: 'JenniferFerriera@dayrep.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-1, 'month'),\n\t\tbalance: 580,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage3,\n\t\tsrcSet: UserImage3Webp,\n\t\tstreetAddress: '245 May Street',\n\t\tstreetAddress2: '',\n\t\tcity: 'Ashland',\n\t\tstate: 'KY',\n\t\tstateFull: 'Kentucky',\n\t\tzip: '41101',\n\t\tstreetAddressDelivery: '245 May Street',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Ashland',\n\t\tstateDelivery: 'KY',\n\t\tstateFullDelivery: 'Kentucky',\n\t\tzipDelivery: '41101',\n\t\tphone: '606-694-1746',\n\t\tlatitude: '38.573860',\n\t\tlongitude: '-82.636566',\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'Ashley M. Maclin',\n\t\temail: 'AshleyMMaclin@dayrep.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 124,\n\t\tpayout: PAYMENTS.SWIFT.name,\n\t\tsrc: UserImage5,\n\t\tsrcSet: UserImage5Webp,\n\t\tstreetAddress: '1296 Sunny Glen Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'Cleveland',\n\t\tstate: 'OH',\n\t\tstateFull: 'Ohio',\n\t\tzip: '44114',\n\t\tstreetAddressDelivery: '1296 Sunny Glen Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Cleveland',\n\t\tstateDelivery: 'OH',\n\t\tstateFullDelivery: 'Ohio',\n\t\tzipDelivery: '44114',\n\t\tphone: '216-835-3496',\n\t\tlatitude: '41.493382',\n\t\tlongitude: '-81.703659',\n\t},\n\t{\n\t\tid: 3,\n\t\tname: 'Katie A. Ruiz',\n\t\temail: 'KatieARuiz@rhyta.com',\n\t\ttype: 'Elite Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 1089,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage6,\n\t\tsrcSet: UserImage6Webp,\n\t\tstreetAddress: '2463 Daffodil Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'Lorton',\n\t\tstate: 'VA',\n\t\tstateFull: 'Virginia',\n\t\tzip: '22079',\n\t\tstreetAddressDelivery: '2463 Daffodil Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Lorton',\n\t\tstateDelivery: 'VA',\n\t\tstateFullDelivery: 'Virginia',\n\t\tzipDelivery: '22079',\n\t\tphone: '703-446-6588',\n\t\tlatitude: '38.752754',\n\t\tlongitude: '-77.172539',\n\t},\n\t{\n\t\tid: 4,\n\t\tname: 'Felix L. Harley',\n\t\temail: 'FelixLHarley@rhyta.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 120,\n\t\tpayout: PAYMENTS.PAYONEER.name,\n\t\tsrc: UserImage4,\n\t\tsrcSet: UserImage4Webp,\n\t\tisOnline: true,\n\t\tstreetAddress: '3785 Boone Crockett Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'Bremerton',\n\t\tstate: 'WA',\n\t\tstateFull: 'Washington',\n\t\tzip: '98337',\n\t\tstreetAddressDelivery: '3785 Boone Crockett Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Bremerton',\n\t\tstateDelivery: 'WA',\n\t\tstateFullDelivery: 'Washington',\n\t\tzipDelivery: '98337',\n\t\tphone: '360-478-3198',\n\t\tlatitude: '47.565636',\n\t\tlongitude: '-122.731689',\n\t},\n\t{\n\t\tid: 5,\n\t\tname: 'Frances Berry',\n\t\temail: 'FrancesBerry@armyspy.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 890,\n\t\tpayout: PAYMENTS.SWIFT.name,\n\t\tsrc: UserImage7,\n\t\tsrcSet: UserImage7Webp,\n\t\tstreetAddress: '4941 Petunia Way',\n\t\tstreetAddress2: '',\n\t\tcity: 'Hueytown',\n\t\tstate: 'AL',\n\t\tstateFull: 'Alabama',\n\t\tzip: '35023',\n\t\tstreetAddressDelivery: '4941 Petunia Way',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Hueytown',\n\t\tstateDelivery: 'AL',\n\t\tstateFullDelivery: 'Alabama',\n\t\tzipDelivery: '35023',\n\t\tphone: '205-744-3577',\n\t\tlatitude: '33.471535',\n\t\tlongitude: '-86.999886',\n\t},\n\t{\n\t\tid: 6,\n\t\tname: 'Jonathan B. Richardson',\n\t\temail: 'JonathanBRichardson@teleworm.us',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 437,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage,\n\t\tsrcSet: UserImageWebp,\n\t\tstreetAddress: '2248 Sigley Road',\n\t\tstreetAddress2: '',\n\t\tcity: 'Topeka',\n\t\tstate: 'KS',\n\t\tstateFull: 'Kansas',\n\t\tzip: '66608',\n\t\tstreetAddressDelivery: '2248 Sigley Road',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Topeka',\n\t\tstateDelivery: 'KS',\n\t\tstateFullDelivery: 'Kansas',\n\t\tzipDelivery: '66608',\n\t\tphone: '785-575-8814',\n\t\tlatitude: '39.049568',\n\t\tlongitude: '-95.731155',\n\t},\n\t{\n\t\tid: 7,\n\t\tname: 'Patrick M. Whitaker',\n\t\temail: 'PatrickMWhitaker@armyspy.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 678,\n\t\tpayout: PAYMENTS.PAYONEER.name,\n\t\tsrc: UserImage4,\n\t\tsrcSet: UserImage4Webp,\n\t\tstreetAddress: '3392 Melm Street',\n\t\tstreetAddress2: '',\n\t\tcity: 'Wellborn',\n\t\tstate: 'FL',\n\t\tstateFull: 'Florida',\n\t\tzip: '32094',\n\t\tstreetAddressDelivery: '3392 Melm Street',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Wellborn',\n\t\tstateDelivery: 'FL',\n\t\tstateFullDelivery: 'Florida',\n\t\tzipDelivery: '32094',\n\t\tphone: '386-963-2938',\n\t\tlatitude: '30.145744',\n\t\tlongitude: '-82.792900',\n\t},\n\t{\n\t\tid: 8,\n\t\tname: 'Arthur S. Meyer',\n\t\temail: 'ArthurSMeyer@rhyta.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 703,\n\t\tpayout: PAYMENTS.PAYONEER.name,\n\t\tsrc: UserImage2,\n\t\tsrcSet: UserImage2Webp,\n\t\tstreetAddress: '4558 Dancing Dove Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'New York',\n\t\tstate: 'NY',\n\t\tstateFull: 'New York',\n\t\tzip: '10013',\n\t\tstreetAddressDelivery: '4558 Dancing Dove Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'New York',\n\t\tstateDelivery: 'NY',\n\t\tstateFullDelivery: 'New York',\n\t\tzipDelivery: '10013',\n\t\tphone: '347-584-6730',\n\t\tlatitude: '40.731033',\n\t\tlongitude: '-73.981125',\n\t},\n\t{\n\t\tid: 9,\n\t\tname: 'Frances L. Wilson',\n\t\temail: 'FrancesLWilson@jourrapide.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 389,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage6,\n\t\tsrcSet: UserImage6Webp,\n\t\tstreetAddress: '1946 Juniper Drive',\n\t\tstreetAddress2: '',\n\t\tcity: 'Mount Pleasant',\n\t\tstate: 'MI',\n\t\tstateFull: 'Michigan',\n\t\tzip: '48858',\n\t\tstreetAddressDelivery: '1946 Juniper Drive',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Mount Pleasant',\n\t\tstateDelivery: 'MI',\n\t\tstateFullDelivery: 'Michigan',\n\t\tzipDelivery: '48858',\n\t\tphone: '989-817-2934',\n\t\tlatitude: '43.598652',\n\t\tlongitude: '-84.722626',\n\t},\n\t{\n\t\tid: 10,\n\t\tname: 'Jayden Holloway',\n\t\temail: 'JaydenHolloway@rhyta.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 943,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage2,\n\t\tsrcSet: UserImage2Webp,\n\t\tstreetAddress: '4904 Cerullo Road',\n\t\tstreetAddress2: '',\n\t\tcity: 'Louisville',\n\t\tstate: 'KY',\n\t\tstateFull: 'Kentucky',\n\t\tzip: '40299',\n\t\tstreetAddressDelivery: '4904 Cerullo Road',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Louisville',\n\t\tstateDelivery: 'KY',\n\t\tstateFullDelivery: 'Kentucky',\n\t\tzipDelivery: '40299',\n\t\tphone: '502-475-8381',\n\t\tlatitude: '38.118217',\n\t\tlongitude: '-85.580116',\n\t},\n\t{\n\t\tid: 11,\n\t\tname: 'Leon Moran',\n\t\temail: 'LeonMoran@teleworm.us',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 738,\n\t\tpayout: PAYMENTS.SWIFT.name,\n\t\tsrc: UserImage4,\n\t\tsrcSet: UserImage4Webp,\n\t\tstreetAddress: '111 Brannon Street',\n\t\tstreetAddress2: '',\n\t\tcity: 'City Of Commerce',\n\t\tstate: 'CA',\n\t\tstateFull: 'California',\n\t\tzip: '90040',\n\t\tstreetAddressDelivery: '111 Brannon Street',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'City Of Commerce',\n\t\tstateDelivery: 'CA',\n\t\tstateFullDelivery: 'California',\n\t\tzipDelivery: '90040',\n\t\tphone: '213-280-6792',\n\t\tlatitude: '34.001846',\n\t\tlongitude: '-118.092308',\n\t},\n];\nexport default data;\n","const PAYMENTS: { [key: string]: { name: string } } = {\n\tPAYPAL: {\n\t\tname: 'PayPal',\n\t},\n\tPAYONEER: {\n\t\tname: 'Payoneer',\n\t},\n\tSWIFT: {\n\t\tname: 'Swift',\n\t},\n};\n\nexport default PAYMENTS;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardFooter, CardFooterLeft, CardFooterRight } from './bootstrap/Card';\nimport Pagination, { PaginationItem } from './bootstrap/Pagination';\nimport Select from './bootstrap/forms/Select';\nimport Option from './bootstrap/Option';\n\nexport const PER_COUNT = {\n\t3: 3,\n\t5: 5,\n\t10: 10,\n\t25: 25,\n\t50: 50,\n};\n\n// export const dataPagination = (data: any[], currentPage: number, perPage: number) =>\n// \tdata.filter(\n// \t\t(i, index) => index - -1 >= (currentPage - 1) * perPage ,\n// \t);\nexport const dataPagination = (data: any[], currentPage: number, perPage: number) => {\n\tconst totalItems = data.length;\n\tconst startIndex = totalItems - (currentPage * perPage);\n\tconst endIndex = totalItems - ((currentPage - 1) * perPage);\n\t\n\t// Make sure to return only items that are within the bounds of the array\n\treturn data.slice(Math.max(startIndex, 0), Math.min(endIndex, totalItems)).reverse();\n};\n\n\n\ninterface IPaginationButtonsProps {\n\tsetCurrentPage(...args: unknown[]): unknown;\n\tcurrentPage: number;\n\tperPage: number;\n\tsetPerPage(...args: unknown[]): unknown;\n\tdata: unknown[];\n\tlabel?: string;\n}\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({\n\tsetCurrentPage,\n\tcurrentPage,\n\tperPage,\n\tsetPerPage,\n\tdata,\n\tlabel,\n}) => {\n\tconst totalItems = data.length;\n\tconst totalPage = Math.ceil(totalItems / perPage);\n\n\tconst pagination = () => {\n\t\tlet items = [];\n\n\t\tlet i = currentPage - 1;\n\t\twhile (i >= currentPage - 1 && i > 0) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage - 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti -= 1;\n\t\t}\n\n\t\titems = items.reverse();\n\n\t\titems.push(\n\t\t\t<PaginationItem key={currentPage} isActive onClick={() => setCurrentPage(currentPage)}>\n\t\t\t\t{currentPage}\n\t\t\t</PaginationItem>,\n\t\t);\n\n\t\ti = currentPage + 1;\n\t\twhile (i <= currentPage + 1 && i <= totalPage) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage + 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti += 1;\n\t\t}\n\n\t\treturn items;\n\t};\n\n\tconst getInfo = () => {\n\t\tconst start = perPage * (currentPage - 1) + 1;\n\n\t\tconst end = perPage * currentPage;\n\n\t\treturn (\n\t\t\t<span className='pagination__desc'>\n\t\t\t\tShowing {start} to {end > totalItems ? totalItems : end} of {totalItems} {label}\n\t\t\t</span>\n\t\t);\n\t};\n\n\treturn (\n\t\t<CardFooter>\n\t\t\t<CardFooterLeft>\n\t\t\t\t<span className='text-muted'>{getInfo()}</span>\n\t\t\t</CardFooterLeft>\n\n\t\t\t<CardFooterRight className='d-flex'>\n\t\t\t\t{totalPage > 1 && (\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t<Pagination ariaLabel={label}>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisFirst\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisPrev\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage - 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{currentPage - 1 > 1 && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage - 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{pagination()}\n\t\t\t\t\t\t{currentPage + 1 < totalPage && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage + 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisNext\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage + 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisLast\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(totalPage)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Pagination>\n\t\t\t\t)}\n\n\t\t\t\t<Select\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tariaLabel='Per'\n\t\t\t\t\tonChange={(e: { target: { value: string } }) => {\n\t\t\t\t\t\tsetPerPage(parseInt(e.target.value, 10));\n\t\t\t\t\t\tsetCurrentPage(1);\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={perPage.toString()}>\n\t\t\t\t\t{Object.keys(PER_COUNT).map((i) => (\n\t\t\t\t\t\t<Option key={i} value={i}>\n\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</CardFooterRight>\n\t\t</CardFooter>\n\t);\n};\nPaginationButtons.propTypes = {\n\tsetCurrentPage: PropTypes.func.isRequired,\n\tcurrentPage: PropTypes.number.isRequired,\n\tperPage: PropTypes.number.isRequired,\n\tsetPerPage: PropTypes.func.isRequired,\n\t// eslint-disable-next-line react/forbid-prop-types\n\tdata: PropTypes.array.isRequired,\n\tlabel: PropTypes.string,\n};\nPaginationButtons.defaultProps = {\n\tlabel: 'items',\n};\n\nexport default PaginationButtons;\n","import React, { FC, HTMLAttributes } from 'react';\nimport PropTypes from 'prop-types';\n\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\n\tchildren: string;\n\tvalue?: string | number;\n\tdisabled?: boolean;\n\tariaLabelledby?: string | null;\n}\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\n\treturn (\n\t\t<option\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\taria-labelledby={ariaLabelledby || children}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</option>\n\t);\n};\nOption.propTypes = {\n\tchildren: PropTypes.string.isRequired,\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tdisabled: PropTypes.bool,\n\tariaLabelledby: PropTypes.string,\n};\nOption.defaultProps = {\n\tdisabled: false,\n\tariaLabelledby: null,\n\tvalue: undefined,\n};\n\nexport interface IOptionsProps {\n\tlist: {\n\t\tvalue?: string | number;\n\t\ttext?: string | number;\n\t\tlabel?: string | number;\n\t}[];\n}\n// @ts-ignore\nexport const Options: FC<IOptionsProps> = ({ list }) => {\n\treturn list?.map((item) => (\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t<Option key={item.value} value={item.value} {...item}>\n\t\t\t{(item.text as string) || (item.label as string)}\n\t\t</Option>\n\t));\n};\nOptions.propTypes = {\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t).isRequired,\n};\n\nexport default Option;\n","import React, { forwardRef, HTMLAttributes, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\n\ninterface IPaginationItemProps extends HTMLAttributes<HTMLLIElement> {\n\tclassName?: string;\n\tisDisabled?: boolean;\n\tisActive?: boolean;\n\tisPrev?: boolean;\n\tisFirst?: boolean;\n\tisNext?: boolean;\n\tisLast?: boolean;\n\tchildren?: ReactNode;\n\tonClick?(...args: unknown[]): unknown | undefined;\n}\nexport const PaginationItem = forwardRef<HTMLLIElement, IPaginationItemProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tisDisabled,\n\t\t\tisActive,\n\t\t\tisPrev,\n\t\t\tisFirst,\n\t\t\tisNext,\n\t\t\tisLast,\n\t\t\tchildren,\n\t\t\tonClick,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<li\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'page-item',\n\t\t\t\t\t{\n\t\t\t\t\t\tdisabled: isDisabled,\n\t\t\t\t\t\tactive: isActive,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}>\n\t\t\t\t<span\n\t\t\t\t\trole='button'\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tonKeyDown={onClick}\n\t\t\t\t\tclassName='page-link'\n\t\t\t\t\ttabIndex={isDisabled ? -1 : undefined}\n\t\t\t\t\taria-disabled={isDisabled ? 'true' : undefined}\n\t\t\t\t\taria-label={\n\t\t\t\t\t\t(isPrev && 'First Page') || (isNext && 'Last Page') || `${children} page`\n\t\t\t\t\t}>\n\t\t\t\t\t{isPrev && <Icon icon='ChevronLeft' />}\n\t\t\t\t\t{isFirst && <Icon icon='FirstPage' />}\n\t\t\t\t\t{isNext && <Icon icon='ChevronRight' />}\n\t\t\t\t\t{isLast && <Icon icon='LastPage' />}\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t);\n\t},\n);\nPaginationItem.displayName = 'PaginationItem';\nPaginationItem.propTypes = {\n\tclassName: PropTypes.string,\n\tisDisabled: PropTypes.bool,\n\tisActive: PropTypes.bool,\n\tisPrev: PropTypes.bool,\n\tisFirst: PropTypes.bool,\n\tisNext: PropTypes.bool,\n\tisLast: PropTypes.bool,\n\tchildren: PropTypes.node,\n\tonClick: PropTypes.func,\n};\nPaginationItem.defaultProps = {\n\tclassName: undefined,\n\tisDisabled: false,\n\tisActive: false,\n\tisPrev: false,\n\tisFirst: false,\n\tisNext: false,\n\tisLast: false,\n\tchildren: null,\n\tonClick: undefined,\n};\n\ninterface IPaginationProps extends HTMLAttributes<HTMLElement> {\n\tariaLabel: string;\n\tchildren:\n\t\t| ReactElement<IPaginationItemProps>\n\t\t| ReactElement<IPaginationItemProps>[]\n\t\t| ReactNode\n\t\t| ReactNode[];\n\tclassName?: string | undefined;\n\tsize?: 'sm' | 'lg' | null;\n}\nconst Pagination = forwardRef<HTMLDivElement, IPaginationProps>(\n\t({ ariaLabel, className, children, size, ...props }, ref) => {\n\t\treturn (\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t<nav ref={ref} aria-label={ariaLabel} className={className} {...props}>\n\t\t\t\t<ul className={classNames('pagination', { [`pagination-${size}`]: size }, 'm-0')}>\n\t\t\t\t\t{children}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t},\n);\nPagination.displayName = 'Pagination';\nPagination.propTypes = {\n\tariaLabel: PropTypes.string.isRequired,\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n\tsize: PropTypes.oneOf(['sm', 'lg']),\n};\nPagination.defaultProps = {\n\tclassName: undefined,\n\tsize: null,\n};\n\nexport default Pagination;\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Option, { IOptionsProps, Options } from '../Option';\nimport Validation from './Validation';\n\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\n\tid?: string;\n\tclassName?: string;\n\tname?: string;\n\tchildren?: ReactNode;\n\tariaLabel: string;\n\tplaceholder?: string;\n\tsize?: 'lg' | 'sm';\n\tmultiple?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\tariaDescribedby?: string;\n\tariaLabelledby?: string;\n\ttitle?: string;\n\tvalue?: string | string[];\n\tdefaultValue?: string | string[];\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisValidMessage?: boolean;\n\tisTooltipFeedback?: boolean;\n\tonBlur?(...args: unknown[]): unknown;\n\tonChange?(...args: unknown[]): unknown;\n\tonFocus?(...args: unknown[]): unknown;\n\tonInput?(...args: unknown[]): unknown;\n\tonInvalid?(...args: unknown[]): unknown;\n\tonSelect?(...args: unknown[]): unknown;\n}\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tname,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\trequired,\n\t\t\tplaceholder,\n\t\t\tariaDescribedby,\n\t\t\tariaLabelledby,\n\t\t\tariaLabel,\n\t\t\tlist,\n\t\t\tmultiple,\n\t\t\ttitle,\n\t\t\tsize,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisValidMessage,\n\t\t\tisTooltipFeedback,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonInput,\n\t\t\tonInvalid,\n\t\t\tonSelect,\n\t\t\t...props\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select\n\t\t\t\t\tref={ref}\n\t\t\t\t\tid={id}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'form-select',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\tname={name}\n\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\taria-describedby={ariaDescribedby}\n\t\t\t\t\taria-labelledby={ariaLabelledby}\n\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\trequired={required}\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tonInput={onInput}\n\t\t\t\t\tonInvalid={onInvalid}\n\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...props}>\n\t\t\t\t\t{placeholder && (\n\t\t\t\t\t\t<Option value='' hidden>\n\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t)}\n\t\t\t\t\t{children || (list && <Options list={list} />)}\n\t\t\t\t</select>\n\t\t\t\t{isValidMessage && (\n\t\t\t\t\t<Validation\n\t\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t},\n);\nSelect.displayName = 'Select';\nSelect.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\t/**\n\t * If the name value is left blank, the id value is assigned.\n\t */\n\tname: PropTypes.string,\n\tchildren: PropTypes.node,\n\tariaLabel: PropTypes.string.isRequired,\n\tplaceholder: PropTypes.string,\n\tsize: PropTypes.oneOf(['lg', 'sm']),\n\tmultiple: PropTypes.bool,\n\t/**\n\t * A *disabled* element isn't editable and isn't sent on submit.\n\t */\n\tdisabled: PropTypes.bool,\n\trequired: PropTypes.bool,\n\tariaDescribedby: PropTypes.string,\n\tariaLabelledby: PropTypes.string,\n\ttitle: PropTypes.string,\n\t/**\n\t * For formik ***`formik.values.ID_OR_NAME`***\n\t */\n\t// @ts-ignore\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tdefaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t),\n\t/**\n\t * For formik ***`formik.touched.ID_OR_NAME`***\n\t */\n\tisTouched: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.isValid`***\n\t */\n\tisValid: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.errors.ID_OR_NAME`***\n\t */\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisValidMessage: PropTypes.bool,\n\tisTooltipFeedback: PropTypes.bool,\n\t/**\n\t * Fires the moment that the element loses focus. For formik ***`formik.handleBlur`***\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * Fires the moment when the value of the element is changed. For formik ***`formik.handleChange`***\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Fires the moment when the element gets focus\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Script to be run when an element gets user input\n\t */\n\tonInput: PropTypes.func,\n\t/**\n\t * Script to be run when an element is invalid\n\t */\n\tonInvalid: PropTypes.func,\n\t/**\n\t * Fires after some text has been selected in an element\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * More information, [react-input-mask](https://github.com/sanniassin/react-input-mask#react-input-mask).\n\t */\n};\nSelect.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tname: undefined,\n\tchildren: null,\n\tplaceholder: undefined,\n\tmultiple: false,\n\tsize: undefined,\n\tdisabled: false,\n\trequired: false,\n\tariaDescribedby: undefined,\n\tariaLabelledby: undefined,\n\ttitle: undefined,\n\tvalue: undefined,\n\tdefaultValue: undefined,\n\tlist: undefined,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisValidMessage: true,\n\tisTooltipFeedback: false,\n\tonBlur: undefined,\n\tonChange: undefined,\n\tonFocus: undefined,\n\tonInput: undefined,\n\tonInvalid: undefined,\n\tonSelect: undefined,\n};\n\nexport default Select;\n","import { useMemo, useState } from 'react';\n\nconst useSortableData = (items: any[], config = null) => {\n\tconst [sortConfig, setSortConfig] = useState(config);\n\n\tconst sortedItems = useMemo(() => {\n\t\tconst sortableItems = [...items];\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t}\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, sortConfig]);\n\n\tconst requestSort = (key: any) => {\n\t\tlet direction = 'ascending';\n\t\t// @ts-ignore\n\t\tif (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\t// @ts-ignore\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\tconst getClassNamesFor = (key: any) => {\n\t\tif (!sortConfig) {\n\t\t\treturn 'd-none';\n\t\t}\n\t\t// eslint-disable-next-line consistent-return\n\t\t// @ts-ignore\n\t\treturn sortConfig.key === key ? sortConfig.direction : 'd-none';\n\t};\n\n\treturn { items: sortedItems, requestSort, getClassNamesFor, sortConfig };\n};\n\nexport default useSortableData;\n","import React, { FC, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport dayjs from 'dayjs';\nimport * as Yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport Modal, {\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tModalTitle,\n} from '../../../components/bootstrap/Modal';\nimport data from '../../../common/data/dummyCustomerData';\nimport showNotification from '../../../components/extras/showNotification';\nimport Icon from '../../../components/icon/Icon';\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../components/bootstrap/forms/Input';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport Button from '../../../components/bootstrap/Button';\nimport Label from '../../../components/bootstrap/forms/Label';\nimport Checks, { ChecksGroup } from '../../../components/bootstrap/forms/Checks';\nimport PAYMENTS from '../../../common/data/enumPaymentMethod';\nimport { createUser, fetchUser, fetchupdateUser } from '../../../redux/Slice/UserManagement_slice';\nimport img from '../../../assets/img/user6.png';\nimport { createProfile } from '../../../redux/Api/UserManagement';\nimport { getColorNameWithIndex } from '../../../common/data/enumColors';\nimport { getFirstLetter } from '../../../helpers/helpers';\nimport useDarkMode from '../../../hooks/useDarkMode';\nimport { getAllInterest } from '../../../redux/Slice/IntersetSlice';\n\ninterface ICustomerEditModalProps {\n\teditId: any;\n\teditData: any;\n\tid: string;\n\tisOpen: boolean;\n\tsetIsOpen(...args: unknown[]): unknown;\n}\nconst EditUser: FC<ICustomerEditModalProps> = ({ id, isOpen, editId, editData, setIsOpen }) => {\n\tconst { darkModeStatus } = useDarkMode();\n\n\tconst itemData = id ? data.filter((item) => item.id.toString() === id.toString()) : {};\n\tconst item = id && Array.isArray(itemData) ? itemData[0] : {};\n\tconst dispatch = useDispatch();\n\t//    const [modeId,setModeid]=useState<any>('')\n\tconst modeid = localStorage.getItem('modeid');\n\t//    setModeid(localStorage.getItem('modeid'))\n\tconst [intersetArray,setIntersetArray]=useState<any >(editData?.interest)\n\tconst [errorHandling, setErrorHandling] = useState(false);\n\t//    yup\n\tconst [avatarFil, setAvatarFile] = useState<any>(null);\n\n\tconst store = useSelector((statee: any) => statee);\n\tconst role = store.role.roles.data.data ? store.role.roles.data.data :[]\n\t\t \n\tconst stateinterest = useSelector((statee:any)=>statee.interest)\n \n\tconst dataa:any = stateinterest.interset.data\n//    useEffect(()=>{\n//      dispatch(getAllInterest(modeid)as any)\n//    },[dispatch,modeid])\n   const handleActiveInteset =(idd:any)=>{\n\tconst data2 =\tintersetArray.includes(idd)\n\t\tif(data2){\n\t\t\tconst updatedArray = intersetArray.filter((itema:any) => itema !== idd);\n\t\t\tsetIntersetArray(updatedArray);\n\t\t}else{\n\t\t\tsetIntersetArray([...intersetArray,idd])\n        \n\t\t}\n\t}\n\n\tconst heightArray = [];\n\tfor (let i = 3; i <= 6.6; i += 0.1) {\n\t\theightArray.push(parseFloat(i.toFixed(1)));\n\t}\n\n\tconst WeightArray = [];\n\n\tfor (let i = 20; i < 120; i += 1) {\n\t\tWeightArray.push(i);\n\t}\n\n\tconst NumberofSiblingsArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\tconst userValidation = Yup.object().shape({\n\t\tfullname: Yup.string().required('Name is required'),\n\t\temail: Yup.string().email('invalid email').required('Email is required'),\n\t\tdob: Yup.string().required('required'),\n \n\t\tgender: Yup.string().required('required'),\n\t\t \n\t\t \n\t});\n \n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tfullname: editData?.fullname || '',\n\t\t\temail: editData?.email || '',\n\t\t\tcontact_number: editData?.contact_number || '',\n\t\t\tpassword:editData?.password ||'',\n\t\t\tdob: moment(editData?.dob).format(\"YYYY-MM-DD\") || '', // Should be in the format \"YYYY-MM-DDTHH:MM:SS.MSSZ\"\n\t\t\tgender: editData?.gender || '', // Assuming it's either \"Male\" or \"Female\" or \"Other\"\n\t\t\tmode: modeid, // Example: \"modeid\"\n\t\t\trole: editData?.role || '', // Example: \"iAm\" or \"looking\"\n\t\t\tis_activated: true, // Assuming this is a boolean indicating activation status\n\t\t\t default_admin: true,\n\t\t\t\n\t\t  },\n\t\t \n\t\tenableReinitialize: true,\n\t\tvalidationSchema: userValidation,\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tonSubmit: (values:any) => {\n\t\t\tconsole.log(values);\n\t\t\ttry {\n\t\t\t\tsetErrorHandling(true);\n\t\t\t\tdispatch(fetchupdateUser({editId, values}) as any);\n\t\t\t\tif(ApiTrue){\n\t\t\t\t\tconst imageid = editId\n\t\t\t\t\tcreateProfile({imageid,avatarFil})\n\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t} finally {\n\t\t\t\tdispatch(fetchUser({ modeid }) as any);  \n\t\t\t\tsetAvatarFile(null)\n\t\t\t}\n\t\t\tsetIsOpen(false);\n\t\t\tshowNotification(\n\t\t\t\t<span className='d-flex align-items-center '>\n\t\t\t\t\t<Icon icon='Info' size='lg' className='me-1' />\n\t\t\t\t\t<span>Added Successfully</span>\n\t\t\t\t</span>,\n\t\t\t\t'User has been Added successfully',\n\t\t\t);\n\t\t},\n\t});\n\tconst [ApiTrue,setApiTrue]=useState(false)\n\tconst handleAvatarChang = (e: any) => {\n\n\t\tsetApiTrue(true)\n\t \n\t\tsetAvatarFile(e.target.files[0]);\n\t\tif (e.target.files && e.target.files.length > 0) {\n\t\t\tsetAvatarFile(e.target.files[0]);\n\t\t}\n\t};\n\tif (id || id === '0') {\n\t\treturn (\n\t\t\t<Modal isOpen={isOpen} setIsOpen={setIsOpen} size='xl' titleId={id.toString()}>\n\t\t\t\t<ModalHeader setIsOpen={setIsOpen} className='p-4'>\n\t\t\t\t\t<ModalTitle id={id}>{item?.name || 'Edit User'}</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody className='px-4'>\n\n\t\t\t\t\t\n\t\t\t\t<div className='row g-4'>\n\t\t\t\t\t\t{/* <div\n\t\t\t\t\t\t\tclassName='col-md-6'\n\t\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t\t\t<label htmlFor='avatarInput'>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tborder: '1px solid gray',\n\t\t\t\t\t\t\t\t\t\twidth: '120px',\n\t\t\t\t\t\t\t\t\t\theight: '120px',\n\t\t\t\t\t\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\t\t\t\t\t\t// backgroundImage: `https://datingapi.meander.software/assets/images/${editData?.avatars[0]}`,\n\t\t\t\t\t\t\t\t\t\t// backgroundImage: `https://datingapi.meander.software/assets/images/1702641146547.jpg`,\n\n\t\t\t\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\t\t\t\tbackgroundPosition: 'center',\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\teditData?.avatars ? <img\n\t\t\t\t\t\t\t\t\t\tsrc={avatarFil\n\t\t\t\t\t\t\t\t\t\t\t? URL.createObjectURL(avatarFil)\n\t\t\t\t\t\t\t\t\t\t\t: `https://datingapi.meander.software/assets/images/${editData?.mainAvatar || 'default-image.jpg' // Provide a default image or handle accordingly\n\t\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\talt='Avatar Preview'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> :<div\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`bg-l${\n\t\t\t\t\t\t\t\t\t\t\t\t\tdarkModeStatus\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'o25'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: '25'\n\t\t\t\t\t\t\t\t\t\t\t\t}-${getColorNameWithIndex(0,\n\t\t\t\t\t\t\t\t\t\t\t\t)} text-${getColorNameWithIndex(0,\n\t\t\t\t\t\t\t\t\t\t\t\t)} d-flex align-items-center justify-content-center`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='fw-bold ' >\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getFirstLetter(formik.values.name)}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</div> \n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\t\t\taccept='image/'\n\t\t\t\t\t\t\t\t\t\t\tid='avatarInput'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t// position: 'absolute',\n\t\t\t\t\t\t\t\t\t\t\t\t// top: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t// left: 0,\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => handleAvatarChang(e)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* <Button\n\t\t\t\t\t\t\t\t\t\t\ticon='Edit'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '67%',\n\t\t\t\t\t\t\t\t\t\t\t\tright: '55%',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>  \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div> */}\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t <FormGroup id=\"fullname\" label=\"Name\" className=\"col-md-6\">\n              <Input\n                name=\"fullname\"\n                onChange={formik.handleChange}\n                value={formik.values.fullname}\n              />\n              {errorHandling && formik.errors.fullname ? (\n                <div className=\"errorMassage\">{formik.errors.fullname as any}</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\n            <FormGroup id=\"email\" label=\"Email\" className=\"col-md-6\">\n              <Input\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n              />\n\n              {errorHandling && formik.errors.email ? (\n                <div className=\"errorMassage\">{formik.errors.email as any }</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\n            <FormGroup id=\"password\" label=\"Password\" className=\"col-md-6\">\n              <Input\n                name=\"password\"\n                type=\"text\"\n\t\t\t\tplaceholder='If you want change password then enter your new password'\n                onChange={formik.handleChange}\n                value={formik.values.password}\n              />\n              {errorHandling && formik.errors.password ? (\n                <div className=\"errorMassage\">{formik.errors.password as any}</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\n            <FormGroup id=\"dob\" label=\"Birthday\" className=\"col-md-6\">\n              <Input\n                name=\"dob\"\n                type=\"date\"\n                onChange={formik.handleChange}\n                value={formik.values.dob}\n              />\n              {errorHandling && formik.errors.dob ? (\n                <div className=\"errorMassage\">{formik.errors.dob as any}</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\n            <FormGroup id=\"gender\" label=\"Gender\" className=\"col-md-6\">\n              <select\n                id=\"gender\"\n                className=\"form-select\"\n                name=\"gender\"\n                value={formik.values.gender}\n                onChange={formik.handleChange}\n              >\n                <option value=\"\" disabled>\n                  ...Select...\n                </option>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n                <option value=\"other\">Other</option>\n              </select>\n              {errorHandling && formik.errors.gender ? (\n                <div className=\"errorMassage\">{formik.errors.gender as any}</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\n            \n\n            <FormGroup id=\"role\" label=\"Role\" className=\"col-md-6\">\n              <select\n                id=\"role\"\n                className=\"form-select\"\n                name=\"role\"\n                value={formik.values.role}\n                onChange={formik.handleChange}\n              >\n                <option value=\"\" disabled>\n                  ...Select...\n                </option>\n         {  role && role.map((Roleitem:any,index:any)=>{\n\nreturn<option value={Roleitem?._id} key={Roleitem?._id}>{Roleitem?.name}</option> \n           \n\n         })   }\n              \n              </select>\n              {errorHandling && formik.errors.gender ? (\n                <div className=\"errorMassage\">{formik.errors.gender as any}</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\n            <FormGroup\n              id=\"contact_number\"\n              label=\"Phone No *\"\n              className=\"col-md-6\"\n            >\n              <Input\n                name=\"contact_number\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.contact_number}\n              />\n              {errorHandling && formik.errors.contact_number ? (\n                <div className=\"errorMassage\">\n                  {formik.errors.contact_number as any}\n                </div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\n             \n\n            <FormGroup\n              id=\"is_activated\"\n              label=\"Is Activated\"\n              className=\"col-md-6\"\n            >\n              <select\n                id=\"is_activated\"\n                className=\"form-select\"\n                name=\"is_activated\"\n                value={formik.values.is_activated as any}\n                onChange={formik.handleChange}\n              >\n                <option value=\"true\">True</option>\n                <option value=\"false\">False</option>\n              </select>\n              {errorHandling && formik.errors.is_activated ? (\n                <div className=\"errorMassage\">{formik.errors.is_activated as any}</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\t\t\t<FormGroup\n              id=\"default_admin\"\n              label=\"Default Admin\"\n              className=\"col-md-6\"\n            >\n              <select\n                id=\"default_admin\"\n                className=\"form-select\"\n                name=\"default_admin\"\n                value={formik.values.default_admin as any}\n                onChange={formik.handleChange}\n              >\n                <option value=\"true\">True</option>\n                <option value=\"false\">False</option>\n              </select>\n              {errorHandling && formik.errors.default_admin ? (\n                <div className=\"errorMassage\">{formik.errors.default_admin as any}</div>\n              ) : (\n                <div />\n              )}\n            </FormGroup>\n\t\t\t\t\t</div>\n\t\t\t\t\t \n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter className='px-4 pb-4'>\n\t\t\t\t\t<Button color='info' onClick={()=>{\n\t\t\t\t\t\tformik.handleSubmit()\n\t\t\t\t\tsetErrorHandling(true)}}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t\n\t\t);\n\t}\n\treturn null;\n};\n\t\n\nEditUser.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tisOpen: PropTypes.bool.isRequired,\n\tsetIsOpen: PropTypes.func.isRequired,\n};\n\nexport default EditUser;\n","import React, { FC, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useField, useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport Modal, {\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalTitle,\n} from \"../../../components/bootstrap/Modal\";\nimport data from \"../../../common/data/dummyCustomerData\";\nimport showNotification from \"../../../components/extras/showNotification\";\nimport Icon from \"../../../components/icon/Icon\";\nimport FormGroup from \"../../../components/bootstrap/forms/FormGroup\";\nimport Input from \"../../../components/bootstrap/forms/Input\";\nimport img from \"../../../assets/img/user6.png\";\nimport Card, {\n  CardBody,\n  CardHeader,\n  CardLabel,\n  CardTitle,\n} from \"../../../components/bootstrap/Card\";\nimport Button from \"../../../components/bootstrap/Button\";\nimport Label from \"../../../components/bootstrap/forms/Label\";\nimport Checks, {\n  ChecksGroup,\n} from \"../../../components/bootstrap/forms/Checks\";\nimport PAYMENTS from \"../../../common/data/enumPaymentMethod\";\nimport {\n  createUser,\n  fetchUser,\n} from \"../../../redux/Slice/UserManagement_slice\";\nimport Avatar from \"../../../components/Avatar\";\nimport Select from \"../../../components/bootstrap/forms/Select\";\nimport Wizard, { WizardItem } from \"../../../components/Wizard\";\nimport { getAllInterest } from \"../../../redux/Slice/IntersetSlice\";\nimport { fetchRoles } from \"../../../redux/Slice/role_Slice\";\nimport getAllroles from \"../../../redux/Api/role\";\nimport { getAll_Service } from \"../../../redux/Slice/Services_Slice\";\n\ninterface IPreviewItemProps {\n  title: string;\n  value: any | any[];\n}\nconst PreviewItem: FC<IPreviewItemProps> = ({ title, value }) => {\n  return (\n    <>\n      <div className=\"col-3 text-end\">{title}</div>\n      <div className=\"col-9 fw-bold\">{value || \"-\"}</div>\n    </>\n  );\n};\ninterface ICustomerEditModalProps {\n  id: string;\n  isOpen: boolean;\n  setIsOpen(...args: unknown[]): unknown;\n}\n\nconst Add: FC<ICustomerEditModalProps> = ({ id, isOpen, setIsOpen }) => {\n  const store = useSelector((state: any) => state);\n  const role = store.role.roles.data?.data ? store.role.roles.data?.data : []\n  const itemData = id\n    ? data.filter((item) => item.id.toString() === id.toString())\n    : {};\n  const item = id && Array.isArray(itemData) ? itemData[0] : {};\n  const modeid = localStorage.getItem(\"modeid\");\n  const [avatarFil, setAvatarFile] = useState<any>();\n  const [isProfileUploaded, setisProfileUploaded] = useState<boolean>(false);\n  const [intersetArray, setIntersetArray] = useState<any>([]);\n  const Service_Data = store.Service.services?.data?.data\n  console.log(\"new4387423\",Service_Data);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  \n  const dispatch = useDispatch();\n  const [errorHandling, setErrorHandling] = useState(false);\n  const heightArray = [];\n  for (let i = 3; i <= 6.6; i += 0.1) {\n    heightArray.push(parseFloat(i.toFixed(1)));\n  }\n\n  const WeightArray = [];\n\n\n  useEffect(() => {\n    dispatch(fetchRoles(modeid) as any);\n      dispatch(getAll_Service(\"\") as any)\n  }, [dispatch, modeid]);\n\n\n  for (let i = 20; i < 120; i += 1) {\n    WeightArray.push(i);\n  }\n\n\n  const userValidation = Yup.object().shape({\n    fullname: Yup.string().required(\"Name is required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n\n\n    password: Yup.string().required(\"Password is required\"),\n\n    role: Yup.string().required(\"Role is required\"),\n\n    contact_number: Yup.string()\n      .matches(/^\\d{10}$/, \"Phone number must be 10 digits\")\n      .required(\"Phone number is required\"),\n  });\n\n  // -------------------------------\n\n  const formik = useFormik({\n    initialValues: {\n      fullname: \"\",\n      email: \"\",\n      password: \"\",\n      dob: \"\", // Should be in the format \"YYYY-MM-DDTHH:MM:SS.MSSZ\"\n      gender: \"\", // Assuming it's either \"Male\" or \"Female\" or \"Other\"\n      mode: modeid, // Example: \"modeid\"\n      role: \"\", // Example: \"iAm\" or \"looking\"\n      service:\"\",\n      contact_number: \"\",\n      default_admin: true,\n      is_activated: true, // Assuming this is a boolean indicating activation status\n    },\n\n    validationSchema: userValidation,\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSubmit: async(values) => {\n      setIsLoading(true);\n      setErrorHandling(true);\n      console.log(\"Form values:\", values); // Log form values to ensure they are captured correctly\n      try {\n        // dispatch(createUser({ values, avatarFil }) as any)\n        //   .then(() => {\n        //     console.log(\"User created successfully.\"); // Log success message\n        //   })\n        //   .catch((error: any) => {\n        //     console.error(\"Error creating user:\", error); // Log error if createUser action fails\n        //   });\n         const response = await dispatch(createUser({ values, avatarFil }) as any)\n        \n                if (response?.payload?.statusCode === 400) {\n                  console.error(\"Validation Error:\", response.payload.message);\n                  alert(`Error: ${response.payload.message.join(\", \")}`);\n                } else {\n                  await  dispatch(fetchUser({ modeid }) as any);\n                  console.log(\"Service created successfully.\");\n                  setIsOpen(false);\n                }\n      } catch (error) {\n        console.error(\"Error submitting form:\", error); // Log error if any other error occurs\n      } finally {\n        // dispatch(fetchUser({ modeid }) as any);\n        setIsOpen(false);\n        setIsLoading(false);\n        showNotification(\n          <span className=\"d-flex align-items-center\">\n            <Icon icon=\"Info\" size=\"lg\" className=\"me-1\" />\n            <span>Added Successfully</span>\n          </span>,\n          \"User has been Added successfully\"\n        );\n      }\n    },\n  });\n  const [ApiTrue, setApiTrue] = useState(false);\n  const handleAvatarChang = (e: any) => {\n    setApiTrue(true);\n\n    console.log(e.target.files[0]);\n    setAvatarFile(e.target.files[0]);\n    if (e.target.files && e.target.files.length > 0) {\n      setisProfileUploaded(true);\n      setAvatarFile(e.target.files[0]);\n    }\n  };\n  const handleActiveInteset = (idd: any) => {\n    const data2 = intersetArray.includes(idd);\n    if (data2) {\n      const updatedArray = intersetArray.filter((item2: any) => item2 !== idd);\n      setIntersetArray(updatedArray);\n    } else {\n      setIntersetArray([...intersetArray, idd]);\n      formik.setFieldValue(\"interest\", intersetArray);\n    }\n  };\n\n  if (id || id === \"0\") {\n    return (\n      <Modal\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        size=\"lg\"\n        titleId={id.toString()}\n      >\n        <ModalHeader setIsOpen={setIsOpen} className=\"p-4\">\n          <ModalTitle id={id}>{item?.name || \"New User\"}</ModalTitle>\n        </ModalHeader>\n        <ModalBody className=\"px-4 user-modal-body\">\n          <form onSubmit={formik.handleSubmit} >\n            <div className=\"row g-4 align-items-center\" style={{}}>\n              <FormGroup id=\"fullname\" label=\"Name\" className=\"col-md-6\">\n                <Input\n                  name=\"fullname\"\n                  onChange={formik.handleChange}\n                  value={formik.values.fullname}\n                />\n                {errorHandling && formik.errors.fullname ? (\n                  <div className=\"errorMassage\">{formik.errors.fullname}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n              <FormGroup id=\"email\" label=\"Email\" className=\"col-md-6\">\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                />\n\n                {errorHandling && formik.errors.email ? (\n                  <div className=\"errorMassage\">{formik.errors.email}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n              <FormGroup id=\"password\" label=\"Password\" className=\"col-md-12\">\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                />\n                {errorHandling && formik.errors.password ? (\n                  <div className=\"errorMassage\">{formik.errors.password}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n              <FormGroup id=\"dob\" label=\"Birthday\" className=\"col-md-6\">\n                <Input\n                  name=\"dob\"\n                  type=\"date\"\n                  onChange={formik.handleChange}\n                  value={formik.values.dob}\n                />\n                {errorHandling && formik.errors.dob ? (\n                  <div className=\"errorMassage\">{formik.errors.dob}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n              <FormGroup id=\"gender\" label=\"Gender\" className=\"col-md-6\">\n                <select\n                  id=\"gender\"\n                  className=\"form-select\"\n                  name=\"gender\"\n                  value={formik.values.gender}\n                  onChange={formik.handleChange}\n                >\n                  <option value=\"\" disabled>\n                    ...Select...\n                  </option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other</option>\n                </select>\n                {errorHandling && formik.errors.gender ? (\n                  <div className=\"errorMassage\">{formik.errors.gender}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n\n\n              <FormGroup id=\"role\" label=\"Role\" className=\"col-md-6\">\n                <select\n                  id=\"role\"\n                  className=\"form-select\"\n                  name=\"role\"\n                  value={formik.values.role}\n                  onChange={formik.handleChange}\n                >\n                  <option value=\"\" disabled>\n                    ...Select...\n                  </option>\n                  {Array.isArray(role) &&\n                    role.map((Roleitem: any, index: any) => {\n\n                      return <option value={Roleitem?._id} key={Roleitem?._id}>{Roleitem?.name}</option>\n\n\n                    })}\n\n                </select>\n                {errorHandling && formik.errors.gender ? (\n                  <div className=\"errorMassage\">{formik.errors.gender}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n              <FormGroup id=\"service\" label=\"Service\" className=\"col-md-6\">\n                <select\n                  id=\"service\"\n                  className=\"form-select\"\n                  name=\"service\"\n                  value={formik.values.service}\n                  onChange={formik.handleChange}\n                >\n                  <option value=\"\" disabled>\n                    ...Select...\n                  </option>\n                  {Array.isArray(Service_Data) &&\n                    Service_Data.map((items: any, index: number) => (\n                      <option key={index} value={items._id}>\n                        {items.name}\n                      </option>\n                    ))}\n\n                </select>\n                {errorHandling && formik.errors.gender ? (\n                  <div className=\"errorMassage\">{formik.errors.gender}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n\n              <FormGroup\n                id=\"contact_number\"\n                label=\"Phone No *\"\n                className=\"col-md-6\"\n              >\n                <Input\n                  name=\"contact_number\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.contact_number}\n                />\n                {errorHandling && formik.errors.contact_number ? (\n                  <div className=\"errorMassage\">\n                    {formik.errors.contact_number}\n                  </div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n\n              <FormGroup\n                id=\"is_activated\"\n                label=\"Is Activated\"\n                className=\"col-md-12\"\n              >\n                <select\n                  id=\"is_activated\"\n                  className=\"form-select\"\n                  name=\"is_activated\"\n                  value={formik.values.is_activated as any}\n                  onChange={formik.handleChange}\n                >\n                  <option value=\"true\">True</option>\n                  <option value=\"false\">False</option>\n                </select>\n                {errorHandling && formik.errors.is_activated ? (\n                  <div className=\"errorMassage\">{formik.errors.is_activated}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n              <FormGroup\n                id=\"default_admin\"\n                label=\"Default Admin\"\n                className=\"col-md-12\"\n              >\n                <select\n                  id=\"default_admin\"\n                  className=\"form-select\"\n                  name=\"default_admin\"\n                  value={formik.values.default_admin as any}\n                  onChange={formik.handleChange}\n                >\n                  <option value=\"true\">True</option>\n                  <option value=\"false\">False</option>\n                </select>\n                {errorHandling && formik.errors.default_admin ? (\n                  <div className=\"errorMassage\">{formik.errors.default_admin}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n              <div className=\"col-md-12 text-center \">\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  className=\"col-6  \"\n                  onClick={() => {\n                    formik.handleSubmit() as any;\n                    setErrorHandling(true);\n                  }}\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n  return null;\n};\nAdd.propTypes = {\n  id: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  setIsOpen: PropTypes.func.isRequired,\n};\n\nexport default Add;\n","import React, { FC, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport Modal, {\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tModalTitle,\n} from '../../../components/bootstrap/Modal';\nimport data from '../../../common/data/dummyCustomerData';\nimport showNotification from '../../../components/extras/showNotification';\nimport Icon from '../../../components/icon/Icon';\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../components/bootstrap/forms/Input';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport Button from '../../../components/bootstrap/Button';\nimport Label from '../../../components/bootstrap/forms/Label';\nimport Checks, { ChecksGroup } from '../../../components/bootstrap/forms/Checks';\nimport { fetchUser, fetchdeleteUser } from '../../../redux/Slice/UserManagement_slice';\n// import PAYMENTS from '../../../common/data/enumPaymentMethod';\ninterface ICustomerEditModalProps {\n\tid: string;\n\tisOpen: boolean;\n\tsetIsOpen(...args: unknown[]): unknown;\n\tdeleteId:any;\n\n\t\n}\n  \nconst  OrderDeleteModal: FC<ICustomerEditModalProps> = ({ id, isOpen,deleteId, setIsOpen }) => {\n\tconst itemData = id ? data.filter((item) => item.id.toString() === id.toString()) : {};\n\tconst item = id && Array.isArray(itemData) ? itemData[0] : {};\n   const dispatch =useDispatch()\n   const modeid=localStorage.getItem('modeid')\n   console.log(modeid)\n \n   const handleDeleteClick =async () => {\n    setIsOpen(false);\n\ttry {\n\t\tawait dispatch(fetchdeleteUser(deleteId) as any);\n\n\t\t\t\n\t\t} catch (error) {\n\t\t\t\n\t\t}finally{\n\t\tdispatch(fetchUser({modeid})as any)\n\n\t\t}\n};\n\tif (id || id === '0') {\n\t\treturn (\n\t\t\t<Modal isOpen={isOpen} setIsOpen={setIsOpen}  isCentered\n            titleId={id.toString()}>\n\t\t\t\t<ModalHeader setIsOpen={setIsOpen} className='p-4'>\n\t\t\t\t\t<ModalTitle id={id}>{item?.name || 'Remove Customer'}</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody className='px-4'>\n                <p>Are you sure you want to Remove this User?</p>\n\t\t\t\t</ModalBody>\n\t          <ModalFooter className='bg-transparent '>\n\t\t\t\t\t\t\t\t<div className='d-flex  justify-content-between w-100'>\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\t\tclassName='w-50 m-2 '\n\t\t\t\t\t\t\t\t\tonClick={()=>setIsOpen(false)} \n\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button \n                                \tclassName='w-50 m-2 btn btn-danger'\n\t\t\t\t\t\t\t\t\tonClick={() => handleDeleteClick()}\n\n\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</Modal>\n\t\t);\n\t}\n\treturn null;\n};\nOrderDeleteModal.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tisOpen: PropTypes.bool.isRequired,\n\tsetIsOpen: PropTypes.func.isRequired,\n};\n\nexport default  OrderDeleteModal;\n","\n \n\nimport COLORS from \"../../../common/data/enumColors\";\nimport { TColor } from \"../../../type/color-type\";\n\n \n\nexport interface IEventStatus {\n\t[key: string]: { name: string; value:any,color: TColor };\n}\nconst ActiveUser: IEventStatus = {\n\tActive: { name: 'Active', value:true,color: COLORS.SUCCESS.name },\n\tInactive: { name: 'Inactive',value: false, color: COLORS.WARNING.name },\n};\nexport default ActiveUser;\n","import React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport PageWrapper from \"../../../layout/PageWrapper/PageWrapper\";\nimport SubHeader, {\n  SubHeaderLeft,\n  SubHeaderRight,\n  SubheaderSeparator,\n} from \"../../../layout/SubHeader/SubHeader\";\nimport Page from \"../../../layout/Page/Page\";\nimport { demoPagesMenu } from \"../../../menu\";\nimport Card, { CardBody } from \"../../../components/bootstrap/Card\";\nimport { getFirstLetter, priceFormat } from \"../../../helpers/helpers\";\nimport data from \"../../../common/data/dummyCustomerData\";\nimport PaginationButtons, {\n  dataPagination,\n  PER_COUNT,\n} from \"../../../components/PaginationButtons\";\nimport Button from \"../../../components/bootstrap/Button\";\nimport Icon from \"../../../components/icon/Icon\";\nimport Input from \"../../../components/bootstrap/forms/Input\";\nimport Dropdown, {\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n} from \"../../../components/bootstrap/Dropdown\";\nimport FormGroup from \"../../../components/bootstrap/forms/FormGroup\";\nimport Checks, {\n  ChecksGroup,\n} from \"../../../components/bootstrap/forms/Checks\";\nimport PAYMENTS from \"../../../common/data/enumPaymentMethod\";\nimport useSortableData from \"../../../hooks/useSortableData\";\nimport InputGroup, {\n  InputGroupText,\n} from \"../../../components/bootstrap/forms/InputGroup\";\nimport Popovers from \"../../../components/bootstrap/Popovers\";\n// import CustomerEditModal from './CustomerEditModal';\nimport { getColorNameWithIndex } from \"../../../common/data/enumColors\";\nimport useDarkMode from \"../../../hooks/useDarkMode\";\n// import add_user_management from './ADD'\nimport Add from \"./Add_FinanceAdmin\";\n \nimport Edit_User from \"./Edit_FinanceAdmin\";\nimport OrderDeleteModal from \"./Delete_FinanceAdmin\";\nimport * as Yup from \"yup\";\nimport {\n  fetchUser,\n  fetchsearchUser,\n  fetchsortUser,\n  fetchupdateUser,\n  searchUserbyAges,\n  setPage,\n} from \"../../../redux/Slice/UserManagement_slice\";\n\nimport ActiveUser from \"./ActiveUser\";\nimport fetchModes, { fetchRoles } from \"../../../redux/Slice/role_Slice\";\nimport {getAllroles} from \"../../../redux/Api/role\";\nimport { updatestatus } from \"../../../redux/Api/UserManagement\";\nimport Label from \"../../../components/bootstrap/forms/Label\";\nimport Select from \"../../../components/bootstrap/forms/Select\";\nimport imgback from \"../../../assets/back (3).png\";\nimport { Role } from \"../../../InterFace/InterFace\";\n\nconst UserManagement = () => {\n  const { darkModeStatus } = useDarkMode();\n  const [searchUser, setSearcUser] = useState<any>(\"\");\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(PER_COUNT[\"10\"]);\n  const [editModalStatus, setEditModalStatus] = useState<boolean>(false);\n  const [editModal, setEditModal] = useState<boolean>(false);\n  const [editData, setEditData] = useState<any>(\"\");\n  const [deleteModal, setDeleteModal] = useState<boolean>(false);\n  const [deleteId, setDeleteid] = useState<any>(\"\");\n  const [editId, setEditId] = useState<any>(\"\");\n  \n  const Store: any = useSelector((state: any) => state.role);\n  // const roleid = Store?.roles?.data?._id;\n\nconst [SelectedRole,setSelectRole]=useState(localStorage.getItem(\"roleid\") || \"\")\n\n  const roleData = Store?.roles?.data?.data;\n  const modeid = localStorage.getItem(\"modeid\");\n// console.log('====================================',roleid);\nconsole.log(roleData);\nconst stateUser: any = useSelector((state: any) => state.user);\n  const reversedDataa = stateUser?.users?.data?.data;\n  const [viewUser, setViewUser] = useState<any>(false);\n  const [viewData, setViewdata] = useState<any>(\"\");\n  const [filterData, setFilterData] = useState<any>({\n    gender: \"\",\n    minAge: \"\",\n    maxAge: \"\",\n  });\n\n  const handleFilterData = (e: any) => {\n    setFilterData({ ...filterData, [e.target.name]: e.target.value });\n  };\n\n  const [filterMenu, setFilterMenu] = useState<boolean>(false);\n  const handleStatus = async (idedi: any, status: any) => {\n    await updatestatus({ editId: idedi, status });\n    await dispatch(fetchUser({ modeid, SelectedRole }) as any);\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPage(currentPage) as any);\n    dispatch(fetchRoles({modeid:modeid}) as any);\n    dispatch(fetchUser({ modeid, SelectedRole }) as any);\n  }, [dispatch, modeid, currentPage,SelectedRole]);\n\n  \n  const formik = useFormik({\n    initialValues: {\n      searchInput: \"\",\n      minAge: \"\",\n      maxAge: \"\",\n      gender: \"\", // Add gender field to initialValues\n      role: \"\", // Add role field to initialValues\n    },\n    validationSchema: Yup.object().shape({\n      gender: Yup.string()\n        .required(\"Gender is required\")\n        .oneOf([\"male\", \"female\", \"other\"], \"Invalid gender\"),\n       \n    }),\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSubmit: (values) => {\n      // alert(JSON.stringify(values, null, 2));\n      console.log(\"Form submitted with values:\", values);\n    },\n  });\n\n  const filteredData = reversedDataa\n    ? reversedDataa.filter(\n        (f: any) =>\n          f.fullname\n            .toLowerCase()\n            .includes(formik.values.searchInput.toLowerCase()) &&\n          f.email\n            .toLowerCase()\n            .includes(formik.values.searchInput.toLowerCase())\n      )\n    : [];\n  const { items, requestSort, getClassNamesFor } = useSortableData(\n    filteredData.reverse()\n  );\n\n  const handleSearch = (e: any) => {\n    const inputValue = e.target.value;\n    setSearcUser(inputValue);\n    if (inputValue.trim() === \"\") {\n      dispatch(fetchUser({ modeid, SelectedRole }) as any);\n    } else {\n      dispatch(fetchsearchUser(inputValue) as any);\n    }\n  };\n\n  const handleFilter = () => {\n    dispatch(searchUserbyAges(filterData) as any);\n  };\n\n  const calculateAge = (dobString: any) => {\n    const today = new Date();\n    const birthDate = new Date(dobString);\n\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n\n    if (\n      monthDiff < 0 ||\n      (monthDiff === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age -= 1; // Alternative to age--\n    }\n ;\n    return age;\n  };\n \n\n  const roleOptions = Array.isArray(roleData)\n  ? roleData.map((item: Role) => ({\n      value: item?._id,\n      text: item?.name\n    }))\n  : [];\n\n \n \n\nconst ChangeRole = async (e:any)=>{\n    setSelectRole(e.target.value)\n  localStorage.setItem('roleid',e.target.value)\n \n\n\n\n}\n  return (\n    <PageWrapper title={demoPagesMenu.crm.subMenu.customersList.text}>\n      <div className=\"row  justify-content-around\">\n      <div className=\"display-5 col-md-7 fw-bold my-3 \">Finance Admin </div>\n      <div className=\"col-md-4\">\n                    <FormGroup>\n                      <Label htmlFor=\"role\">Change </Label>\n                      <Select\n                        id=\"role\"\n                        name=\"role\"\n                        ariaLabel=\"Role\"\n                        placeholder=\"Role\"\n                        list={roleOptions}\n                        onChange={ChangeRole }\n                        value={SelectedRole}\n                        />\n                    </FormGroup>\n                  </div>\n                        </div>\n\n      <SubHeader>\n        <SubHeaderLeft>\n          <label\n            className=\"border-0 bg-transparent cursor-pointer me-0\"\n            htmlFor=\"searchInput\"\n          >\n            <Icon icon=\"Search\" size=\"2x\" color=\"primary\" />\n          </label>\n          <Input\n            id=\"searchInput\"\n            type=\"search\"\n            className=\"border-0 shadow-none bg-transparent\"\n            placeholder=\"Search customer...\"\n            onChange={(e) => handleSearch(e)}\n            value={searchUser}\n          />\n        </SubHeaderLeft>\n        <SubHeaderRight>\n          <Dropdown isOpen={filterMenu} setIsOpen={setFilterMenu}>\n            <DropdownToggle hasIcon={false}>\n              <Button icon=\"FilterAlt\" color=\"primary\" isLight>\n                Filter\n              </Button>\n            </DropdownToggle>\n            <DropdownMenu isAlignmentEnd size=\"lg\" isCloseAfterLeave={false}>\n              <div className=\"container py-2\">\n                <form className=\"row g-3\" onSubmit={formik.handleSubmit}>\n                  <div className=\"col-12\">\n                    <FormGroup>\n                      <Label htmlFor=\"minAge\">Age</Label>\n                      <InputGroup>\n                        <Input\n                          id=\"minAge\"\n                          name=\"minAge\"\n                          ariaLabel=\"Minimum age\"\n                          placeholder=\"Min.\"\n                          onChange={handleFilterData}\n                          value={filterData.minAge}\n                        />\n                        <InputGroupText>to</InputGroupText>\n                        <Input\n                          id=\"maxAge\"\n                          name=\"maxAge\"\n                          ariaLabel=\"Maximum age\"\n                          placeholder=\"Max.\"\n                          onChange={handleFilterData}\n                          value={filterData.maxAge}\n                        />\n                      </InputGroup>\n                    </FormGroup>\n                  </div>\n                  <div className=\"col-12\">\n                    <FormGroup>\n                      <Label htmlFor=\"gender\">Gender</Label>\n                      <Select\n                        id=\"gender\"\n                        name=\"gender\"\n                        ariaLabel=\"Gender\"\n                        placeholder=\"Gender Name\"\n                        list={[\n                          { value: \"male\", text: \"Male\" },\n                          { value: \"female\", text: \"Female\" },\n                          { value: \"other\", text: \"Other\" },\n                        ]}\n                        onChange={handleFilterData}\n                        value={filterData.gender}\n                      />\n                    </FormGroup>\n                  </div>\n\t \n                  <div className=\"col-6\">\n                    <Button\n                      color=\"primary\"\n                      isOutline\n                      className=\"w-100\"\n                      onClick={formik.resetForm}\n                    >\n                      Reset\n                    </Button>\n                  </div>\n                  <div className=\"col-6\">\n                    <Button\n                      color=\"primary\"\n                      onClick={handleFilter}\n                      className=\"w-100\"\n                      type=\"submit\"\n                    >\n                      Filter\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </DropdownMenu>\n          </Dropdown>\n\n          <SubheaderSeparator />\n          <Button\n            icon=\"PersonAdd\"\n            color=\"primary\"\n            isLight\n            onClick={() => setEditModalStatus(true)}\n          >\n            New User\n          </Button>\n        </SubHeaderRight>\n      </SubHeader>\n      <Page>\n        <div className=\"row h-100\">\n          <div className=\"col-12\">\n            <Card stretch>\n              <CardBody isScrollable className=\"table-responsive\">\n                <table className=\"table table-modern table-hover\">\n                  <thead>\n                    <tr>\n                      <th\n                        onClick={() => requestSort(\"name\")}\n                        // onClick={()=> {aaa(data, 'name', 'ascending')}}\n\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        User{\" \"}\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"name\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th\n                        onClick={() => requestSort(\"email\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        Email\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"email\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th\n                        onClick={() => requestSort(\"age\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        Age\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"age\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th\n                        onClick={() => requestSort(\"role\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        Role\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"role\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th\n                        onClick={() => requestSort(\"gender\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        {\" \"}\n                    Gender\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"gender\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      {/* <th\n                        onClick={() => requestSort(\"marital\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        {\" \"}\n                        Marital status\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"marital\")}\n                          icon=\"FilterList\"\n                        />\n                      </th> */}\n                      <th\n                        onClick={() => requestSort(\"status\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        {\" \"}\n                        Status\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"status\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th> Action</th>\n                      {/* <th\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => requestSort('balance')}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cursor-pointer text-decoration-underline'>\n\t\t\t\t\t\t\t\t\t\t\t\tGender\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('balance')}\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='FilterList'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => requestSort('payout')}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cursor-pointer text-decoration-underline'>\n\t\t\t\t\t\t\t\t\t\t\t\tMarital status{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('payout')}\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='FilterList'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</th> */}\n                      <td />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {reversedDataa &&\n                      dataPagination(items, currentPage, perPage).map(\n                        (itemss: any, index: any) => {\n                          return (\n                            <tr key={itemss?._id}>\n                              <td>\n                                <div className=\"d-flex align-items-center\">\n                                  <div className=\"flex-shrink-0\">\n                                    <div\n                                      className=\"ratio ratio-1x1 me-3\"\n                                      style={{ width: 48 }}\n                                    >\n                                      {itemss?.mainAvatar ? (\n                                        <img\n                                          src={`https://datingapi.meander.software/assets/images/${itemss?.mainAvatar}`}\n                                          alt=\"image not fatch\"\n                                          style={{\n                                            width: \"100%\",\n                                            height: \"100%\",\n                                            borderRadius: \"30%\",\n                                          }}\n                                        />\n                                      ) : (\n                                        <div\n                                          className={`bg-l${\n                                            darkModeStatus ? \"o25\" : \"25\"\n                                          }-${getColorNameWithIndex(\n                                            index\n                                          )} text-${getColorNameWithIndex(\n                                            index\n                                          )} rounded-2 d-flex align-items-center justify-content-center`}\n                                        >\n                                          <span className=\"fw-bold\">\n                                            {getFirstLetter(itemss?.fullname)}\n                                          </span>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n                                  <div className=\"flex-grow-1\">\n                                    <div className=\"fs-6 fw-bold\">\n                                      {itemss?.fullname}\n                                    </div>\n                                    <div className=\"text-muted\">\n                                      <Icon icon=\"MyLocation\" />{\" \"}\n                                      <small>{itemss?.address}</small>\n                                    </div>\n                                  </div>\n                                </div>\n                              </td>\n                              <td>\n                                <Button\n                                  isLink\n                                  color=\"light\"\n                                  icon=\"Email\"\n                                  className=\"text-lowercase\"\n                                  tag=\"a\"\n                                  href={`mailto:${itemss?.email}`}\n                                >\n                                  {itemss?.email}\n                                </Button>\n                              </td>\n                              <td>\n                                {/* <p>{itemss?.age}</p> */}\n \n                                <p>{calculateAge(itemss?.dob) || \"00\"}</p>\n                               \n                              </td>\n                              <td>{itemss?.role?.name}</td>\n                              <td>{itemss?.gender}</td>\n\n                              {/* <td>{itemss?.marital}</td> */}\n                              <td>\n                                <Dropdown>\n                                  <DropdownToggle hasIcon={false}>\n                                    <Button\n                                      isLink\n                                      // color={item.status.color}\n                                      // icon='Circle'\n                                      // className=\"bn6\"\n                                    >\n                                      {itemss?.is_activated === true? (\n                                        <span className=\"badge bg-success\">\n                                          Active\n                                        </span>\n                                      ) : (\n                                        <span className=\"badge bg-secondary\">\n                                          Inactive\n                                        </span>\n                                      )}\n                                    </Button>\n                                  </DropdownToggle>\n                                  <DropdownMenu>\n                                    {Object.keys(ActiveUser).map((key) => (\n                                      <DropdownItem key={key}>\n                                        <div\n                                          onClick={() =>\n                                            handleStatus(\n                                              itemss._id,\n                                              ActiveUser[key].value\n                                            )\n                                          }\n                                          onKeyDown={(e) => {\n                                            if (\n                                              e.key === \"Enter\" ||\n                                              e.key === \"Space\"\n                                            ) {\n                                              handleStatus(\n                                                itemss._id,\n                                                ActiveUser[key].value\n                                              );\n                                            }\n                                          }}\n                                          role=\"button\"\n                                          tabIndex={0}\n                                        >\n                                          {ActiveUser[key].name}\n                                        </div>\n                                      </DropdownItem>\n                                    ))}\n                                  </DropdownMenu>\n                                </Dropdown>\n                              </td>\n                              {/* <td>\n\t\t\t\t\t\t\t\t<select name=\"cars\" id=\"cars\" \n\t\t\t\t\t\t\t\t         style={{\n\t\t\t\t\t\t\t\t\t            outline:'none',\n\t\t\t\t\t\t\t\t\t\t\t\tborder:'none',\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\tpadding:'5px',\n\t\t\t\t\t\t\t\t\t\t\t\tappearance: 'none', \n\t\t\t\t\t\t\t\t\t\t\t\tcolor:`${itemss?.status === 'active'? 'green':'red'}`,\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize:'18px'\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t// value={itemss?.status}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e:any)=>handleStatus(e,itemss?._id)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\n                                                     {itemss?.status === 'active' ? (\n            <>\n                <option value=\"active\" style={{ color: 'green' }}>\n                    Active\n                </option>\n                <option value=\"inactive\" style={{ color: 'red' }}>\n                    Inactive\n                </option>\n            </>\n        ) : (\n            <>\n                <option value=\"inactive\" style={{ color: 'red' }}>\n                    Inactive\n                </option>\n                <option value=\"active\" style={{ color: 'green' }}>\n                    Active\n                </option>\n            </>\n        )}\n                                   \n    \n                                     \n\n                               </select>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td> */}\n                              {/* <td>\n\t\t\t\t\t\t\t\t <Icon\n\t\t\t\t\t\t\t\t\t size='lg'\n\t\t\t\t\t\t\t\t\t icon={`custom ${i.payout.toLowerCase()}`}\n\t\t\t\t\t\t\t\t />{' '}\n\t\t\t\t\t\t\t\t {i.payout}\n\t\t\t\t\t\t\t </td> */}\n                              <td>\n                                <Dropdown>\n                                  <DropdownToggle hasIcon={false}>\n                                    <Button\n                                      icon=\"MoreHoriz\"\n                                      color=\"dark\"\n                                      isLight\n                                      shadow=\"sm\"\n                                      aria-label=\"More actions\"\n                                    />\n                                  </DropdownToggle>\n                                  <DropdownMenu isAlignmentEnd>\n                                    {/* <DropdownItem>\n                                      <Button\n                                        icon=\"Visibility\"\n                                        isDisable\n                                        tag=\"a\"\n                                        to={`/profile_management/view/${itemss._id}`}\n                                        onClick={() => {\n                                          const serializedData = JSON.stringify(\n                                            itemss\n                                          );\n\n                                          // Save the serialized data to session storage\n                                          sessionStorage.setItem(\n                                            \"Viewed_User_Data\",\n                                            serializedData\n                                          );\n\n                                          // setViewUser(true)\n                                          setViewdata(itemss);\n                                        }}\n                                      >\n                                        View\n                                      </Button>\n                                    </DropdownItem> */}\n                                    <DropdownItem>\n                                      <Button\n                                        icon=\"Edit\"\n                                        tag=\"a\"\n                                        // to={`../${demoPagesMenu.crm.subMenu.customerID.path}/${i.id}`}\n                                        onClick={() => {\n                                          setEditData(itemss);\n                                          setEditModal(true);\n                                          setEditId(itemss?._id);\n                                        }}\n                                      >\n                                        Edit\n                                      </Button>\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                      <Button\n                                        icon=\"Delete\"\n                                        tag=\"a\"\n                                        // to={`../${demoPagesMenu.crm.subMenu.customerID.path}/${i.id}`}\n                                        onClick={() => {\n                                          setDeleteModal(true);\n                                          setDeleteid(itemss?._id);\n                                        }}\n                                      >\n                                        Delete\n                                      </Button>\n                                    </DropdownItem>\n                                  </DropdownMenu>\n                                </Dropdown>\n                              </td>\n                            </tr>\n                          );\n                        }\n                      )}\n                  </tbody>\n                </table>\n              </CardBody>\n              {reversedDataa && (\n                <PaginationButtons\n                  data={items}\n                  label=\"customers\"\n                  setCurrentPage={setCurrentPage}\n                  currentPage={currentPage}\n                  perPage={perPage}\n                  setPerPage={setPerPage}\n                />\n              )}\n            </Card>\n          </div>\n        </div>\n      </Page>\n\n      \n        <Add setIsOpen={setEditModalStatus} isOpen={editModalStatus} id=\"0\" />\n      \n      {editId && (\n        <Edit_User\n          setIsOpen={setEditModal}\n          isOpen={editModal}\n          editData={editData}\n          editId={editId}\n          id=\"0\"\n        />\n      )}\n      {deleteId && (\n        <OrderDeleteModal\n          setIsOpen={setDeleteModal}\n          isOpen={deleteModal}\n          deleteId={deleteId}\n          id=\"0\"\n        />\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default UserManagement;\n"],"names":["id","name","email","type","membershipDate","dayjs","add","balance","payout","PAYMENTS","src","UserImage3","srcSet","UserImage3Webp","streetAddress","streetAddress2","city","state","stateFull","zip","streetAddressDelivery","streetAddress2Delivery","cityDelivery","stateDelivery","stateFullDelivery","zipDelivery","phone","latitude","longitude","UserImage5","UserImage5Webp","UserImage6","UserImage6Webp","UserImage4","UserImage4Webp","isOnline","UserImage7","UserImage7Webp","UserImage","UserImageWebp","UserImage2","UserImage2Webp","PAYPAL","PAYONEER","SWIFT","PER_COUNT","dataPagination","data","currentPage","perPage","totalItems","length","startIndex","endIndex","slice","Math","max","min","reverse","PaginationButtons","_ref","setCurrentPage","setPerPage","label","totalPage","ceil","_jsxs","CardFooter","children","_jsx","CardFooterLeft","className","getInfo","start","end","CardFooterRight","Pagination","ariaLabel","PaginationItem","isFirst","isDisabled","onClick","isPrev","pagination","items","i","push","isActive","isNext","isLast","Select","size","onChange","e","parseInt","target","value","toString","Object","keys","map","Option","defaultProps","disabled","ariaLabelledby","props","undefined","Options","_ref2","list","item","text","forwardRef","ref","classNames","active","role","onKeyDown","tabIndex","Icon","icon","displayName","required","placeholder","ariaDescribedby","multiple","title","defaultValue","isValid","isTouched","invalidFeedback","validFeedback","isValidMessage","isTooltipFeedback","onBlur","onFocus","onInput","onInvalid","onSelect","_Fragment","hidden","Validation","isTooltip","config","arguments","sortConfig","setSortConfig","useState","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","isOpen","editId","editData","setIsOpen","darkModeStatus","useDarkMode","itemData","Array","isArray","dispatch","useDispatch","modeid","localStorage","getItem","intersetArray","setIntersetArray","interest","errorHandling","setErrorHandling","avatarFil","setAvatarFile","store","useSelector","statee","roles","heightArray","interset","parseFloat","toFixed","WeightArray","userValidation","Yup","shape","fullname","dob","gender","formik","useFormik","initialValues","contact_number","password","moment","format","mode","is_activated","default_admin","enableReinitialize","validationSchema","onSubmit","values","console","log","fetchupdateUser","ApiTrue","imageid","createProfile","error","fetchUser","showNotification","setApiTrue","Modal","titleId","ModalHeader","ModalTitle","ModalBody","FormGroup","Input","handleChange","errors","Roleitem","index","_id","ModalFooter","Button","color","handleSubmit","_store$role$roles$dat","_store$role$roles$dat2","_store$Service$servic","_store$Service$servic2","isProfileUploaded","setisProfileUploaded","Service_Data","Service","services","isLoading","setIsLoading","useEffect","fetchRoles","getAll_Service","matches","service","async","_response$payload","response","createUser","payload","statusCode","message","alert","join","style","deleteId","isCentered","fetchdeleteUser","handleDeleteClick","Active","COLORS","Inactive","UserManagement","_Store$roles","_Store$roles$data","_stateUser$users","_stateUser$users$data","searchUser","setSearcUser","editModalStatus","setEditModalStatus","editModal","setEditModal","setEditData","deleteModal","setDeleteModal","setDeleteid","setEditId","Store","SelectedRole","setSelectRole","roleData","stateUser","user","reversedDataa","users","viewUser","setViewUser","viewData","setViewdata","filterData","setFilterData","minAge","maxAge","handleFilterData","filterMenu","setFilterMenu","handleStatus","idedi","status","updatestatus","setPage","searchInput","oneOf","filteredData","filter","f","toLowerCase","includes","useSortableData","calculateAge","dobString","today","Date","birthDate","age","getFullYear","monthDiff","getMonth","getDate","roleOptions","PageWrapper","demoPagesMenu","Label","htmlFor","setItem","SubHeader","SubHeaderLeft","inputValue","trim","fetchsearchUser","handleSearch","SubHeaderRight","Dropdown","DropdownToggle","hasIcon","isLight","DropdownMenu","isAlignmentEnd","isCloseAfterLeave","InputGroup","InputGroupText","isOutline","resetForm","handleFilter","searchUserbyAges","SubheaderSeparator","Page","Card","stretch","CardBody","isScrollable","itemss","_itemss$role","width","mainAvatar","alt","height","borderRadius","getColorNameWithIndex","getFirstLetter","address","isLink","tag","href","ActiveUser","DropdownItem","shadow","Add","Edit_User","OrderDeleteModal"],"sourceRoot":""}