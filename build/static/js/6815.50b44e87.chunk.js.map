{"version":3,"file":"static/js/6815.50b44e87.chunk.js","mappings":"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","sources":["common/data/dummyCustomerData.ts","common/data/enumPaymentMethod.ts","components/PaginationButtons.tsx","components/bootstrap/Option.tsx","components/bootstrap/Pagination.tsx","components/bootstrap/forms/Select.tsx","hooks/useSortableData.ts","pages/project_pages/services/Edit_Service.tsx","pages/project_pages/services/Add_Service.tsx","pages/project_pages/services/Delete_Service.tsx","pages/project_pages/services/ActiveService.tsx","pages/project_pages/services/service_management.tsx"],"sourcesContent":["import dayjs, { Dayjs } from 'dayjs';\nimport PAYMENTS from './enumPaymentMethod';\nimport UserImage from '../../assets/img/wanna/wanna1.png';\nimport UserImageWebp from '../../assets/img/wanna/wanna1.webp';\nimport UserImage2 from '../../assets/img/wanna/wanna2.png';\nimport UserImage2Webp from '../../assets/img/wanna/wanna2.webp';\nimport UserImage3 from '../../assets/img/wanna/wanna3.png';\nimport UserImage3Webp from '../../assets/img/wanna/wanna3.webp';\nimport UserImage4 from '../../assets/img/wanna/wanna4.png';\nimport UserImage4Webp from '../../assets/img/wanna/wanna4.webp';\nimport UserImage5 from '../../assets/img/wanna/wanna5.png';\nimport UserImage5Webp from '../../assets/img/wanna/wanna5.webp';\nimport UserImage6 from '../../assets/img/wanna/wanna6.png';\nimport UserImage6Webp from '../../assets/img/wanna/wanna6.webp';\nimport UserImage7 from '../../assets/img/wanna/wanna7.png';\nimport UserImage7Webp from '../../assets/img/wanna/wanna7.webp';\n\nconst data: {\n\tid: number;\n\tname: string;\n\temail: string;\n\ttype: string;\n\tmembershipDate: Dayjs;\n\tbalance: number;\n\tpayout: string;\n\tsrc: string;\n\tsrcSet: string;\n\tisOnline?: boolean;\n\tstreetAddress: string;\n\tstreetAddress2: string;\n\tcity: string;\n\tstate: string;\n\tstateFull: string;\n\tzip: string;\n\tstreetAddressDelivery: string;\n\tstreetAddress2Delivery: string;\n\tcityDelivery: string;\n\tstateDelivery: string;\n\tstateFullDelivery: string;\n\tzipDelivery: string;\n\tphone: string;\n\tlatitude: string;\n\tlongitude: string;\n}[] = [\n\t{\n\t\tid: 1,\n\t\tname: 'Jennifer Ferriera',\n\t\temail: 'JenniferFerriera@dayrep.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-1, 'month'),\n\t\tbalance: 580,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage3,\n\t\tsrcSet: UserImage3Webp,\n\t\tstreetAddress: '245 May Street',\n\t\tstreetAddress2: '',\n\t\tcity: 'Ashland',\n\t\tstate: 'KY',\n\t\tstateFull: 'Kentucky',\n\t\tzip: '41101',\n\t\tstreetAddressDelivery: '245 May Street',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Ashland',\n\t\tstateDelivery: 'KY',\n\t\tstateFullDelivery: 'Kentucky',\n\t\tzipDelivery: '41101',\n\t\tphone: '606-694-1746',\n\t\tlatitude: '38.573860',\n\t\tlongitude: '-82.636566',\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'Ashley M. Maclin',\n\t\temail: 'AshleyMMaclin@dayrep.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 124,\n\t\tpayout: PAYMENTS.SWIFT.name,\n\t\tsrc: UserImage5,\n\t\tsrcSet: UserImage5Webp,\n\t\tstreetAddress: '1296 Sunny Glen Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'Cleveland',\n\t\tstate: 'OH',\n\t\tstateFull: 'Ohio',\n\t\tzip: '44114',\n\t\tstreetAddressDelivery: '1296 Sunny Glen Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Cleveland',\n\t\tstateDelivery: 'OH',\n\t\tstateFullDelivery: 'Ohio',\n\t\tzipDelivery: '44114',\n\t\tphone: '216-835-3496',\n\t\tlatitude: '41.493382',\n\t\tlongitude: '-81.703659',\n\t},\n\t{\n\t\tid: 3,\n\t\tname: 'Katie A. Ruiz',\n\t\temail: 'KatieARuiz@rhyta.com',\n\t\ttype: 'Elite Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 1089,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage6,\n\t\tsrcSet: UserImage6Webp,\n\t\tstreetAddress: '2463 Daffodil Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'Lorton',\n\t\tstate: 'VA',\n\t\tstateFull: 'Virginia',\n\t\tzip: '22079',\n\t\tstreetAddressDelivery: '2463 Daffodil Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Lorton',\n\t\tstateDelivery: 'VA',\n\t\tstateFullDelivery: 'Virginia',\n\t\tzipDelivery: '22079',\n\t\tphone: '703-446-6588',\n\t\tlatitude: '38.752754',\n\t\tlongitude: '-77.172539',\n\t},\n\t{\n\t\tid: 4,\n\t\tname: 'Felix L. Harley',\n\t\temail: 'FelixLHarley@rhyta.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 120,\n\t\tpayout: PAYMENTS.PAYONEER.name,\n\t\tsrc: UserImage4,\n\t\tsrcSet: UserImage4Webp,\n\t\tisOnline: true,\n\t\tstreetAddress: '3785 Boone Crockett Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'Bremerton',\n\t\tstate: 'WA',\n\t\tstateFull: 'Washington',\n\t\tzip: '98337',\n\t\tstreetAddressDelivery: '3785 Boone Crockett Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Bremerton',\n\t\tstateDelivery: 'WA',\n\t\tstateFullDelivery: 'Washington',\n\t\tzipDelivery: '98337',\n\t\tphone: '360-478-3198',\n\t\tlatitude: '47.565636',\n\t\tlongitude: '-122.731689',\n\t},\n\t{\n\t\tid: 5,\n\t\tname: 'Frances Berry',\n\t\temail: 'FrancesBerry@armyspy.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 890,\n\t\tpayout: PAYMENTS.SWIFT.name,\n\t\tsrc: UserImage7,\n\t\tsrcSet: UserImage7Webp,\n\t\tstreetAddress: '4941 Petunia Way',\n\t\tstreetAddress2: '',\n\t\tcity: 'Hueytown',\n\t\tstate: 'AL',\n\t\tstateFull: 'Alabama',\n\t\tzip: '35023',\n\t\tstreetAddressDelivery: '4941 Petunia Way',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Hueytown',\n\t\tstateDelivery: 'AL',\n\t\tstateFullDelivery: 'Alabama',\n\t\tzipDelivery: '35023',\n\t\tphone: '205-744-3577',\n\t\tlatitude: '33.471535',\n\t\tlongitude: '-86.999886',\n\t},\n\t{\n\t\tid: 6,\n\t\tname: 'Jonathan B. Richardson',\n\t\temail: 'JonathanBRichardson@teleworm.us',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 437,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage,\n\t\tsrcSet: UserImageWebp,\n\t\tstreetAddress: '2248 Sigley Road',\n\t\tstreetAddress2: '',\n\t\tcity: 'Topeka',\n\t\tstate: 'KS',\n\t\tstateFull: 'Kansas',\n\t\tzip: '66608',\n\t\tstreetAddressDelivery: '2248 Sigley Road',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Topeka',\n\t\tstateDelivery: 'KS',\n\t\tstateFullDelivery: 'Kansas',\n\t\tzipDelivery: '66608',\n\t\tphone: '785-575-8814',\n\t\tlatitude: '39.049568',\n\t\tlongitude: '-95.731155',\n\t},\n\t{\n\t\tid: 7,\n\t\tname: 'Patrick M. Whitaker',\n\t\temail: 'PatrickMWhitaker@armyspy.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 678,\n\t\tpayout: PAYMENTS.PAYONEER.name,\n\t\tsrc: UserImage4,\n\t\tsrcSet: UserImage4Webp,\n\t\tstreetAddress: '3392 Melm Street',\n\t\tstreetAddress2: '',\n\t\tcity: 'Wellborn',\n\t\tstate: 'FL',\n\t\tstateFull: 'Florida',\n\t\tzip: '32094',\n\t\tstreetAddressDelivery: '3392 Melm Street',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Wellborn',\n\t\tstateDelivery: 'FL',\n\t\tstateFullDelivery: 'Florida',\n\t\tzipDelivery: '32094',\n\t\tphone: '386-963-2938',\n\t\tlatitude: '30.145744',\n\t\tlongitude: '-82.792900',\n\t},\n\t{\n\t\tid: 8,\n\t\tname: 'Arthur S. Meyer',\n\t\temail: 'ArthurSMeyer@rhyta.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 703,\n\t\tpayout: PAYMENTS.PAYONEER.name,\n\t\tsrc: UserImage2,\n\t\tsrcSet: UserImage2Webp,\n\t\tstreetAddress: '4558 Dancing Dove Lane',\n\t\tstreetAddress2: '',\n\t\tcity: 'New York',\n\t\tstate: 'NY',\n\t\tstateFull: 'New York',\n\t\tzip: '10013',\n\t\tstreetAddressDelivery: '4558 Dancing Dove Lane',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'New York',\n\t\tstateDelivery: 'NY',\n\t\tstateFullDelivery: 'New York',\n\t\tzipDelivery: '10013',\n\t\tphone: '347-584-6730',\n\t\tlatitude: '40.731033',\n\t\tlongitude: '-73.981125',\n\t},\n\t{\n\t\tid: 9,\n\t\tname: 'Frances L. Wilson',\n\t\temail: 'FrancesLWilson@jourrapide.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 389,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage6,\n\t\tsrcSet: UserImage6Webp,\n\t\tstreetAddress: '1946 Juniper Drive',\n\t\tstreetAddress2: '',\n\t\tcity: 'Mount Pleasant',\n\t\tstate: 'MI',\n\t\tstateFull: 'Michigan',\n\t\tzip: '48858',\n\t\tstreetAddressDelivery: '1946 Juniper Drive',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Mount Pleasant',\n\t\tstateDelivery: 'MI',\n\t\tstateFullDelivery: 'Michigan',\n\t\tzipDelivery: '48858',\n\t\tphone: '989-817-2934',\n\t\tlatitude: '43.598652',\n\t\tlongitude: '-84.722626',\n\t},\n\t{\n\t\tid: 10,\n\t\tname: 'Jayden Holloway',\n\t\temail: 'JaydenHolloway@rhyta.com',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 943,\n\t\tpayout: PAYMENTS.PAYPAL.name,\n\t\tsrc: UserImage2,\n\t\tsrcSet: UserImage2Webp,\n\t\tstreetAddress: '4904 Cerullo Road',\n\t\tstreetAddress2: '',\n\t\tcity: 'Louisville',\n\t\tstate: 'KY',\n\t\tstateFull: 'Kentucky',\n\t\tzip: '40299',\n\t\tstreetAddressDelivery: '4904 Cerullo Road',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'Louisville',\n\t\tstateDelivery: 'KY',\n\t\tstateFullDelivery: 'Kentucky',\n\t\tzipDelivery: '40299',\n\t\tphone: '502-475-8381',\n\t\tlatitude: '38.118217',\n\t\tlongitude: '-85.580116',\n\t},\n\t{\n\t\tid: 11,\n\t\tname: 'Leon Moran',\n\t\temail: 'LeonMoran@teleworm.us',\n\t\ttype: 'Author',\n\t\tmembershipDate: dayjs().add(-2, 'month'),\n\t\tbalance: 738,\n\t\tpayout: PAYMENTS.SWIFT.name,\n\t\tsrc: UserImage4,\n\t\tsrcSet: UserImage4Webp,\n\t\tstreetAddress: '111 Brannon Street',\n\t\tstreetAddress2: '',\n\t\tcity: 'City Of Commerce',\n\t\tstate: 'CA',\n\t\tstateFull: 'California',\n\t\tzip: '90040',\n\t\tstreetAddressDelivery: '111 Brannon Street',\n\t\tstreetAddress2Delivery: '',\n\t\tcityDelivery: 'City Of Commerce',\n\t\tstateDelivery: 'CA',\n\t\tstateFullDelivery: 'California',\n\t\tzipDelivery: '90040',\n\t\tphone: '213-280-6792',\n\t\tlatitude: '34.001846',\n\t\tlongitude: '-118.092308',\n\t},\n];\nexport default data;\n","const PAYMENTS: { [key: string]: { name: string } } = {\n\tPAYPAL: {\n\t\tname: 'PayPal',\n\t},\n\tPAYONEER: {\n\t\tname: 'Payoneer',\n\t},\n\tSWIFT: {\n\t\tname: 'Swift',\n\t},\n};\n\nexport default PAYMENTS;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardFooter, CardFooterLeft, CardFooterRight } from './bootstrap/Card';\nimport Pagination, { PaginationItem } from './bootstrap/Pagination';\nimport Select from './bootstrap/forms/Select';\nimport Option from './bootstrap/Option';\n\nexport const PER_COUNT = {\n\t3: 3,\n\t5: 5,\n\t10: 10,\n\t25: 25,\n\t50: 50,\n};\n\n// export const dataPagination = (data: any[], currentPage: number, perPage: number) =>\n// \tdata.filter(\n// \t\t(i, index) => index - -1 >= (currentPage - 1) * perPage ,\n// \t);\nexport const dataPagination = (data: any[], currentPage: number, perPage: number) => {\n\tconst totalItems = data.length;\n\tconst startIndex = totalItems - (currentPage * perPage);\n\tconst endIndex = totalItems - ((currentPage - 1) * perPage);\n\t\n\t// Make sure to return only items that are within the bounds of the array\n\treturn data.slice(Math.max(startIndex, 0), Math.min(endIndex, totalItems)).reverse();\n};\n\n\n\ninterface IPaginationButtonsProps {\n\tsetCurrentPage(...args: unknown[]): unknown;\n\tcurrentPage: number;\n\tperPage: number;\n\tsetPerPage(...args: unknown[]): unknown;\n\tdata: unknown[];\n\tlabel?: string;\n}\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({\n\tsetCurrentPage,\n\tcurrentPage,\n\tperPage,\n\tsetPerPage,\n\tdata,\n\tlabel,\n}) => {\n\tconst totalItems = data.length;\n\tconst totalPage = Math.ceil(totalItems / perPage);\n\n\tconst pagination = () => {\n\t\tlet items = [];\n\n\t\tlet i = currentPage - 1;\n\t\twhile (i >= currentPage - 1 && i > 0) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage - 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti -= 1;\n\t\t}\n\n\t\titems = items.reverse();\n\n\t\titems.push(\n\t\t\t<PaginationItem key={currentPage} isActive onClick={() => setCurrentPage(currentPage)}>\n\t\t\t\t{currentPage}\n\t\t\t</PaginationItem>,\n\t\t);\n\n\t\ti = currentPage + 1;\n\t\twhile (i <= currentPage + 1 && i <= totalPage) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage + 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti += 1;\n\t\t}\n\n\t\treturn items;\n\t};\n\n\tconst getInfo = () => {\n\t\tconst start = perPage * (currentPage - 1) + 1;\n\n\t\tconst end = perPage * currentPage;\n\n\t\treturn (\n\t\t\t<span className='pagination__desc'>\n\t\t\t\tShowing {start} to {end > totalItems ? totalItems : end} of {totalItems} {label}\n\t\t\t</span>\n\t\t);\n\t};\n\n\treturn (\n\t\t<CardFooter>\n\t\t\t<CardFooterLeft>\n\t\t\t\t<span className='text-muted'>{getInfo()}</span>\n\t\t\t</CardFooterLeft>\n\n\t\t\t<CardFooterRight className='d-flex'>\n\t\t\t\t{totalPage > 1 && (\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t<Pagination ariaLabel={label}>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisFirst\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisPrev\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage - 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{currentPage - 1 > 1 && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage - 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{pagination()}\n\t\t\t\t\t\t{currentPage + 1 < totalPage && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage + 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisNext\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage + 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisLast\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(totalPage)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Pagination>\n\t\t\t\t)}\n\n\t\t\t\t<Select\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tariaLabel='Per'\n\t\t\t\t\tonChange={(e: { target: { value: string } }) => {\n\t\t\t\t\t\tsetPerPage(parseInt(e.target.value, 10));\n\t\t\t\t\t\tsetCurrentPage(1);\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={perPage.toString()}>\n\t\t\t\t\t{Object.keys(PER_COUNT).map((i) => (\n\t\t\t\t\t\t<Option key={i} value={i}>\n\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</CardFooterRight>\n\t\t</CardFooter>\n\t);\n};\nPaginationButtons.propTypes = {\n\tsetCurrentPage: PropTypes.func.isRequired,\n\tcurrentPage: PropTypes.number.isRequired,\n\tperPage: PropTypes.number.isRequired,\n\tsetPerPage: PropTypes.func.isRequired,\n\t// eslint-disable-next-line react/forbid-prop-types\n\tdata: PropTypes.array.isRequired,\n\tlabel: PropTypes.string,\n};\nPaginationButtons.defaultProps = {\n\tlabel: 'items',\n};\n\nexport default PaginationButtons;\n","import React, { FC, HTMLAttributes } from 'react';\nimport PropTypes from 'prop-types';\n\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\n\tchildren: string;\n\tvalue?: string | number;\n\tdisabled?: boolean;\n\tariaLabelledby?: string | null;\n}\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\n\treturn (\n\t\t<option\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\taria-labelledby={ariaLabelledby || children}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</option>\n\t);\n};\nOption.propTypes = {\n\tchildren: PropTypes.string.isRequired,\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tdisabled: PropTypes.bool,\n\tariaLabelledby: PropTypes.string,\n};\nOption.defaultProps = {\n\tdisabled: false,\n\tariaLabelledby: null,\n\tvalue: undefined,\n};\n\nexport interface IOptionsProps {\n\tlist: {\n\t\tvalue?: string | number;\n\t\ttext?: string | number;\n\t\tlabel?: string | number;\n\t}[];\n}\n// @ts-ignore\nexport const Options: FC<IOptionsProps> = ({ list }) => {\n\treturn list?.map((item) => (\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t<Option key={item.value} value={item.value} {...item}>\n\t\t\t{(item.text as string) || (item.label as string)}\n\t\t</Option>\n\t));\n};\nOptions.propTypes = {\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t).isRequired,\n};\n\nexport default Option;\n","import React, { forwardRef, HTMLAttributes, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\n\ninterface IPaginationItemProps extends HTMLAttributes<HTMLLIElement> {\n\tclassName?: string;\n\tisDisabled?: boolean;\n\tisActive?: boolean;\n\tisPrev?: boolean;\n\tisFirst?: boolean;\n\tisNext?: boolean;\n\tisLast?: boolean;\n\tchildren?: ReactNode;\n\tonClick?(...args: unknown[]): unknown | undefined;\n}\nexport const PaginationItem = forwardRef<HTMLLIElement, IPaginationItemProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tisDisabled,\n\t\t\tisActive,\n\t\t\tisPrev,\n\t\t\tisFirst,\n\t\t\tisNext,\n\t\t\tisLast,\n\t\t\tchildren,\n\t\t\tonClick,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<li\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'page-item',\n\t\t\t\t\t{\n\t\t\t\t\t\tdisabled: isDisabled,\n\t\t\t\t\t\tactive: isActive,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}>\n\t\t\t\t<span\n\t\t\t\t\trole='button'\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tonKeyDown={onClick}\n\t\t\t\t\tclassName='page-link'\n\t\t\t\t\ttabIndex={isDisabled ? -1 : undefined}\n\t\t\t\t\taria-disabled={isDisabled ? 'true' : undefined}\n\t\t\t\t\taria-label={\n\t\t\t\t\t\t(isPrev && 'First Page') || (isNext && 'Last Page') || `${children} page`\n\t\t\t\t\t}>\n\t\t\t\t\t{isPrev && <Icon icon='ChevronLeft' />}\n\t\t\t\t\t{isFirst && <Icon icon='FirstPage' />}\n\t\t\t\t\t{isNext && <Icon icon='ChevronRight' />}\n\t\t\t\t\t{isLast && <Icon icon='LastPage' />}\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t);\n\t},\n);\nPaginationItem.displayName = 'PaginationItem';\nPaginationItem.propTypes = {\n\tclassName: PropTypes.string,\n\tisDisabled: PropTypes.bool,\n\tisActive: PropTypes.bool,\n\tisPrev: PropTypes.bool,\n\tisFirst: PropTypes.bool,\n\tisNext: PropTypes.bool,\n\tisLast: PropTypes.bool,\n\tchildren: PropTypes.node,\n\tonClick: PropTypes.func,\n};\nPaginationItem.defaultProps = {\n\tclassName: undefined,\n\tisDisabled: false,\n\tisActive: false,\n\tisPrev: false,\n\tisFirst: false,\n\tisNext: false,\n\tisLast: false,\n\tchildren: null,\n\tonClick: undefined,\n};\n\ninterface IPaginationProps extends HTMLAttributes<HTMLElement> {\n\tariaLabel: string;\n\tchildren:\n\t\t| ReactElement<IPaginationItemProps>\n\t\t| ReactElement<IPaginationItemProps>[]\n\t\t| ReactNode\n\t\t| ReactNode[];\n\tclassName?: string | undefined;\n\tsize?: 'sm' | 'lg' | null;\n}\nconst Pagination = forwardRef<HTMLDivElement, IPaginationProps>(\n\t({ ariaLabel, className, children, size, ...props }, ref) => {\n\t\treturn (\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t<nav ref={ref} aria-label={ariaLabel} className={className} {...props}>\n\t\t\t\t<ul className={classNames('pagination', { [`pagination-${size}`]: size }, 'm-0')}>\n\t\t\t\t\t{children}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t},\n);\nPagination.displayName = 'Pagination';\nPagination.propTypes = {\n\tariaLabel: PropTypes.string.isRequired,\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n\tsize: PropTypes.oneOf(['sm', 'lg']),\n};\nPagination.defaultProps = {\n\tclassName: undefined,\n\tsize: null,\n};\n\nexport default Pagination;\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Option, { IOptionsProps, Options } from '../Option';\nimport Validation from './Validation';\n\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\n\tid?: string;\n\tclassName?: string;\n\tname?: string;\n\tchildren?: ReactNode;\n\tariaLabel: string;\n\tplaceholder?: string;\n\tsize?: 'lg' | 'sm';\n\tmultiple?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\tariaDescribedby?: string;\n\tariaLabelledby?: string;\n\ttitle?: string;\n\tvalue?: string | string[];\n\tdefaultValue?: string | string[];\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisValidMessage?: boolean;\n\tisTooltipFeedback?: boolean;\n\tonBlur?(...args: unknown[]): unknown;\n\tonChange?(...args: unknown[]): unknown;\n\tonFocus?(...args: unknown[]): unknown;\n\tonInput?(...args: unknown[]): unknown;\n\tonInvalid?(...args: unknown[]): unknown;\n\tonSelect?(...args: unknown[]): unknown;\n}\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tname,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\trequired,\n\t\t\tplaceholder,\n\t\t\tariaDescribedby,\n\t\t\tariaLabelledby,\n\t\t\tariaLabel,\n\t\t\tlist,\n\t\t\tmultiple,\n\t\t\ttitle,\n\t\t\tsize,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisValidMessage,\n\t\t\tisTooltipFeedback,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonInput,\n\t\t\tonInvalid,\n\t\t\tonSelect,\n\t\t\t...props\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select\n\t\t\t\t\tref={ref}\n\t\t\t\t\tid={id}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'form-select',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\tname={name}\n\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\taria-describedby={ariaDescribedby}\n\t\t\t\t\taria-labelledby={ariaLabelledby}\n\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\trequired={required}\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tonInput={onInput}\n\t\t\t\t\tonInvalid={onInvalid}\n\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...props}>\n\t\t\t\t\t{placeholder && (\n\t\t\t\t\t\t<Option value='' hidden>\n\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t)}\n\t\t\t\t\t{children || (list && <Options list={list} />)}\n\t\t\t\t</select>\n\t\t\t\t{isValidMessage && (\n\t\t\t\t\t<Validation\n\t\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t},\n);\nSelect.displayName = 'Select';\nSelect.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\t/**\n\t * If the name value is left blank, the id value is assigned.\n\t */\n\tname: PropTypes.string,\n\tchildren: PropTypes.node,\n\tariaLabel: PropTypes.string.isRequired,\n\tplaceholder: PropTypes.string,\n\tsize: PropTypes.oneOf(['lg', 'sm']),\n\tmultiple: PropTypes.bool,\n\t/**\n\t * A *disabled* element isn't editable and isn't sent on submit.\n\t */\n\tdisabled: PropTypes.bool,\n\trequired: PropTypes.bool,\n\tariaDescribedby: PropTypes.string,\n\tariaLabelledby: PropTypes.string,\n\ttitle: PropTypes.string,\n\t/**\n\t * For formik ***`formik.values.ID_OR_NAME`***\n\t */\n\t// @ts-ignore\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tdefaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t),\n\t/**\n\t * For formik ***`formik.touched.ID_OR_NAME`***\n\t */\n\tisTouched: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.isValid`***\n\t */\n\tisValid: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.errors.ID_OR_NAME`***\n\t */\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisValidMessage: PropTypes.bool,\n\tisTooltipFeedback: PropTypes.bool,\n\t/**\n\t * Fires the moment that the element loses focus. For formik ***`formik.handleBlur`***\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * Fires the moment when the value of the element is changed. For formik ***`formik.handleChange`***\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Fires the moment when the element gets focus\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Script to be run when an element gets user input\n\t */\n\tonInput: PropTypes.func,\n\t/**\n\t * Script to be run when an element is invalid\n\t */\n\tonInvalid: PropTypes.func,\n\t/**\n\t * Fires after some text has been selected in an element\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * More information, [react-input-mask](https://github.com/sanniassin/react-input-mask#react-input-mask).\n\t */\n};\nSelect.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tname: undefined,\n\tchildren: null,\n\tplaceholder: undefined,\n\tmultiple: false,\n\tsize: undefined,\n\tdisabled: false,\n\trequired: false,\n\tariaDescribedby: undefined,\n\tariaLabelledby: undefined,\n\ttitle: undefined,\n\tvalue: undefined,\n\tdefaultValue: undefined,\n\tlist: undefined,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisValidMessage: true,\n\tisTooltipFeedback: false,\n\tonBlur: undefined,\n\tonChange: undefined,\n\tonFocus: undefined,\n\tonInput: undefined,\n\tonInvalid: undefined,\n\tonSelect: undefined,\n};\n\nexport default Select;\n","import { useMemo, useState } from 'react';\n\nconst useSortableData = (items: any[], config = null) => {\n\tconst [sortConfig, setSortConfig] = useState(config);\n\n\tconst sortedItems = useMemo(() => {\n\t\tconst sortableItems = [...items];\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t}\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, sortConfig]);\n\n\tconst requestSort = (key: any) => {\n\t\tlet direction = 'ascending';\n\t\t// @ts-ignore\n\t\tif (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\t// @ts-ignore\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\tconst getClassNamesFor = (key: any) => {\n\t\tif (!sortConfig) {\n\t\t\treturn 'd-none';\n\t\t}\n\t\t// eslint-disable-next-line consistent-return\n\t\t// @ts-ignore\n\t\treturn sortConfig.key === key ? sortConfig.direction : 'd-none';\n\t};\n\n\treturn { items: sortedItems, requestSort, getClassNamesFor, sortConfig };\n};\n\nexport default useSortableData;\n","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormikHelpers, useFormik } from 'formik';\nimport dayjs from 'dayjs';\nimport * as Yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport Modal, {\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tModalTitle,\n} from '../../../components/bootstrap/Modal';\nimport data from '../../../common/data/dummyCustomerData';\nimport showNotification from '../../../components/extras/showNotification';\nimport Icon from '../../../components/icon/Icon';\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../components/bootstrap/forms/Input';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport Button from '../../../components/bootstrap/Button';\nimport Label from '../../../components/bootstrap/forms/Label';\nimport Checks, { ChecksGroup } from '../../../components/bootstrap/forms/Checks';\nimport PAYMENTS from '../../../common/data/enumPaymentMethod';\nimport { createUser, fetchUser, fetchupdateUser } from '../../../redux/Slice/UserManagement_slice';\nimport img from '../../../assets/img/user6.png';\nimport { createProfile } from '../../../redux/Api/UserManagement';\nimport { getColorNameWithIndex } from '../../../common/data/enumColors';\nimport { getFirstLetter } from '../../../helpers/helpers';\nimport useDarkMode from '../../../hooks/useDarkMode';\nimport { getAllInterest } from '../../../redux/Slice/IntersetSlice';\nimport { getAll_Service, update_Service, upload_Banner } from '../../../redux/Slice/Services_Slice';\nimport { fetchModes } from '../../../redux/Slice/Modes_Slice';\n\ninterface ICustomerEditModalProps {\n\teditId: any;\n\teditData: any;\n\tid: string;\n\tisOpen: boolean;\n\tsetIsOpen(...args: unknown[]): unknown;\n}\nconst EditUser: FC<ICustomerEditModalProps> = ({ id, isOpen, editId, editData, setIsOpen }) => {\n\n\tconst { darkModeStatus } = useDarkMode();\n\tconst itemData = id ? data.filter((item) => item.id.toString() === id.toString()) : {};\n\tconst item = id && Array.isArray(itemData) ? itemData[0] : {};\n\tconst dispatch = useDispatch();\n\tconst modeid = localStorage.getItem('modeid');\n\tconst [intersetArray, setIntersetArray] = useState<any>(editData?.interest)\n\tconst [errorHandling, setErrorHandling] = useState(false);\n\tconst [avatarFil, setAvatarFile] = useState<any>(null);\n\tconst store = useSelector((statee: any) => statee);\n\tconst role = store.role.roles.data ? store.role.roles.data : []\n\tconst stateinterest = useSelector((statee: any) => statee.interest)\n\tconst dataa: any = stateinterest.interset.data\n\tconst Data = store.mode.modes.data?.data\n\tconst mode_data = Data\n\tconst [file, setFile] = useState<File | null>(null);\n\tconst [preview, setPreview] = useState<string | null>(null);\n\tconst [previewUrl, setPreviewUrl] = useState<string>(\"\");\n\n\t// Use Effect to handle preview and cleanup\n\n\n\t// Handle file selection\n\tconst handleFileChange = (event: any) => {\n\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\t\tconst file = event.currentTarget.files?.[0];\n\n\t\tif (file) {\n\t\t\tformik.setFieldValue(\"banner.bannerImage\", file); // Corrected field path\n\n\t\t\t// Create Object URL for preview\n\t\t\tconst objectUrl = URL.createObjectURL(file);\n\t\t\tsetPreviewUrl(objectUrl);\n\t\t}\n\t};\n\n\t// Clean up object URL when component unmounts or file changes\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tif (previewUrl) {\n\t\t\t\tURL.revokeObjectURL(previewUrl);\n\t\t\t}\n\t\t};\n\t}, [previewUrl]);\n\n\tuseEffect(() => {\n\n\t\tdispatch(fetchModes({}) as any);\n\n\t\t// if (modeid) {\n\t\t//   dispatch(getAllInterest(modeid) as any);\n\t\t// }\n\t}, [dispatch]);\n\n\t// const handleActiveInteset = (idd: any) => {\n\t// \tconst data2 = intersetArray.includes(idd)\n\t// \tif (data2) {\n\t// \t\tconst updatedArray = intersetArray.filter((itema: any) => itema !== idd);\n\t// \t\tsetIntersetArray(updatedArray);\n\t// \t} else {\n\t// \t\tsetIntersetArray([...intersetArray, idd])\n\n\t// \t}\n\t// }\n\n\t// const heightArray = [];\n\t// for (let i = 3; i <= 6.6; i += 0.1) {\n\t// \theightArray.push(parseFloat(i.toFixed(1)));\n\t// }\n\n\t// const WeightArray = [];\n\n\t// for (let i = 20; i < 120; i += 1) {\n\t// \tWeightArray.push(i);\n\t// }\n\n\tconst NumberofSiblingsArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\tconst userValidation = Yup.object().shape({\n\t\tname: Yup.string().required(\"Name is required\"),\n\t\tdisplay_name: Yup.string().required(\"Display Name is required\"),\n\t\tdescription: Yup.string().required(\"Description is required\"),\n\t\tbanner: Yup.object().shape({\n\t\t\ttitle: Yup.string().required(\"Banner Title is required\"),\n\t\t\tdescription: Yup.string().required(\"Banner Description is required\"),\n\t\t\tbannerImage: Yup.mixed().required(\"Banner Image is required\"),\n\t\t}),\n\t\tnote: Yup.string().required(\"Note is required\"),\n\t\tadmin_note: Yup.string().required(\"Admin Note is required\"),\n\t\tmode: Yup.string().required(\"Mode is required\"),\n\t\t// Category: Yup.string().required(\"Category is required\"),\n\t\tis_activated: Yup.boolean().required(\"Is Activated is required\"),\n\t});\n\n\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\tconst UploadBanner = async (bannerImage: any, editData: any, editId: any) => {\n\t\tif (bannerImage instanceof File) {\n\t\t\tconst BannerData = new FormData();\n\t\t\tBannerData.append(\"bannerImage\", bannerImage); // Correctly append the file\n\t\t\tBannerData.append(\"title\", editData?.banner?.title || \"\");\n\t\t\tBannerData.append(\"description\", editData?.banner?.description || \"\");\n\n\t\t\tconsole.log(\"Uploading banner...\");\n\t\t\tBannerData.forEach((value, key) => {\n\t\t\t\tconsole.log(`${key}:`, value);\n\t\t\t});\n\n\t\t\tconst uploadResponse = await dispatch(upload_Banner({ BannerData, editId }) as any);\n\t\t\tconsole.log(\"Banner upload respons:\", uploadResponse);\n\t\t\tif (uploadResponse?.success && uploadResponse?.data) {\n\t\t\t\treturn uploadResponse.data.banner; // Return the uploaded URL\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Banner upload failed:\", uploadResponse);\n\t\t\t\tthrow new Error(\"Banner upload failed\");\n\t\t\t}\n\t\t}\n\t\treturn null; // No upload needed\n\t};\n\n\n\tconst formik = useFormik({\n\n\t\tinitialValues: {\n\t\t\tname: editData?.name || '',\n\t\t\tdisplay_name: editData?.display_name || '',\n\t\t\tdescription: editData?.description || '',\n\t\t\tbanner: {\n\t\t\t\ttitle: editData?.banner?.title || '',\n\t\t\t\tdescription: editData?.banner?.description || '',\n\t\t\t\tbannerImage: editData?.banner?.bannerImage || '',\n\n\t\t\t},\n\t\t\tnote: editData?.note || '',\n\t\t\tadmin_note: editData?.admin_note || '',\n\t\t\tmode: editData?.mode || '',\n\t\t\tCategory: editData?.Category || '',\n\t\t\tis_activated: true,\n\n\t\t},\n\n\t\tenableReinitialize: true,\n\t\tvalidationSchema: userValidation,\n\n\n\n\t\tonSubmit: async (values: any, { setSubmitting }: FormikHelpers<any>) => {\n\n\t\t\ttry {\n\t\t\t\tsetErrorHandling(true);\n\t\t\t\tconsole.log(values, \"valuesupdated debug\");\n\n\t\t\t\t// Extract banner image from Formik values\n\t\t\t\tconst bannerImage = values?.banner?.bannerImage;\n\t\t\t\tlet uploadedBannerUrl = values?.banner?.bannerImage; // Default to existing banner image\n\n\t\t\t\t// If bannerImage is a File, upload it first\n\t\t\t\tif (bannerImage instanceof File) {\n\t\t\t\t\tuploadedBannerUrl = await UploadBanner(bannerImage, values, editId);\n\t\t\t\t}\n\n\t\t\t\t// Prepare updated values\n\t\t\t\tconst updatedValues = {\n\t\t\t\t\t...values,\n\t\t\t\t\tbanner: {\n\t\t\t\t\t\t...values.banner,\n\t\t\t\t\t\tbannerImage: uploadedBannerUrl, // Use uploaded banner URL or existing one\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconsole.log(\"Updating service with values:\", updatedValues);\n\t\t\t\tawait dispatch(update_Service({ editId, values: updatedValues }) as any);\n\n\t\t\t\t// Show success notification\n\t\t\t\tshowNotification(\n\t\t\t\t\t<span className=\"d-flex align-items-center\">\n\t\t\t\t\t\t<Icon icon=\"Info\" size=\"lg\" className=\"me-1\" />\n\t\t\t\t\t\t<span>Updated Successfully</span>\n\t\t\t\t\t</span>,\n\t\t\t\t\t\"Service has been updated successfully\"\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error in submitting:\", error);\n\t\t\t} finally {\n\t\t\t\tsetSubmitting(false);\n\t\t\t\tdispatch(getAll_Service({}) as any);\n\t\t\t\tsetIsOpen(false);\n\t\t\t}\n\t\t}\n\n\n\t});\n\n\t// Create preview URL when file is set\n\tuseEffect(() => {\n\t\tif (file) {\n\t\t\tconst objectURL = URL.createObjectURL(file);\n\t\t\tsetPreview(objectURL);\n\n\t\t\treturn () => {\n\t\t\t\tURL.revokeObjectURL(objectURL);\n\t\t\t};\n\t\t}\n\t}, [file]);\n\n\tconst [ApiTrue, setApiTrue] = useState(false)\n\tconst handleAvatarChang = (e: any) => {\n\n\t\tsetApiTrue(true)\n\n\t\tsetAvatarFile(e.target.files[0]);\n\t\tif (e.target.files && e.target.files.length > 0) {\n\t\t\tsetAvatarFile(e.target.files[0]);\n\t\t}\n\t};\n\tif (id || id === '0') {\n\t\treturn (\n\t\t\t<Modal isOpen={isOpen} setIsOpen={setIsOpen} size='xl' titleId={id.toString()}>\n\t\t\t\t<ModalHeader setIsOpen={setIsOpen} className='p-4'>\n\t\t\t\t\t<ModalTitle id={id}>{editData?.name || 'Edit User'}</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody className='px-4'>\n\t\t\t\t\t<div className='row g-4'>\n\t\t\t\t\t\t<FormGroup id=\"name\" label=\"Name\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\tvalue={formik.values.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errorHandling && formik.errors.name ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.name as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t<FormGroup id=\"display_name\" label=\"Display Name\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"display_name\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\tvalue={formik.values.display_name}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{errorHandling && formik.errors.display_name ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.display_name as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t<FormGroup id=\"description\" label=\"Description\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\tvalue={formik.values.description}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errorHandling && formik.errors.description ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.description as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t<FormGroup id=\"note\" label=\"Note\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\tvalue={formik.values.note}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errorHandling && formik.errors.note ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.note as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t<FormGroup id=\"admin_note\" label=\"Admin Note\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"admin_note\"\n\t\t\t\t\t\t\t\t// className=\"form-select\"\n\t\t\t\t\t\t\t\tname=\"admin_note\"\n\t\t\t\t\t\t\t\tvalue={formik.values.admin_note}\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errorHandling && formik.errors.admin_note ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.admin_note as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t<FormGroup id=\"mode\" label=\"Mode\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"mode\"\n\t\t\t\t\t\t\t\tclassName=\"form-select\"\n\t\t\t\t\t\t\t\tname=\"mode\"\n\t\t\t\t\t\t\t\tvalue={formik.values.mode}\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"\" disabled>\n\t\t\t\t\t\t\t\t\t...Select...\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t{Array.isArray(mode_data) ? (\n\t\t\t\t\t\t\t\t\tmode_data.map((items: any, index: number) => (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={items._id}>\n\t\t\t\t\t\t\t\t\t\t\t{items.name}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<option disabled>Loading...</option>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{errorHandling && formik.errors.mode ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.mode as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t{/* <FormGroup id=\"mCategoryode\" label=\"Category\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"Category\"\n\t\t\t\t\t\t\t\tclassName=\"form-select\"\n\t\t\t\t\t\t\t\tname=\"Category\"\n\t\t\t\t\t\t\t\tvalue={formik.values.Category}\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"\" disabled>\n\t\t\t\t\t\t\t\t\t...Select...\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t{role && role.map((Roleitem: any) => {\n\n\t\t\t\t\t\t\t\t\treturn <option value={Roleitem?._id} key={Roleitem?._id}>{Roleitem?.name}</option>\n\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{errorHandling && formik.errors.Category ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.Category as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup> */}\n\n\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\tid=\"is_activated\"\n\t\t\t\t\t\t\tlabel=\"Is Activated\"\n\t\t\t\t\t\t\tclassName=\"col-md-6\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"is_activated\"\n\t\t\t\t\t\t\t\tclassName=\"form-select\"\n\t\t\t\t\t\t\t\tname=\"is_activated\"\n\t\t\t\t\t\t\t\tvalue={formik.values.is_activated as any}\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"true\">True</option>\n\t\t\t\t\t\t\t\t<option value=\"false\">False</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{errorHandling && formik.errors.is_activated ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMassage\">{formik.errors.is_activated as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup id=\"banner_title\" label=\"Banner Title\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"banner_title\"\n\t\t\t\t\t\t\t\tname=\"banner.title\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tvalue={formik.values.banner.title}\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errorHandling && formik.touched.banner?.title && formik.errors.banner?.title ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMessage\">{formik.errors.banner.title as any}</div>) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t<FormGroup id=\"banner_description\" label=\"Banner Description\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"banner_description\"\n\t\t\t\t\t\t\t\tname=\"banner.description\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tvalue={formik.values.banner.description}\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errorHandling && formik.touched.banner?.description && formik.errors.banner?.description ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMessage\">{formik.errors.banner.description as any}</div>) : (\n\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormGroup>\n\n\n\n\t\t\t\t\t\t<FormGroup id=\"banner_image\" label=\"Banner Image\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tid=\"banner_image\"\n\t\t\t\t\t\t\t\tname=\"banner.bannerImage\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\tonChange={handleFileChange}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* Image Preview */}\n\t\t\t\t\t\t\t{formik.values.banner.bannerImage && (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\t\t\t\talt=\"Banner Preview\"\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\", height: \"100px\", marginTop: \"10px\", borderRadius: \"5px\" }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{/* Show Validation Errors */}\n\t\t\t\t\t\t\t{errorHandling && formik.touched.banner?.bannerImage && formik.errors.banner?.bannerImage ? (\n\t\t\t\t\t\t\t\t<div className=\"errorMessage\">{formik.errors.banner.bannerImage as any}</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div />)}\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter className='px-4 pb-4'>\n\t\t\t\t\t<Button color='info' onClick={() => {\n\t\t\t\t\t\tformik.handleSubmit()\n\t\t\t\t\t\tsetErrorHandling(true)\n\t\t\t\t\t}}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t);\n\t}\n\treturn null;\n};\n\nEditUser.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tisOpen: PropTypes.bool.isRequired,\n\tsetIsOpen: PropTypes.func.isRequired,\n};\n\nexport default EditUser;\n","import React, { FC, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useField, useFormik } from \"formik\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport Modal, {\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalTitle,\n} from \"../../../components/bootstrap/Modal\";\nimport data from \"../../../common/data/dummyCustomerData\";\nimport showNotification from \"../../../components/extras/showNotification\";\nimport Icon from \"../../../components/icon/Icon\";\nimport FormGroup from \"../../../components/bootstrap/forms/FormGroup\";\nimport Input from \"../../../components/bootstrap/forms/Input\";\nimport img from \"../../../assets/img/user6.png\";\nimport Card, {\n  CardBody,\n  CardHeader,\n  CardLabel,\n  CardTitle,\n} from \"../../../components/bootstrap/Card\";\nimport Button from \"../../../components/bootstrap/Button\";\nimport Label from \"../../../components/bootstrap/forms/Label\";\nimport Checks, {\n  ChecksGroup,\n} from \"../../../components/bootstrap/forms/Checks\";\nimport PAYMENTS from \"../../../common/data/enumPaymentMethod\";\nimport {\n  createUser,\n  fetchUser,\n} from \"../../../redux/Slice/UserManagement_slice\";\nimport Avatar from \"../../../components/Avatar\";\nimport Select from \"../../../components/bootstrap/forms/Select\";\nimport Wizard, { WizardItem } from \"../../../components/Wizard\";\nimport { getAllInterest } from \"../../../redux/Slice/IntersetSlice\";\nimport { fetchRoles } from \"../../../redux/Slice/role_Slice\";\nimport getAllroles from \"../../../redux/Api/role\";\nimport { create_Service, getAll_Service } from \"../../../redux/Slice/Services_Slice\";\nimport { fetchModes } from \"../../../redux/Slice/Modes_Slice\";\n\ninterface IPreviewItemProps {\n  title: string;\n  value: any | any[];\n}\nconst PreviewItem: FC<IPreviewItemProps> = ({ title, value }) => {\n  return (\n    <>\n      <div className=\"col-3 text-end\">{title}</div>\n      <div className=\"col-9 fw-bold\">{value || \"-\"}</div>\n    </>\n  );\n};\ninterface ICustomerEditModalProps {\n  id: string;\n  isOpen: boolean;\n  setIsOpen(...args: unknown[]): unknown;\n}\n\nconst AddServices: FC<ICustomerEditModalProps> = ({ id, isOpen, setIsOpen }) => {\n  const store = useSelector((state: any) => state);\n  const role = store.role.roles.data ? store.role.roles.data : []\n  const itemData = id\n    ? data.filter((item) => item.id.toString() === id.toString())\n    : {};\n  const item = id && Array.isArray(itemData) ? itemData[0] : {};\n  const modeid = localStorage.getItem(\"modeid\");\n  const [avatarFil, setAvatarFile] = useState<any>();\n  const [isProfileUploaded, setisProfileUploaded] = useState<boolean>(false);\n  const [intersetArray, setIntersetArray] = useState<any>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n  const [errorHandling, setErrorHandling] = useState(false);\n  const heightArray = [];\n  for (let i = 3; i <= 6.6; i += 0.1) {\n    heightArray.push(parseFloat(i.toFixed(1)));\n  }\n\n  const WeightArray = [];\n  const Data = store?.mode?.modes?.data?.data\n  const mode_data = Data\n  useEffect(() => {\n    dispatch(fetchModes({}) as any);\n\n    dispatch(fetchRoles(modeid) as any);\n  }, [dispatch, modeid]);\n\n\n  for (let i = 20; i < 120; i += 1) {\n    WeightArray.push(i);\n  }\n\n\n  const userValidation = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    description: Yup.string().required(\"Email is required\"),\n    // Category: Yup.string().required(\"Category is required\"),\n    // mode: Yup.string().required(\"mode is required\"),\n    note: Yup.string().required(\"note is required\"),\n    mode: Yup.string().required(\"mode is required\"),\n\n  });\n\n  // -------------------------------\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      display_name: \"\",\n      description: \"\",\n      note: \"\",\n      admin_note: \"\",\n      mode: '',\n\n      // service: '',\n      is_activated: true, // Assuming this is a boolean indicating activation status\n    },\n\n    validationSchema: userValidation,\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSubmit: (values) => {\n      console.log(\"Form values:\", values); // Log form values to ensure they are captured correctly\n      setIsLoading(true)\n      try {\n        setErrorHandling(true);\n        dispatch(create_Service({ values }) as any)\n          .then(() => {\n            console.log(\"Service created successfully.\"); // Log success message\n          })\n          .catch((error: any) => {\n            console.error(\"Error creating service:\", error); // Log error if createUser action fails\n          });\n      } catch (error) {\n        console.error(\"Error submitting form:\", error); // Log error if any other error occurs\n      }\n      setIsOpen(false);\n\n    },\n  });\n  const [ApiTrue, setApiTrue] = useState(false);\n  const handleAvatarChang = (e: any) => {\n    setApiTrue(true);\n\n    console.log(e.target.files[0]);\n    setAvatarFile(e.target.files[0]);\n    if (e.target.files && e.target.files.length > 0) {\n      setisProfileUploaded(true);\n      setAvatarFile(e.target.files[0]);\n    }\n  };\n  const handleActiveInteset = (idd: any) => {\n    const data2 = intersetArray.includes(idd);\n    if (data2) {\n      const updatedArray = intersetArray.filter((item2: any) => item2 !== idd);\n      setIntersetArray(updatedArray);\n    } else {\n      setIntersetArray([...intersetArray, idd]);\n      formik.setFieldValue(\"interest\", intersetArray);\n    }\n  };\n\n  if (id || id === \"0\") {\n    return (\n      <Modal\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        size=\"lg\"\n        titleId={id.toString()}\n      >\n        <ModalHeader setIsOpen={setIsOpen} className=\"p-4\">\n          <ModalTitle id={id}>{item?.name || \"New User\"}</ModalTitle>\n        </ModalHeader>\n        <ModalBody className=\"px-4 user-modal-body\">\n          <form onSubmit={formik.handleSubmit} >\n            <div className=\"row g-4 align-items-center\" style={{}}>\n              <FormGroup id=\"name\" label=\"Name\" className=\"col-md-6\">\n                <Input\n                  name=\"name\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                />\n                {errorHandling && formik.errors.name ? (\n                  <div className=\"errorMassage\">{formik.errors.name}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n              <FormGroup id=\"display_name\" label=\"Display Name\" className=\"col-md-6\">\n                <Input\n                  name=\"display_name\"\n                  onChange={formik.handleChange}\n                  value={formik.values.display_name}\n                />\n                {errorHandling && formik.errors.display_name ? (\n                  <div className=\"errorMassage\">{formik.errors.display_name}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n              <FormGroup id=\"description\" label=\"Description\" className=\"col-md-12\">\n                <Input\n                  name=\"description\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.description}\n                />\n\n                {errorHandling && formik.errors.description ? (\n                  <div className=\"errorMassage\">{formik.errors.description}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n              <FormGroup id=\"note\" label=\"Note\" className=\"col-md-12\">\n                <Input\n                  name=\"note\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.note}\n                />\n                {errorHandling && formik.errors.note ? (\n                  <div className=\"errorMassage\">{formik.errors.note}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n              <FormGroup id=\"admin_note\" label=\"Admin_note\" className=\"col-md-12\">\n                <Input\n                  name=\"admin_note\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.admin_note}\n                />\n                {errorHandling && formik.errors.admin_note ? (\n                  <div className=\"errorMassage\">{formik.errors.admin_note}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n\n\n              <FormGroup id=\"mode\" label=\"Mode\" className=\"col-md-6\">\n                <select\n                  id=\"mode\"\n                  className=\"form-select\"\n                  name=\"mode\"\n                  value={formik.values.mode} \n                  onChange={formik.handleChange}\n                >\n                  <option value=\"\" disabled>\n                    ...Select...\n                  </option>\n                  {Array.isArray(mode_data) ? (\n                    mode_data.map((items: any, index: number) => (\n                      <option key={index} value={items._id}>\n                        {items.name}\n                      </option>\n                    ))\n                  ) : (\n                    <option disabled>Loading...</option>\n                  )}\n\n                </select>\n                {errorHandling && formik.errors.mode ? (\n                  <div className=\"errorMassage\">{formik.errors.mode}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup>\n              {/* <FormGroup id=\"banner\" label=\"banner\" className=\"col-md-6\">\n                <select\n                  id=\"banner\"\n                  className=\"form-select\"\n                  name=\"banner\"\n                  value={formik.values.banner}\n                  onChange={formik.handleChange}\n                >\n                  <option value=\"\" disabled>\n                    ...Select...\n                  </option>\n                  <option value=\"male\">Male</option>\n\n                </select>\n                {errorHandling && formik.errors.banner ? (\n                  <div className=\"errorMassage\">{formik.errors.banner}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup> */}\n\n              {/* <FormGroup\n                id=\"is_activated\"\n                label=\"Is Activated\"\n                className=\"col-md-12\"\n              >\n                <select\n                  id=\"is_activated\"\n                  className=\"form-select\"\n                  name=\"is_activated\"\n                  value={formik.values.is_activated as any}\n                  onChange={formik.handleChange}\n                >\n                  <option value=\"true\">True</option>\n                  <option value=\"false\">False</option>\n                </select>\n                {errorHandling && formik.errors.is_activated ? (\n                  <div className=\"errorMassage\">{formik.errors.is_activated}</div>\n                ) : (\n                  <div />\n                )}\n              </FormGroup> */}\n\n\n              <div className=\"col-md-12 text-center \">\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  className=\"col-6  \"\n                  onClick={() => {\n                    formik.handleSubmit() as any;\n                    setErrorHandling(true);\n                  }}\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n  return null;\n};\nAddServices.propTypes = {\n  id: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  setIsOpen: PropTypes.func.isRequired,\n};\n\nexport default AddServices;\n","import React, { FC, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport Modal, {\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tModalTitle,\n} from '../../../components/bootstrap/Modal';\nimport data from '../../../common/data/dummyCustomerData';\nimport showNotification from '../../../components/extras/showNotification';\nimport Icon from '../../../components/icon/Icon';\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../components/bootstrap/forms/Input';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport Button from '../../../components/bootstrap/Button';\nimport Label from '../../../components/bootstrap/forms/Label';\nimport Checks, { ChecksGroup } from '../../../components/bootstrap/forms/Checks';\nimport { fetchUser, fetchdeleteUser } from '../../../redux/Slice/UserManagement_slice';\nimport { delete_Service, getAll_Service } from '../../../redux/Slice/Services_Slice';\n// import PAYMENTS from '../../../common/data/enumPaymentMethod';\ninterface ICustomerEditModalProps {\n\tid: string;\n\tisOpen: boolean;\n\tsetIsOpen(...args: unknown[]): unknown;\n\tdeleteId:any;\n\n\t\n}\n  \nconst  OrderDeleteModal: FC<ICustomerEditModalProps> = ({ id, isOpen,deleteId, setIsOpen }) => {\n\tconst itemData = id ? data.filter((item) => item.id.toString() === id.toString()) : {};\n\tconst item = id && Array.isArray(itemData) ? itemData[0] : {};\n   const dispatch =useDispatch()\n   const modeid=localStorage.getItem('modeid')\n//    console.log(modeid)\n \n   const handleDeleteClick =async () => {\n    setIsOpen(false);\n\ttry {\n\t\tawait dispatch(delete_Service(deleteId) as any);\n\n\t\t\t\n\t\t} catch (error) {\n\t\t\t\n\t\t}finally{\n\t\tdispatch(getAll_Service({})as any) \n\n\t\t}\n};\n\tif (id || id === '0') {\n\t\treturn (\n\t\t\t<Modal isOpen={isOpen} setIsOpen={setIsOpen}  isCentered\n            titleId={id.toString()}>\n\t\t\t\t<ModalHeader setIsOpen={setIsOpen} className='p-4'>\n\t\t\t\t\t<ModalTitle id={id}>{item?.name || 'Remove Customer'}</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody className='px-4'>\n                <p>Are you sure you want to Remove this User?</p>\n\t\t\t\t</ModalBody>\n\t          <ModalFooter className='bg-transparent '>\n\t\t\t\t\t\t\t\t<div className='d-flex  justify-content-between w-100'>\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\t\tclassName='w-50 m-2 '\n\t\t\t\t\t\t\t\t\tonClick={()=>setIsOpen(false)} \n\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button \n                                \tclassName='w-50 m-2 btn btn-danger'\n\t\t\t\t\t\t\t\t\tonClick={() => handleDeleteClick()}\n\n\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</Modal>\n\t\t);\n\t}\n\treturn null;\n};\nOrderDeleteModal.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tisOpen: PropTypes.bool.isRequired,\n\tsetIsOpen: PropTypes.func.isRequired,\n};\n\nexport default  OrderDeleteModal;\n","\n \n\nimport COLORS from \"../../../common/data/enumColors\";\nimport { TColor } from \"../../../type/color-type\";\n\n \n\nexport interface IEventStatus {\n\t[key: string]: { name: string; value:any,color: TColor };\n}\nconst ActiveService: IEventStatus = {\n\tActive: { name: 'Active', value:true,color: COLORS.SUCCESS.name },\n\tInactive: { name: 'Inactive',value: false, color: COLORS.WARNING.name },\n};\nexport default ActiveService;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport PageWrapper from \"../../../layout/PageWrapper/PageWrapper\";\nimport SubHeader, {\n  SubHeaderLeft,\n  SubHeaderRight,\n  SubheaderSeparator,\n} from \"../../../layout/SubHeader/SubHeader\";\nimport Page from \"../../../layout/Page/Page\";\nimport { demoPagesMenu } from \"../../../menu\";\nimport Card, { CardBody } from \"../../../components/bootstrap/Card\";\nimport { getFirstLetter, priceFormat } from \"../../../helpers/helpers\";\nimport data from \"../../../common/data/dummyCustomerData\";\nimport PaginationButtons, {\n  dataPagination,\n  PER_COUNT,\n} from \"../../../components/PaginationButtons\";\nimport Button from \"../../../components/bootstrap/Button\";\nimport Icon from \"../../../components/icon/Icon\";\nimport Input from \"../../../components/bootstrap/forms/Input\";\nimport Dropdown, {\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n} from \"../../../components/bootstrap/Dropdown\";\nimport FormGroup from \"../../../components/bootstrap/forms/FormGroup\";\nimport Checks, {\n  ChecksGroup,\n} from \"../../../components/bootstrap/forms/Checks\";\nimport PAYMENTS from \"../../../common/data/enumPaymentMethod\";\nimport useSortableData from \"../../../hooks/useSortableData\";\nimport InputGroup, {\n  InputGroupText,\n} from \"../../../components/bootstrap/forms/InputGroup\";\nimport Popovers from \"../../../components/bootstrap/Popovers\";\n// import CustomerEditModal from './CustomerEditModal';\nimport { getColorNameWithIndex } from \"../../../common/data/enumColors\";\nimport useDarkMode from \"../../../hooks/useDarkMode\";\n// import add_user_management from './ADD'\nimport Add from \"./Add_Service\";\n\nimport Edit_User from \"./Edit_Service\";\nimport OrderDeleteModal from \"./Delete_Service\";\nimport * as Yup from \"yup\";\nimport {\n  fetchUser,\n  fetchsearchUser,\n  fetchsortUser,\n  fetchupdateUser,\n  searchUserbyAges,\n  setPage,\n} from \"../../../redux/Slice/UserManagement_slice\";\n\nimport ActiveUser from \"./ActiveService\";\nimport fetchModes, { fetchRoles } from \"../../../redux/Slice/role_Slice\";\nimport { getAllroles } from \"../../../redux/Api/role\";\nimport { updatestatus } from \"../../../redux/Api/UserManagement\";\nimport Label from \"../../../components/bootstrap/forms/Label\";\nimport Select from \"../../../components/bootstrap/forms/Select\";\nimport imgback from \"../../../assets/back (3).png\";\nimport { Service } from \"../../../InterFace/InterFace\";\nimport { getAll_Service, upload_Services_Images } from \"../../../redux/Slice/Services_Slice\";\n\nconst Services = () => {\n  const { darkModeStatus } = useDarkMode();\n  const [searchUser, setSearcUser] = useState<any>(\"\");\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  // const [perPage, setPerPage] = useState<number>(PER_COUNT[\"10\"]);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [editModalStatus, setEditModalStatus] = useState<boolean>(false);\n  const [editModal, setEditModal] = useState<boolean>(false);\n  const [editData, setEditData] = useState<any>(\"\");\n  const [deleteModal, setDeleteModal] = useState<boolean>(false);\n  const [deleteId, setDeleteid] = useState<any>(\"\");\n  const [editId, setEditId] = useState<any>(\"\");\n  const [previewImage, setPreviewImage] = useState<any>('');\n  const [isUploading, setIsUploading] = useState<boolean>(false);\n  const [currentUploadId, setCurrentUploadId] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n  const Store: any = useSelector((state: any) => state.Service);\n\n  const ServiceData = Store?.services?.data;\n\n\n  const [SelectedService, setSelectService] = useState(localStorage.getItem(\"serviceid\") || \"\")\n  const modeid = localStorage.getItem(\"modeid\");\n  const [viewUser, setViewUser] = useState<any>(false);\n  const [viewData, setViewdata] = useState<any>(\"\");\n  const [filterData, setFilterData] = useState<any>({\n    gender: \"\",\n    minAge: \"\",\n    maxAge: \"\",\n  });\n\n  const handleFilterData = (e: any) => {\n    setFilterData({ ...filterData, [e.target.name]: e.target.value });\n  };\n\n  const [filterMenu, setFilterMenu] = useState<boolean>(false);\n  const handleStatus = async (idedi: any, status: any) => {\n    await updatestatus({ editId: idedi, status });\n    await dispatch(getAll_Service({}) as any);\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPage(currentPage) as any);\n    // dispatch(fetchRoles({ modeid: modeid }) as any);\n\n    dispatch(getAll_Service({}) as any);\n\n  }, [dispatch, modeid, currentPage, SelectedService]);\n\n  const stateUser: any = useSelector((state: any) => state.Service);\n\n\n  // Create a shallow copy using slice and then reverse the copy\n  const reversedData = stateUser?.services?.data?.data ?? [];\n  // const reversedData =  stateUser?.services?.totalCount \n\n  // Ensure pagination only runs when data is available\n  const currentItems = reversedData.length > 0 \n    ? reversedData.slice((currentPage - 1) * perPage, currentPage * perPage)\n    : [];\n  \n  console.log(\"Showing data from index\", (currentPage - 1) * perPage, \"to\", currentPage * perPage, currentItems);\n  \n\n\n  const indexOfLastItem = currentPage * perPage;\nconst indexOfFirstItem = indexOfLastItem - perPage;\n\n// Slice the data for current page\n// const currentItems = reversedData.slice(indexOfFirstItem, indexOfLastItem);\n\n// console.log(\"Showing data from index\", indexOfFirstItem, \"to\", indexOfLastItem, currentItems);\n\n// Function to handle page change\nconst totalPages = Math.ceil(reversedData.length / perPage);\n\nconst handlePageChange = (newPage: number) => {\n  if (newPage >= 1 && newPage <= totalPages) {\n    setCurrentPage(newPage);\n  }\n};\n\nconst paginateData = (dataList: any[], page: number, limit: number) => {\n  const startIndex = (page - 1) * limit;\n  return dataList.slice(startIndex, startIndex + limit);\n};\n\n\n\n\n  const handleImageUpload = async (item: any, file: File) => {\n    if (!file) return;\n\n    const id = item._id;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"tagId\", id);\n\n    setIsUploading(true); // Start loading\n\n    try {\n      const res = await dispatch(upload_Services_Images({ id, formData }) as any);\n    dispatch(getAll_Service({}) as any);\n\n      if (res.payload.isSuccess) {\n        setPreviewImage(res.payload.imageUrl); // Update the preview image\n        localStorage.setItem(\"uploadedImage\", res.payload.imageUrl); // Persist the image\n      }\n    } catch (error) {\n      console.error(\"Failed to upload image:\", error);\n    } finally {\n      setIsUploading(false); // Stop loading\n    }\n  };\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && currentUploadId) {\n      handleImageUpload(currentUploadId, file);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      searchInput: \"\",\n      discription: \"\",\n      name: \"\",\n      ctegory: \"\",\n      mode: \"\",\n    },\n    validationSchema: Yup.object().shape({\n      gender: Yup.string()\n        .required(\"Gender is required\")\n        .oneOf([\"male\", \"female\", \"other\"], \"Invalid gender\"),\n\n    }),\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSubmit: (values) => {\n      // alert(JSON.stringify(values, null, 2));\n      console.log(\"Form submitted with values:\", values);\n    },\n  });\n\n  const filteredData = Array.isArray(reversedData) \n  ? reversedData.filter(\n      (f: any) =>\n        f.name?.toLowerCase().includes(formik.values.searchInput.toLowerCase())\n    )\n  : [];\n\n  const { items, requestSort, getClassNamesFor } = useSortableData(\n    filteredData.reverse()\n  );\n\n  const handleSearch = (e: any) => {\n    const inputValue = e.target.value;\n    setSearcUser(inputValue);\n    if (inputValue.trim() === \"\") {\n      dispatch(getAll_Service({}) as any);\n    } else {\n      dispatch(fetchsearchUser(inputValue) as any);\n    }\n  };\n\n  const handleFilter = () => {\n    dispatch(searchUserbyAges(filterData) as any);\n  };\n\n  const calculateAge = (dobString: any) => {\n    const today = new Date();\n    const birthDate = new Date(dobString);\n\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n\n    if (\n      monthDiff < 0 ||\n      (monthDiff === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age -= 1; // Alternative to age--\n    }\n    ;\n    return age;\n  };\n\n\n  // const ServiceOptions = ServiceData && ServiceData?.map((item: Service) => ({\n  //   value: item?._id,\n  //   text: item?.name\n  // }));\n\n  // const ServiceOptions = Array.isArray(ServiceData)\n  // ? ServiceData.map((item: Service) => ({\n  //     value: item?._id,\n  //     text: item?.name,\n  //   }))\n  // : [];\n\n\n\n  const ChangeService = async (e: any) => {\n    setSelectService(e.target.value)\n    localStorage.setItem('roleid', e.target.value)\n\n\n\n\n  }\n  return (\n    <PageWrapper title={demoPagesMenu.crm.subMenu.customersList.text}>\n      <div className=\"row  justify-content-around\">\n        <div className=\"display-5 col-md-7 fw-bold my-3 \">Services</div>\n        <div className=\"col-md-4\">\n          <FormGroup>\n            <Label htmlFor=\"role\">Change Service</Label>\n            <Select\n              id=\"service\"\n              name=\"service\"\n              ariaLabel=\"Service\"\n              placeholder=\"Service\"\n              // list={ServiceOptions}\n              onChange={ChangeService}\n              value={SelectedService}\n            />\n          </FormGroup>\n        </div>\n      </div>\n\n      <SubHeader>\n        <SubHeaderLeft>\n          <label\n            className=\"border-0 bg-transparent cursor-pointer me-0\"\n            htmlFor=\"searchInput\"\n          >\n            <Icon icon=\"Search\" size=\"2x\" color=\"primary\" />\n          </label>\n          <Input\n            id=\"searchInput\"\n            type=\"search\"\n            className=\"border-0 shadow-none bg-transparent\"\n            placeholder=\"Search customer...\"\n            onChange={(e) => handleSearch(e)}\n            value={searchUser}\n          />\n        </SubHeaderLeft>\n        <SubHeaderRight>\n          {/* <Dropdown isOpen={filterMenu} setIsOpen={setFilterMenu}>\n            <DropdownToggle hasIcon={false}>\n              <Button icon=\"FilterAlt\" color=\"primary\" isLight>\n                Filter\n              </Button>\n            </DropdownToggle>\n            <DropdownMenu isAlignmentEnd size=\"lg\" isCloseAfterLeave={false}>\n              <div className=\"container py-2\">\n                <form className=\"row g-3\" onSubmit={formik.handleSubmit}>\n                  <div className=\"col-12\">\n                    <FormGroup>\n                      <Label htmlFor=\"minAge\">Age</Label>\n                      <InputGroup>\n                        <Input\n                          id=\"minAge\"\n                          name=\"minAge\"\n                          ariaLabel=\"Minimum age\"\n                          placeholder=\"Min.\"\n                          onChange={handleFilterData}\n                          value={filterData.minAge}\n                        />\n                        <InputGroupText>to</InputGroupText>\n                        <Input\n                          id=\"maxAge\"\n                          name=\"maxAge\"\n                          ariaLabel=\"Maximum age\"\n                          placeholder=\"Max.\"\n                          onChange={handleFilterData}\n                          value={filterData.maxAge}\n                        />\n                      </InputGroup>\n                    </FormGroup>\n                  </div>\n                  <div className=\"col-12\">\n                    <FormGroup>\n                      <Label htmlFor=\"gender\">Gender</Label>\n                      <Select\n                        id=\"gender\"\n                        name=\"gender\"\n                        ariaLabel=\"Gender\"\n                        placeholder=\"Gender Name\"\n                        list={[\n                          { value: \"male\", text: \"Male\" },\n                          { value: \"female\", text: \"Female\" },\n                          { value: \"other\", text: \"Other\" },\n                        ]}\n                        onChange={handleFilterData}\n                        value={filterData.gender}\n                      />\n                    </FormGroup>\n                  </div>\n\t \n                  <div className=\"col-6\">\n                    <Button\n                      color=\"primary\"\n                      isOutline\n                      className=\"w-100\"\n                      onClick={formik.resetForm}\n                    >\n                      Reset\n                    </Button>\n                  </div>\n                  <div className=\"col-6\">\n                    <Button\n                      color=\"primary\"\n                      onClick={handleFilter}\n                      className=\"w-100\"\n                      type=\"submit\"\n                    >\n                      Filter\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </DropdownMenu>\n          </Dropdown> */}\n\n          {/* <SubheaderSeparator /> */}\n          <Button\n            icon=\"PersonAdd\"\n            color=\"primary\"\n            isLight\n            onClick={() => setEditModalStatus(true)}\n          >\n            New Service\n          </Button>\n        </SubHeaderRight>\n      </SubHeader>\n      <Page>\n        <div className=\"row h-100\">\n          <div className=\"col-12\">\n            <Card stretch>\n              <CardBody isScrollable className=\"table-responsive\">\n                <table className=\"table table-modern table-hover\">\n                  <thead>\n                    <tr>\n                      <th\n                        onClick={() => requestSort(\"name\")}\n                        // onClick={()=> {aaa(data, 'name', 'ascending')}}\n\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        Service Name\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"name\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th\n                        onClick={() => requestSort(\"description\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        Description\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"description\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      {/* <th\n                        onClick={() => requestSort(\"note\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        Note\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"note\")}\n                          icon=\"FilterList\"\n                        />\n                      </th> */}\n                      <th\n                        onClick={() => requestSort(\"mode\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        Mode\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"mode\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th\n                        onClick={() => requestSort(\"category\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        {\" \"}\n                        Category\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"category\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n\n                      <th\n                        onClick={() => requestSort(\"status\")}\n                        className=\"cursor-pointer text-decoration-underline\"\n                      >\n                        {\" \"}\n                        Status\n                        <Icon\n                          size=\"lg\"\n                          className={getClassNamesFor(\"status\")}\n                          icon=\"FilterList\"\n                        />\n                      </th>\n                      <th> Action</th>\n                      <td />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {reversedData &&\n                      dataPagination(items, currentPage, perPage).map(\n                        (item: any, index: any) => {\n                          return (\n                            <tr key={item?._id}>\n                              <td>\n                                <div className=\"d-flex align-items-center\">\n                                  <div className=\"flex-shrink-0\">\n                                    <div\n                                      className=\"ratio ratio-1x1 me-3\"\n                                      style={{ width: 48 }}\n                                    >\n\n                                      <div\n                                        className={`bg-l${darkModeStatus ? \"o25\" : \"25\"\n                                          }-${getColorNameWithIndex(\n                                            index\n                                          )} text-${getColorNameWithIndex(\n                                            index\n                                          )} rounded-2 d-flex align-items-center justify-content-center`}\n                                      >\n                                        {/* <span className=\"fw-bold\">\n                                            {getFirstLetter(item?.name)}\n                                          </span> */}\n                                        <span\n                                          className=\"fw-bold\"\n                                          onClick={() => {\n                                            if (fileInputRef.current) {\n                                              setCurrentUploadId(item);\n                                              fileInputRef.current.click();\n                                            }\n                                          }}\n                                        >\n                                          {item.avatar ? (\n                                            <img src={`https://servicesapi.meander.software/${item.avatar}`} style={{ width: \"50px\", borderRadius: \"15px\" }} />\n                                          ) : (\n                                            getFirstLetter(item?.name)\n                                          )}\n                                        </span>\n                                        <input\n                                          type=\"file\"\n                                          ref={fileInputRef}\n                                          style={{ display: \"none\" }}\n                                          onChange={handleFileChange}\n                                        />\n                                      </div>\n\n                                    </div>\n                                  </div>\n                                  <div className=\"flex-grow-1\">\n                                    <div className=\"fs-6 fw-bold\">\n                                      {item?.name}\n                                    </div>\n                                    <div className=\"text-muted\">\n                                      {/* <Icon icon=\"MyLocation\" />{\" \"} */}\n                                      {/* <small>{item?.description}</small> */}\n                                    </div>\n                                  </div>\n                                </div>\n                              </td>\n                              {/* <td>\n                                <Button\n                                  isLink\n                                  color=\"light\"\n                                  icon=\"Email\"\n                                  className=\"text-lowercase\"\n                                  tag=\"a\"\n                                  // href={`mailto:${items?.note}`}\n                                >\n                                  {item?.note}\n                                </Button>\n                              </td> */}\n                              {/* <td>\n                                <p>{itemss?.age}</p>\n \n                                <p>{calculateAge(itemss?.mode) || \"00\"}</p>\n                               \n                              </td> */}\n                              <td>{item?.description}</td>\n                              <td>{item?.mode?.name}</td>\n                              <td>{item?.category}</td>\n\n                              {/* <td>{itemss?.marital}</td> */}\n                              <td>\n                                <Dropdown>\n                                  <DropdownToggle hasIcon={false}>\n                                    <Button\n                                      isLink\n                                    // color={item.status.color}\n                                    // icon='Circle'\n                                    // className=\"bn6\"\n                                    >\n                                      {item?.is_activated === true ? (\n                                        <span className=\"badge bg-success\">\n                                          Active\n                                        </span>\n                                      ) : (\n                                        <span className=\"badge bg-secondary\">\n                                          Inactive\n                                        </span>\n                                      )}\n                                    </Button>\n                                  </DropdownToggle>\n                                  <DropdownMenu>\n                                    {Object.keys(ActiveUser).map((key) => (\n                                      <DropdownItem key={key}>\n                                        <div\n                                          onClick={() =>\n                                            handleStatus(\n                                              item._id,\n                                              ActiveUser[key].value\n                                            )\n                                          }\n                                          onKeyDown={(e) => {\n                                            if (\n                                              e.key === \"Enter\" ||\n                                              e.key === \"Space\"\n                                            ) {\n                                              handleStatus(\n                                                item._id,\n                                                ActiveUser[key].value\n                                              );\n                                            }\n                                          }}\n                                          role=\"button\"\n                                          tabIndex={0}\n                                        >\n                                          {ActiveUser[key].name}\n                                        </div>\n                                      </DropdownItem>\n                                    ))}\n                                  </DropdownMenu>\n                                </Dropdown>\n                              </td>\n                              {/* <td>\n\t\t\t\t\t\t\t\t<select name=\"cars\" id=\"cars\" \n\t\t\t\t\t\t\t\t         style={{\n\t\t\t\t\t\t\t\t\t            outline:'none',\n\t\t\t\t\t\t\t\t\t\t\t\tborder:'none',\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\tpadding:'5px',\n\t\t\t\t\t\t\t\t\t\t\t\tappearance: 'none', \n\t\t\t\t\t\t\t\t\t\t\t\tcolor:`${itemss?.status === 'active'? 'green':'red'}`,\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize:'18px'\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t// value={itemss?.status}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e:any)=>handleStatus(e,itemss?._id)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\n                                                     {itemss?.status === 'active' ? (\n            <>\n                <option value=\"active\" style={{ color: 'green' }}>\n                    Active\n                </option>\n                <option value=\"inactive\" style={{ color: 'red' }}>\n                    Inactive\n                </option>\n            </>\n        ) : (\n            <>\n                <option value=\"inactive\" style={{ color: 'red' }}>\n                    Inactive\n                </option>\n                <option value=\"active\" style={{ color: 'green' }}>\n                    Active\n                </option>\n            </>\n        )}\n                                   \n    \n                                     \n\n                               </select>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td> */}\n                              {/* <td>\n\t\t\t\t\t\t\t\t <Icon\n\t\t\t\t\t\t\t\t\t size='lg'\n\t\t\t\t\t\t\t\t\t icon={`custom ${i.payout.toLowerCase()}`}\n\t\t\t\t\t\t\t\t />{' '}\n\t\t\t\t\t\t\t\t {i.payout}\n\t\t\t\t\t\t\t </td> */}\n                              <td>\n                                <Dropdown>\n                                  <DropdownToggle hasIcon={false}>\n                                    <Button\n                                      icon=\"MoreHoriz\"\n                                      color=\"dark\"\n                                      isLight\n                                      shadow=\"sm\"\n                                      aria-label=\"More actions\"\n                                    />\n                                  </DropdownToggle>\n                                  <DropdownMenu isAlignmentEnd>\n                                    {/* <DropdownItem>\n                                      <Button\n                                        icon=\"Visibility\"\n                                        // isDisable\n                                        tag=\"a\"\n                                        to={`/profile_management/view/${item._id}`}\n                                        onClick={() => {\n                                          const serializedData = JSON.stringify(\n                                            items\n                                          );\n\n                                          // Save the serialized data to session storage\n                                          sessionStorage.setItem(\n                                            \"Viewed_User_Data\",\n                                            serializedData\n                                          );\n\n                                          // setViewUser(true)\n                                          setViewdata(items);\n                                        }}\n                                      >\n                                        View\n                                      </Button>\n                                    </DropdownItem> */}\n                                    <DropdownItem>\n                                      <Button\n                                        icon=\"Edit\"\n                                        tag=\"a\"\n                                        // to={`../${demoPagesMenu.crm.subMenu.customerID.path}/${i.id}`}\n                                        onClick={() => {\n                                          setEditData(item);\n                                          setEditModal(true);\n                                          setEditId(item?._id);\n                                        }}\n                                      >\n                                        Edit\n                                      </Button>\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                      <Button\n                                        icon=\"Delete\"\n                                        tag=\"a\"\n                                        // to={`../${demoPagesMenu.crm.subMenu.customerID.path}/${i.id}`}\n                                        onClick={() => {\n                                          setDeleteModal(true);\n                                          setDeleteid(item?._id);\n                                        }}\n                                      >\n                                        Delete\n                                      </Button>\n                                    </DropdownItem>\n                                  </DropdownMenu>\n                                </Dropdown>\n                              </td>\n                            </tr>\n                          );\n                        }\n                      )}\n                  </tbody>\n                </table>\n              </CardBody>\n              {reversedData && (\n                <PaginationButtons\n                  data={items}\n                  label=\"customers\"\n                  setCurrentPage={setCurrentPage}\n                  currentPage={currentPage}\n                  perPage={perPage}\n                  setPerPage={setPerPage}\n                />\n              )}\n            </Card>\n          </div>\n        </div>\n      </Page>\n\n\n      <Add setIsOpen={setEditModalStatus} isOpen={editModalStatus} id=\"0\" />\n\n      {editId && (\n        <Edit_User\n          setIsOpen={setEditModal}\n          isOpen={editModal}\n          editData={editData}\n          editId={editId}\n          id=\"0\"\n        />\n      )}\n      {deleteId && (\n        <OrderDeleteModal\n          setIsOpen={setDeleteModal}\n          isOpen={deleteModal}\n          deleteId={deleteId}\n          id=\"0\"\n        />\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default Services;\n"],"names":["id","name","email","type","membershipDate","dayjs","add","balance","payout","PAYMENTS","src","UserImage3","srcSet","UserImage3Webp","streetAddress","streetAddress2","city","state","stateFull","zip","streetAddressDelivery","streetAddress2Delivery","cityDelivery","stateDelivery","stateFullDelivery","zipDelivery","phone","latitude","longitude","UserImage5","UserImage5Webp","UserImage6","UserImage6Webp","UserImage4","UserImage4Webp","isOnline","UserImage7","UserImage7Webp","UserImage","UserImageWebp","UserImage2","UserImage2Webp","PAYPAL","PAYONEER","SWIFT","PER_COUNT","dataPagination","data","currentPage","perPage","totalItems","length","startIndex","endIndex","slice","Math","max","min","reverse","PaginationButtons","_ref","setCurrentPage","setPerPage","label","totalPage","ceil","_jsxs","CardFooter","children","_jsx","CardFooterLeft","className","getInfo","start","end","CardFooterRight","Pagination","ariaLabel","PaginationItem","isFirst","isDisabled","onClick","isPrev","pagination","items","i","push","isActive","isNext","isLast","Select","size","onChange","e","parseInt","target","value","toString","Object","keys","map","Option","defaultProps","disabled","ariaLabelledby","props","undefined","Options","_ref2","list","item","text","forwardRef","ref","classNames","active","role","onKeyDown","tabIndex","Icon","icon","displayName","required","placeholder","ariaDescribedby","multiple","title","defaultValue","isValid","isTouched","invalidFeedback","validFeedback","isValidMessage","isTooltipFeedback","onBlur","onFocus","onInput","onInvalid","onSelect","_Fragment","hidden","Validation","isTooltip","config","arguments","sortConfig","setSortConfig","useState","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","_store$mode$modes$dat","_editData$banner3","_editData$banner4","_editData$banner5","isOpen","editId","editData","setIsOpen","darkModeStatus","useDarkMode","itemData","dispatch","Array","isArray","useDispatch","intersetArray","setIntersetArray","localStorage","getItem","interest","errorHandling","setErrorHandling","avatarFil","setAvatarFile","store","useSelector","statee","mode_data","roles","interset","mode","modes","file","setFile","preview","setPreview","previewUrl","setPreviewUrl","handleFileChange","event","_event$currentTarget$","currentTarget","files","formik","setFieldValue","objectUrl","URL","createObjectURL","useEffect","revokeObjectURL","fetchModes","userValidation","Yup","shape","display_name","description","banner","bannerImage","note","admin_note","is_activated","useFormik","initialValues","Category","enableReinitialize","validationSchema","onSubmit","async","values","setSubmitting","_values$banner","_values$banner2","console","log","uploadedBannerUrl","File","_editData$banner","_editData$banner2","BannerData","FormData","append","forEach","uploadResponse","upload_Banner","success","error","Error","UploadBanner","updatedValues","update_Service","showNotification","getAll_Service","objectURL","ApiTrue","setApiTrue","_formik$touched$banne","_formik$errors$banner","_formik$touched$banne2","_formik$errors$banner2","_formik$touched$banne3","_formik$errors$banner3","Modal","titleId","ModalHeader","ModalTitle","ModalBody","FormGroup","Input","handleChange","errors","index","_id","handleBlur","touched","accept","alt","style","width","height","marginTop","borderRadius","ModalFooter","Button","color","handleSubmit","_store$mode","_store$mode$modes","modeid","isProfileUploaded","setisProfileUploaded","isLoading","setIsLoading","heightArray","parseFloat","toFixed","WeightArray","fetchRoles","create_Service","then","catch","deleteId","isCentered","delete_Service","handleDeleteClick","Active","COLORS","Inactive","Services","_Store$services","_stateUser$services$d","_stateUser$services","_stateUser$services$d2","searchUser","setSearcUser","editModalStatus","setEditModalStatus","editModal","setEditModal","setEditData","deleteModal","setDeleteModal","setDeleteid","setEditId","previewImage","setPreviewImage","isUploading","setIsUploading","currentUploadId","setCurrentUploadId","fileInputRef","useRef","Store","Service","SelectedService","setSelectService","services","viewUser","setViewUser","viewData","setViewdata","filterData","setFilterData","gender","minAge","maxAge","filterMenu","setFilterMenu","handleStatus","idedi","status","updatestatus","setPage","stateUser","reversedData","currentItems","_event$target$files","formData","res","upload_Services_Images","payload","isSuccess","imageUrl","setItem","handleImageUpload","searchInput","discription","ctegory","oneOf","filteredData","filter","f","_f$name","toLowerCase","includes","useSortableData","PageWrapper","demoPagesMenu","Label","htmlFor","SubHeader","SubHeaderLeft","inputValue","trim","fetchsearchUser","handleSearch","SubHeaderRight","isLight","Page","Card","stretch","CardBody","isScrollable","_item$mode","getColorNameWithIndex","current","click","avatar","getFirstLetter","display","category","Dropdown","DropdownToggle","hasIcon","isLink","DropdownMenu","ActiveUser","DropdownItem","shadow","isAlignmentEnd","tag","Add","Edit_User","OrderDeleteModal"],"sourceRoot":""}