{"version":3,"file":"static/js/930.eb6d124b.chunk.js","mappings":"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","sources":["common/other/CommonAvatarTeam.tsx","components/bootstrap/Badge.tsx","components/bootstrap/Option.tsx","components/bootstrap/forms/Checks.tsx","components/bootstrap/forms/Select.tsx","common/data/boardTagsData.ts","pages/presentation/project-management/helper/helper.ts","pages/presentation/project-management/component/Board.tsx","pages/presentation/project-management/component/ColumnCard.tsx","pages/presentation/project-management/component/ColumnCardWrapper.tsx","pages/presentation/project-management/helper/style.ts","pages/presentation/project-management/component/Columns.tsx","pages/presentation/project-management/ProjectManagementsProject.tsx"],"sourcesContent":["import React, { FC, memo, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar, { AvatarGroup } from '../../components/Avatar';\nimport USERS from '../data/userDummyData';\n\ninterface ICommonAvatarTeamProps {\n\tchildren: ReactNode;\n\tisAlignmentEnd?: boolean;\n}\nconst CommonAvatarTeam: FC<ICommonAvatarTeamProps> = ({ children, isAlignmentEnd }) => {\n\treturn (\n\t\t<>\n\t\t\t{children && !isAlignmentEnd && <span className='me-3'>{children}</span>}\n\t\t\t<AvatarGroup>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={USERS.GRACE.src}\n\t\t\t\t\tsrcSet={USERS.GRACE.srcSet}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcolor={USERS.GRACE.color}\n\t\t\t\t\tuserName={`${USERS.GRACE.name} ${USERS.GRACE.surname}`}\n\t\t\t\t/>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={USERS.JANE.src}\n\t\t\t\t\tsrcSet={USERS.JANE.srcSet}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcolor={USERS.JANE.color}\n\t\t\t\t\tuserName={`${USERS.JANE.name} ${USERS.JANE.surname}`}\n\t\t\t\t/>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={USERS.RYAN.src}\n\t\t\t\t\tsrcSet={USERS.RYAN.srcSet}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcolor={USERS.RYAN.color}\n\t\t\t\t\tuserName={`${USERS.RYAN.name} ${USERS.RYAN.surname}`}\n\t\t\t\t/>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={USERS.ELLA.src}\n\t\t\t\t\tsrcSet={USERS.ELLA.srcSet}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcolor={USERS.ELLA.color}\n\t\t\t\t\tuserName={`${USERS.ELLA.name} ${USERS.ELLA.surname}`}\n\t\t\t\t/>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={USERS.CHLOE.src}\n\t\t\t\t\tsrcSet={USERS.CHLOE.srcSet}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcolor={USERS.CHLOE.color}\n\t\t\t\t\tuserName={`${USERS.CHLOE.name} ${USERS.CHLOE.surname}`}\n\t\t\t\t/>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={USERS.SAM.src}\n\t\t\t\t\tsrcSet={USERS.SAM.srcSet}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcolor={USERS.SAM.color}\n\t\t\t\t\tuserName={`${USERS.SAM.name} ${USERS.SAM.surname}`}\n\t\t\t\t/>\n\t\t\t</AvatarGroup>\n\t\t\t{children && isAlignmentEnd && <span>{children}</span>}\n\t\t</>\n\t);\n};\nCommonAvatarTeam.propTypes = {\n\tchildren: PropTypes.node,\n\tisAlignmentEnd: PropTypes.bool,\n};\nCommonAvatarTeam.defaultProps = {\n\tchildren: undefined,\n\tisAlignmentEnd: false,\n};\n\nexport default memo(CommonAvatarTeam);\n","import React, { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport useDarkMode from '../../hooks/useDarkMode';\nimport { TColor } from '../../type/color-type';\n\ninterface IBadgeProps extends Record<string, any> {\n\tchildren: ReactNode;\n\tclassName?: string;\n\tcolor?: TColor;\n\trounded?:\n\t\t| null\n\t\t| 'default'\n\t\t| 0\n\t\t| 1\n\t\t| 2\n\t\t| 3\n\t\t| 'bottom'\n\t\t| 'top'\n\t\t| 'circle'\n\t\t| 'end'\n\t\t| 'start'\n\t\t| 'pill';\n\tshadow?: null | 'none' | 'sm' | 'default' | 'lg';\n\tisLight?: boolean;\n}\nconst Badge: FC<IBadgeProps> = ({\n\tchildren,\n\tclassName,\n\tcolor,\n\tshadow,\n\trounded,\n\tisLight,\n\t...props\n}) => {\n\tconst { darkModeStatus } = useDarkMode();\n\treturn (\n\t\t<span\n\t\t\tclassName={classNames(\n\t\t\t\t'badge',\n\t\t\t\t{\n\t\t\t\t\t[`bg-${color}`]: !isLight,\n\t\t\t\t\t[`bg-l${darkModeStatus ? 'o25' : '10'}-${color}`]: isLight,\n\t\t\t\t\t[`text-${color}`]: isLight,\n\t\t\t\t\t[`shadow${shadow !== 'default' ? `-${shadow}` : ''}`]: !!shadow,\n\t\t\t\t\t[`rounded${rounded !== 'default' ? `-${rounded}` : ''}`]: rounded,\n\t\t\t\t\t'rounded-0':\n\t\t\t\t\t\trounded === 'bottom' ||\n\t\t\t\t\t\trounded === 'top' ||\n\t\t\t\t\t\trounded === 'end' ||\n\t\t\t\t\t\trounded === 'start' ||\n\t\t\t\t\t\trounded === 0,\n\t\t\t\t},\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\nBadge.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n\tcolor: PropTypes.oneOf([\n\t\t'primary',\n\t\t'secondary',\n\t\t'success',\n\t\t'info',\n\t\t'warning',\n\t\t'danger',\n\t\t'light',\n\t\t'dark',\n\t]),\n\trounded: PropTypes.oneOf([\n\t\t'default',\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t'bottom',\n\t\t'top',\n\t\t'circle',\n\t\t'end',\n\t\t'start',\n\t\t'pill',\n\t]),\n\tshadow: PropTypes.oneOf([null, 'none', 'sm', 'default', 'lg']),\n\tisLight: PropTypes.bool,\n};\nBadge.defaultProps = {\n\tclassName: undefined,\n\tcolor: 'primary',\n\trounded: null,\n\tshadow: null,\n\tisLight: false,\n};\n\nexport default Badge;\n","import React, { FC, HTMLAttributes } from 'react';\nimport PropTypes from 'prop-types';\n\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\n\tchildren: string;\n\tvalue?: string | number;\n\tdisabled?: boolean;\n\tariaLabelledby?: string | null;\n}\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\n\treturn (\n\t\t<option\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\taria-labelledby={ariaLabelledby || children}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</option>\n\t);\n};\nOption.propTypes = {\n\tchildren: PropTypes.string.isRequired,\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tdisabled: PropTypes.bool,\n\tariaLabelledby: PropTypes.string,\n};\nOption.defaultProps = {\n\tdisabled: false,\n\tariaLabelledby: null,\n\tvalue: undefined,\n};\n\nexport interface IOptionsProps {\n\tlist: {\n\t\tvalue?: string | number;\n\t\ttext?: string | number;\n\t\tlabel?: string | number;\n\t}[];\n}\n// @ts-ignore\nexport const Options: FC<IOptionsProps> = ({ list }) => {\n\treturn list?.map((item) => (\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t<Option key={item.value} value={item.value} {...item}>\n\t\t\t{(item.text as string) || (item.label as string)}\n\t\t</Option>\n\t));\n};\nOptions.propTypes = {\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t).isRequired,\n};\n\nexport default Option;\n","import React, {\n\tChildren,\n\tcloneElement,\n\tforwardRef,\n\tHTMLAttributes,\n\tReactElement,\n\tReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Validation from './Validation';\n\ninterface IChecksGroupProps extends HTMLAttributes<HTMLDivElement> {\n\tid?: string | undefined;\n\tclassName?: string;\n\tchildren: ReactElement<IChecksProps> | ReactElement<IChecksProps>[];\n\tisInline?: boolean;\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisTooltipFeedback?: boolean;\n}\nexport const ChecksGroup = forwardRef<HTMLDivElement, IChecksGroupProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\tisInline,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisTooltipFeedback,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tref={ref}\n\t\t\t\t\tid={id}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...props}>\n\t\t\t\t\t{Children.map(children, (child) =>\n\t\t\t\t\t\tcloneElement(child, {\n\t\t\t\t\t\t\tisInline: child.props.isInline || isInline,\n\t\t\t\t\t\t\tisValid,\n\t\t\t\t\t\t\tisTouched,\n\t\t\t\t\t\t\tinvalidFeedback,\n\t\t\t\t\t\t\tvalidFeedback,\n\t\t\t\t\t\t\tisTooltipFeedback,\n\t\t\t\t\t\t\tisValidMessage: false,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<Validation\n\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t},\n);\nChecksGroup.displayName = 'ChecksGroup';\nChecksGroup.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\t// @ts-ignore\n\tchildren: PropTypes.node.isRequired,\n\tisInline: PropTypes.bool,\n\tisTouched: PropTypes.bool,\n\tisValid: PropTypes.bool,\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisTooltipFeedback: PropTypes.bool,\n};\nChecksGroup.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tisInline: false,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisTooltipFeedback: false,\n};\n\nexport interface IChecksProps extends HTMLAttributes<HTMLInputElement> {\n\tid?: string | undefined;\n\tclassName?: string;\n\tname?: string | null;\n\ttype?: 'checkbox' | 'radio' | 'switch';\n\tlabel?: ReactNode;\n\tvalue?: string | number;\n\tchecked?: boolean | string;\n\tdisabled?: boolean;\n\tisInline?: boolean;\n\tisFormCheckInput?: boolean;\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisValidMessage?: boolean;\n\tisTooltipFeedback?: boolean;\n\tonBlur?(...args: unknown[]): unknown;\n\tonChange?(...args: unknown[]): unknown;\n\tonFocus?(...args: unknown[]): unknown;\n\tonInput?(...args: unknown[]): unknown;\n\tonInvalid?(...args: unknown[]): unknown;\n\tonSelect?(...args: unknown[]): unknown;\n\tariaLabel?: string;\n}\nconst Checks = forwardRef<HTMLInputElement, IChecksProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tclassName,\n\t\t\tname,\n\t\t\ttype,\n\t\t\tlabel,\n\t\t\tvalue,\n\t\t\tchecked,\n\t\t\tdisabled,\n\t\t\tisInline,\n\t\t\tisFormCheckInput,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisValidMessage,\n\t\t\tisTooltipFeedback,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonInput,\n\t\t\tonInvalid,\n\t\t\tonSelect,\n\t\t\tariaLabel,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst INNER = (\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'form-check-input',\n\t\t\t\t\t{\n\t\t\t\t\t\t'mt-0': isFormCheckInput,\n\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\tname={name === null ? id : name}\n\t\t\t\ttype={type === 'radio' ? 'radio' : 'checkbox'}\n\t\t\t\tid={id}\n\t\t\t\tvalue={value}\n\t\t\t\tchecked={type === 'radio' ? checked === value : !!checked}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonInput={onInput}\n\t\t\t\tonInvalid={onInvalid}\n\t\t\t\tonSelect={onSelect}\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t);\n\n\t\tif (isFormCheckInput) {\n\t\t\treturn INNER;\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames('form-check', {\n\t\t\t\t\t'form-switch': type === 'switch',\n\t\t\t\t\t'form-check-inline': isInline,\n\t\t\t\t})}>\n\t\t\t\t{INNER}\n\t\t\t\t{label && (\n\t\t\t\t\t<label className='form-check-label' htmlFor={id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t\t{isValidMessage && (\n\t\t\t\t\t<Validation\n\t\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n);\nChecks.displayName = 'Checks';\nChecks.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\tname: PropTypes.string,\n\ttype: PropTypes.oneOf(['checkbox', 'radio', 'switch']),\n\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t// eslint-disable-next-line react/require-default-props\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tchecked: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\tdisabled: PropTypes.bool,\n\tisInline: PropTypes.bool,\n\tisFormCheckInput: PropTypes.bool,\n\tisTouched: PropTypes.bool,\n\tisValid: PropTypes.bool,\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisValidMessage: PropTypes.bool,\n\tisTooltipFeedback: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonFocus: PropTypes.func,\n\tonInput: PropTypes.func,\n\tonInvalid: PropTypes.func,\n\tonSelect: PropTypes.func,\n\tariaLabel: PropTypes.string,\n};\nChecks.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tname: null,\n\ttype: 'checkbox',\n\tlabel: null,\n\tchecked: false,\n\tdisabled: false,\n\tisInline: false,\n\tisFormCheckInput: false,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisValidMessage: true,\n\tisTooltipFeedback: false,\n\tonBlur: undefined,\n\tonChange: undefined,\n\tonFocus: undefined,\n\tonInput: undefined,\n\tonInvalid: undefined,\n\tonSelect: undefined,\n\tariaLabel: undefined,\n};\n\nexport default Checks;\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Option, { IOptionsProps, Options } from '../Option';\nimport Validation from './Validation';\n\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\n\tid?: string;\n\tclassName?: string;\n\tname?: string;\n\tchildren?: ReactNode;\n\tariaLabel: string;\n\tplaceholder?: string;\n\tsize?: 'lg' | 'sm';\n\tmultiple?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\tariaDescribedby?: string;\n\tariaLabelledby?: string;\n\ttitle?: string;\n\tvalue?: string | string[];\n\tdefaultValue?: string | string[];\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisValidMessage?: boolean;\n\tisTooltipFeedback?: boolean;\n\tonBlur?(...args: unknown[]): unknown;\n\tonChange?(...args: unknown[]): unknown;\n\tonFocus?(...args: unknown[]): unknown;\n\tonInput?(...args: unknown[]): unknown;\n\tonInvalid?(...args: unknown[]): unknown;\n\tonSelect?(...args: unknown[]): unknown;\n}\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tname,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\trequired,\n\t\t\tplaceholder,\n\t\t\tariaDescribedby,\n\t\t\tariaLabelledby,\n\t\t\tariaLabel,\n\t\t\tlist,\n\t\t\tmultiple,\n\t\t\ttitle,\n\t\t\tsize,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisValidMessage,\n\t\t\tisTooltipFeedback,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonInput,\n\t\t\tonInvalid,\n\t\t\tonSelect,\n\t\t\t...props\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select\n\t\t\t\t\tref={ref}\n\t\t\t\t\tid={id}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'form-select',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\tname={name}\n\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\taria-describedby={ariaDescribedby}\n\t\t\t\t\taria-labelledby={ariaLabelledby}\n\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\trequired={required}\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tonInput={onInput}\n\t\t\t\t\tonInvalid={onInvalid}\n\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...props}>\n\t\t\t\t\t{placeholder && (\n\t\t\t\t\t\t<Option value='' hidden>\n\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t)}\n\t\t\t\t\t{children || (list && <Options list={list} />)}\n\t\t\t\t</select>\n\t\t\t\t{isValidMessage && (\n\t\t\t\t\t<Validation\n\t\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t},\n);\nSelect.displayName = 'Select';\nSelect.propTypes = {\n\tid: PropTypes.string,\n\tclassName: PropTypes.string,\n\t/**\n\t * If the name value is left blank, the id value is assigned.\n\t */\n\tname: PropTypes.string,\n\tchildren: PropTypes.node,\n\tariaLabel: PropTypes.string.isRequired,\n\tplaceholder: PropTypes.string,\n\tsize: PropTypes.oneOf(['lg', 'sm']),\n\tmultiple: PropTypes.bool,\n\t/**\n\t * A *disabled* element isn't editable and isn't sent on submit.\n\t */\n\tdisabled: PropTypes.bool,\n\trequired: PropTypes.bool,\n\tariaDescribedby: PropTypes.string,\n\tariaLabelledby: PropTypes.string,\n\ttitle: PropTypes.string,\n\t/**\n\t * For formik ***`formik.values.ID_OR_NAME`***\n\t */\n\t// @ts-ignore\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tdefaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\ttext: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t}),\n\t),\n\t/**\n\t * For formik ***`formik.touched.ID_OR_NAME`***\n\t */\n\tisTouched: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.isValid`***\n\t */\n\tisValid: PropTypes.bool,\n\t/**\n\t * For formik ***`formik.errors.ID_OR_NAME`***\n\t */\n\tinvalidFeedback: PropTypes.string,\n\tvalidFeedback: PropTypes.string,\n\tisValidMessage: PropTypes.bool,\n\tisTooltipFeedback: PropTypes.bool,\n\t/**\n\t * Fires the moment that the element loses focus. For formik ***`formik.handleBlur`***\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * Fires the moment when the value of the element is changed. For formik ***`formik.handleChange`***\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Fires the moment when the element gets focus\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Script to be run when an element gets user input\n\t */\n\tonInput: PropTypes.func,\n\t/**\n\t * Script to be run when an element is invalid\n\t */\n\tonInvalid: PropTypes.func,\n\t/**\n\t * Fires after some text has been selected in an element\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * More information, [react-input-mask](https://github.com/sanniassin/react-input-mask#react-input-mask).\n\t */\n};\nSelect.defaultProps = {\n\tid: undefined,\n\tclassName: undefined,\n\tname: undefined,\n\tchildren: null,\n\tplaceholder: undefined,\n\tmultiple: false,\n\tsize: undefined,\n\tdisabled: false,\n\trequired: false,\n\tariaDescribedby: undefined,\n\tariaLabelledby: undefined,\n\ttitle: undefined,\n\tvalue: undefined,\n\tdefaultValue: undefined,\n\tlist: undefined,\n\tisTouched: false,\n\tisValid: false,\n\tinvalidFeedback: undefined,\n\tvalidFeedback: undefined,\n\tisValidMessage: true,\n\tisTooltipFeedback: false,\n\tonBlur: undefined,\n\tonChange: undefined,\n\tonFocus: undefined,\n\tonInput: undefined,\n\tonInvalid: undefined,\n\tonSelect: undefined,\n};\n\nexport default Select;\n","import COLORS from './enumColors';\nimport { TColor } from '../../type/color-type';\n\nconst TAGS: { [key: string]: { id: string; color: TColor; title: string } } = {\n\tcritical: {\n\t\tid: 'critical',\n\t\tcolor: COLORS.SUCCESS.name,\n\t\ttitle: 'Critical',\n\t},\n\tdesign: {\n\t\tid: 'design',\n\t\tcolor: COLORS.WARNING.name,\n\t\ttitle: 'Design',\n\t},\n\tcode: {\n\t\tid: 'code',\n\t\tcolor: COLORS.INFO.name,\n\t\ttitle: 'Code',\n\t},\n\treview: {\n\t\tid: 'review',\n\t\tcolor: COLORS.INFO.name,\n\t\ttitle: 'Review',\n\t},\n\trevise: {\n\t\tid: 'revise',\n\t\tcolor: COLORS.SECONDARY.name,\n\t\ttitle: 'Revise',\n\t},\n};\n\nexport function getTagsDataWithId(id: { toString: () => any }) {\n\t// @ts-ignore\n\treturn TAGS[Object.keys(TAGS).filter((f) => TAGS[f].id.toString() === id.toString())];\n}\n\nexport default TAGS;\n","import { TCard } from '../type/types';\n\n/**\n * A little function to help us with reordering the result\n * @param list\n * @param startIndex\n * @param endIndex\n */\nexport const reorder = (list: TCard[], startIndex: number, endIndex: number): TCard[] => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\n\treturn result;\n};\n\n/**\n * Moves an item from one list to another list.\n * @param source\n * @param destination\n * @param droppableSource\n * @param droppableDestination\n */\nexport const move = (\n\tsource: TCard[],\n\tdestination: TCard[],\n\tdroppableSource: { index: number; droppableId: string },\n\tdroppableDestination: { index: number; droppableId: string },\n) => {\n\tconst sourceClone: TCard[] = Array.from(source);\n\tconst destClone: TCard[] = Array.from(destination);\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\tdestClone.splice(droppableDestination.index, 0, removed);\n\n\tconst result: { [key: string]: TCard[] } = {};\n\tresult[droppableSource.droppableId] = sourceClone;\n\tresult[droppableDestination.droppableId] = destClone;\n\n\treturn result;\n};\n","import React, { FC, ReactNode } from 'react';\n\ninterface IBoard {\n\tchildren: ReactNode;\n}\nconst Board: FC<IBoard> = ({ children }) => {\n\treturn <div className='board row mx-n4 pb-3 px-3'>{children}</div>;\n};\n\nexport default Board;\n","import React, { FC, useState } from 'react';\nimport { useFormik } from 'formik';\nimport classNames from 'classnames';\nimport useDarkMode from '../../../../hooks/useDarkMode';\nimport Card, {\n\tCardActions,\n\tCardBody,\n\tCardFooter,\n\tCardFooterLeft,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Avatar from '../../../../components/Avatar';\nimport Icon from '../../../../components/icon/Icon';\nimport Badge from '../../../../components/bootstrap/Badge';\nimport Modal, {\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tModalTitle,\n} from '../../../../components/bootstrap/Modal';\nimport FormGroup from '../../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../../components/bootstrap/forms/Input';\nimport Textarea from '../../../../components/bootstrap/forms/Textarea';\nimport Button from '../../../../components/bootstrap/Button';\nimport Checks, { ChecksGroup } from '../../../../components/bootstrap/forms/Checks';\nimport Chat, { ChatGroup } from '../../../../components/Chat';\nimport CHATS from '../../../../common/data/chatDummyData';\nimport InputGroup from '../../../../components/bootstrap/forms/InputGroup';\nimport Select from '../../../../components/bootstrap/forms/Select';\nimport Option from '../../../../components/bootstrap/Option';\nimport USERS from '../../../../common/data/userDummyData';\nimport TAGS from '../../../../common/data/boardTagsData';\nimport { TCard, TCards, TColumnsData } from '../type/types';\nimport { move } from '../helper/helper';\n\ninterface IColumnCard {\n\tcolumnKey: string;\n\tcolumnsData: TColumnsData;\n\tcard: TCard;\n\tcardsData: TCards;\n\tsetCardsData(...args: unknown[]): unknown;\n\tindex: number;\n}\nconst ColumnCard: FC<IColumnCard> = ({\n\tcolumnKey,\n\tcolumnsData,\n\tcard,\n\tcardsData,\n\tsetCardsData,\n\tindex,\n}) => {\n\tconst { darkModeStatus } = useDarkMode();\n\tconst [editModalStatus, setEditModalStatus] = useState<boolean>(false);\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tcardName: card.title || '',\n\t\t\tgroupId: columnKey || '',\n\t\t\tdescription: card.description || '',\n\t\t\tassignee: card.user.username || '',\n\t\t\ttask:\n\t\t\t\t(card.tasks && card.tasks.filter((f) => f.status).map((m) => m.id.toString())) ||\n\t\t\t\t[],\n\t\t\ttags: (card.tags && card.tags.map((m) => m.id)) || [],\n\t\t},\n\t\tonSubmit: (values) => {\n\t\t\tconst RESULT = move(\n\t\t\t\tcardsData[columnKey],\n\t\t\t\tcardsData[formik.values.groupId],\n\t\t\t\t{\n\t\t\t\t\tindex,\n\t\t\t\t\tdroppableId: columnKey,\n\t\t\t\t},\n\t\t\t\t{ index: 0, droppableId: values.groupId },\n\t\t\t);\n\t\t\tsetCardsData({ ...cardsData, ...RESULT });\n\t\t\tsetEditModalStatus(false);\n\t\t},\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<CardHeader>\n\t\t\t\t<CardLabel>\n\t\t\t\t\t<CardTitle\n\t\t\t\t\t\ttag='div'\n\t\t\t\t\t\tclassName={classNames('h6', 'cursor-pointer', {\n\t\t\t\t\t\t\t'link-dark': !darkModeStatus,\n\t\t\t\t\t\t\t'link-light': darkModeStatus,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonClick={() => setEditModalStatus(true)}\n\t\t\t\t\t\tdata-tour={card.title}>\n\t\t\t\t\t\t{card.title}\n\t\t\t\t\t</CardTitle>\n\t\t\t\t\t{card.subtitle && (\n\t\t\t\t\t\t<CardSubTitle className='text-muted'>{card.subtitle}</CardSubTitle>\n\t\t\t\t\t)}\n\t\t\t\t</CardLabel>\n\t\t\t\t{card.user && (\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tsrc={card.user.src}\n\t\t\t\t\t\t\tsrcSet={card.user.srcSet}\n\t\t\t\t\t\t\tcolor={card.user.color}\n\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\tuserName={`${card.user.name} ${card.user.surname}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CardActions>\n\t\t\t\t)}\n\t\t\t</CardHeader>\n\t\t\t<CardBody className='pt-0'>\n\t\t\t\t<div className='row g-2 mb-3'>\n\t\t\t\t\t{!!card?.attachments?.length && (\n\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t<small className='border border-info border-2 text-info fw-bold px-2 py-1 rounded-1'>\n\t\t\t\t\t\t\t\t<Icon icon='AttachFile' className='me-1' />\n\t\t\t\t\t\t\t\t{card.attachments.length}\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{!!card?.tasks?.length && (\n\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t<small className='border border-info border-2 text-info fw-bold px-2 py-1 rounded-1'>\n\t\t\t\t\t\t\t\t<Icon icon='TaskAlt' className='me-1' />\n\t\t\t\t\t\t\t\t{card.tasks.length}\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{card.label && (\n\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t<small className='border border-success border-2 text-success fw-bold px-2 py-1 rounded-1'>\n\t\t\t\t\t\t\t\t{card.label}\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{card.img && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={card.img}\n\t\t\t\t\t\tclassName={classNames('img-fluid rounded mb-3 mt-1', {\n\t\t\t\t\t\t\t'bg-lo25-primary': darkModeStatus,\n\t\t\t\t\t\t\t'bg-l25-primary': !darkModeStatus,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\talt={card.title}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{card.description}\n\t\t\t</CardBody>\n\t\t\t{card.tags && (\n\t\t\t\t<CardFooter className='pt-0' size='sm'>\n\t\t\t\t\t<CardFooterLeft>\n\t\t\t\t\t\t{card.tags.map((tag) => (\n\t\t\t\t\t\t\t<Badge key={tag.id} color={tag.color} isLight>\n\t\t\t\t\t\t\t\t{tag.title}\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CardFooterLeft>\n\t\t\t\t</CardFooter>\n\t\t\t)}\n\n\t\t\t<Modal\n\t\t\t\tsetIsOpen={setEditModalStatus}\n\t\t\t\tisOpen={editModalStatus}\n\t\t\t\tsize='lg'\n\t\t\t\tisScrollable\n\t\t\t\tdata-tour='mail-app-modal'>\n\t\t\t\t<ModalHeader className='px-4' setIsOpen={setEditModalStatus}>\n\t\t\t\t\t<ModalTitle id='project-edit'>{card.title}</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody className='px-4'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col-md-8'>\n\t\t\t\t\t\t\t<Card shadow='sm'>\n\t\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t\t<CardLabel icon='Info' iconColor='success'>\n\t\t\t\t\t\t\t\t\t\t<CardTitle>Task Information</CardTitle>\n\t\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t<div className='row g-4'>\n\t\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\n\t\t\t\t\t\t\t\t\t\t\tid='cardName'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Task Name'>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.cardName}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\n\t\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Description'>\n\t\t\t\t\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.description}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t{card.attachments && (\n\t\t\t\t\t\t\t\t<Card shadow='sm'>\n\t\t\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t\t\t<CardLabel icon='AttachFile' iconColor='danger'>\n\t\t\t\t\t\t\t\t\t\t\t<CardTitle>Attachment</CardTitle>\n\t\t\t\t\t\t\t\t\t\t\t<CardSubTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t{card.attachments.length} files\n\t\t\t\t\t\t\t\t\t\t\t</CardSubTitle>\n\t\t\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t\t\t<Button color='danger' isOutline>\n\t\t\t\t\t\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t{card.attachments.map((a) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={a.id} className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLight\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='CloudDownload'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{a.file}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{card.tasks && (\n\t\t\t\t\t\t\t\t<Card shadow='sm'>\n\t\t\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t\t\t<CardLabel icon='Task Alt' iconColor='primary'>\n\t\t\t\t\t\t\t\t\t\t\t<CardTitle>Tasks</CardTitle>\n\t\t\t\t\t\t\t\t\t\t\t<CardSubTitle>{card.tasks.length} tasks</CardSubTitle>\n\t\t\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t\t\t<Button color='primary' isOutline>\n\t\t\t\t\t\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<ChecksGroup>\n\t\t\t\t\t\t\t\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t\t\t\t\t\t\t\t{card.tasks.map((t) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Checks\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={t.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={t.id.toString()}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='task'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={t.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={formik.values.task.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt.id.toString(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</ChecksGroup>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Card shadow='sm'>\n\t\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t\t<CardLabel icon='QuestionAnswer' iconColor='info'>\n\t\t\t\t\t\t\t\t\t\t<CardTitle>Comments</CardTitle>\n\t\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t<Chat>\n\t\t\t\t\t\t\t\t\t\t{CHATS.CHLOE_VS_JOHN.map((msg) => (\n\t\t\t\t\t\t\t\t\t\t\t<ChatGroup\n\t\t\t\t\t\t\t\t\t\t\t\tkey={msg.id}\n\t\t\t\t\t\t\t\t\t\t\t\tmessages={msg.messages}\n\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\tuser={msg.user}\n\t\t\t\t\t\t\t\t\t\t\t\tisReply={msg.isReply}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Chat>\n\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t<CardFooter className='d-block'>\n\t\t\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t\t\t<Textarea />\n\t\t\t\t\t\t\t\t\t\t<Button color='info' icon='Send'>\n\t\t\t\t\t\t\t\t\t\t\tSEND\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-md-4'>\n\t\t\t\t\t\t\t<div className='row g-4 sticky-top'>\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='groupId' label='Status'>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.groupId}>\n\t\t\t\t\t\t\t\t\t\t{Object.keys(columnsData).map((columnItemKey) => (\n\t\t\t\t\t\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\t\t\t\t\t\tkey={columnsData[columnItemKey].id}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={columnsData[columnItemKey].id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{columnsData[columnItemKey].title}\n\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='assignee' label='Assignee'>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.assignee}>\n\t\t\t\t\t\t\t\t\t\t{Object.keys(USERS).map((u) => (\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t<Option key={USERS[u].id} value={USERS[u].username}>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${USERS[u].name} ${USERS[u].surname}`\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='tags' label='Tags'>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.tags}>\n\t\t\t\t\t\t\t\t\t\t{Object.keys(TAGS).map((t) => (\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t<Option key={TAGS[t].id} value={TAGS[t].id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\tTAGS[t].title\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter className='px-4 pb-4'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tclassName='w-100'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={formik.handleSubmit}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default ColumnCard;\n","import React, { FC } from 'react';\nimport { Draggable, DraggableProvided, DraggableStateSnapshot } from '@hello-pangea/dnd';\nimport classNames from 'classnames';\nimport Card from '../../../../components/bootstrap/Card';\nimport { getItemStyle } from '../helper/style';\nimport { TCard, TCards, TColumnsData } from '../type/types';\nimport ColumnCard from './ColumnCard';\n\ninterface IColumnCardWrapper {\n\tcolumnKey: string;\n\tcolumnsData: TColumnsData;\n\tcardsData: TCards;\n\tsetCardsData(...args: unknown[]): unknown;\n}\nconst ColumnCardWrapper: FC<IColumnCardWrapper> = ({\n\tcolumnKey,\n\tcolumnsData,\n\tcardsData,\n\tsetCardsData,\n}) => {\n\tconst cardsInTheColumn: TCard[] = cardsData[columnKey];\n\n\treturn (\n\t\t<>\n\t\t\t{cardsInTheColumn.map((card, index) => (\n\t\t\t\t<Draggable key={card.id} draggableId={card.id} index={index}>\n\t\t\t\t\t{(\n\t\t\t\t\t\tprovidedDraggable: DraggableProvided,\n\t\t\t\t\t\tsnapshotDraggable: DraggableStateSnapshot,\n\t\t\t\t\t) => (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tshadow='none'\n\t\t\t\t\t\t\tborderSize={1}\n\t\t\t\t\t\t\tclassName={classNames('rounded-2', {\n\t\t\t\t\t\t\t\t'border-info': snapshotDraggable.isDragging,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tref={providedDraggable.innerRef}\n\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t{...providedDraggable.draggableProps}\n\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t{...providedDraggable.dragHandleProps}\n\t\t\t\t\t\t\tstyle={getItemStyle(\n\t\t\t\t\t\t\t\tsnapshotDraggable.isDragging,\n\t\t\t\t\t\t\t\tprovidedDraggable.draggableProps.style,\n\t\t\t\t\t\t\t)}>\n\t\t\t\t\t\t\t<ColumnCard\n\t\t\t\t\t\t\t\tcolumnKey={columnKey}\n\t\t\t\t\t\t\t\tcolumnsData={columnsData}\n\t\t\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\t\t\tcardsData={cardsData}\n\t\t\t\t\t\t\t\tsetCardsData={setCardsData}\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t)}\n\t\t\t\t</Draggable>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default ColumnCardWrapper;\n","import { CSSProperties } from 'react';\nimport { DraggableStyle } from '@hello-pangea/dnd';\n\nexport const getItemStyle = (\n\tisDragging: boolean,\n\tdraggableStyle: DraggableStyle | undefined,\n): CSSProperties => ({\n\t// @ts-ignore\n\t'--bs-border-style': isDragging ? 'dashed' : 'inherit',\n\tuserSelect: 'none',\n\n\t// styles we need to apply on draggables\n\t...draggableStyle,\n});\n\nexport const getListStyle = (isDraggingOver: boolean): CSSProperties => ({\n\tbackground: isDraggingOver ? 'rgba(0,0,0,0.1)' : undefined,\n});\n","import React, { FC, useState } from 'react';\nimport { useFormik } from 'formik';\nimport classNames from 'classnames';\nimport { Droppable, DroppableProvided, DroppableStateSnapshot } from '@hello-pangea/dnd';\nimport useDarkMode from '../../../../hooks/useDarkMode';\nimport Card, {\n\tCardActions,\n\tCardBody,\n\tCardFooter,\n\tCardFooterLeft,\n\tCardHeader,\n\tCardLabel,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Badge from '../../../../components/bootstrap/Badge';\nimport Dropdown, {\n\tDropdownItem,\n\tDropdownMenu,\n\tDropdownToggle,\n} from '../../../../components/bootstrap/Dropdown';\nimport Button from '../../../../components/bootstrap/Button';\nimport { getListStyle } from '../helper/style';\nimport Modal, {\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tModalTitle,\n} from '../../../../components/bootstrap/Modal';\nimport FormGroup from '../../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../../components/bootstrap/forms/Input';\nimport Textarea from '../../../../components/bootstrap/forms/Textarea';\nimport Select from '../../../../components/bootstrap/forms/Select';\nimport Option from '../../../../components/bootstrap/Option';\nimport USERS from '../../../../common/data/userDummyData';\nimport TAGS from '../../../../common/data/boardTagsData';\nimport { TCards, TColumnData, TColumnsData } from '../type/types';\nimport ColumnCardWrapper from './ColumnCardWrapper';\n\ninterface IColumns {\n\tcardsData: TCards;\n\tcolumnsData: TColumnsData;\n\tsetCardsData(...args: unknown[]): unknown;\n}\nconst Columns: FC<IColumns> = ({ cardsData, columnsData, setCardsData }) => {\n\tconst { darkModeStatus } = useDarkMode();\n\n\tconst [editModalStatus, setEditModalStatus] = useState<boolean>(false);\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tcardName: '',\n\t\t\tgroupId: '',\n\t\t\tdescription: '',\n\t\t\tassignee: '',\n\t\t\ttask: [],\n\t\t\ttags: [],\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tonSubmit: (values) => {\n\t\t\tsetEditModalStatus(false);\n\t\t},\n\t});\n\treturn (\n\t\t<>\n\t\t\t{Object.keys(columnsData).map((columnKey) => {\n\t\t\t\tconst columnData: TColumnData = columnsData[columnKey];\n\t\t\t\treturn (\n\t\t\t\t\t<div key={columnKey} className='col-auto'>\n\t\t\t\t\t\t<Card className={classNames(`board-group shadow-3d-${columnData.color}`)}>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon={columnData.icon} iconColor={columnData.color}>\n\t\t\t\t\t\t\t\t\t<CardTitle tag='div' className='h5'>\n\t\t\t\t\t\t\t\t\t\t<>{columnData.title} </>\n\t\t\t\t\t\t\t\t\t\t<Badge color={columnData.color} isLight>\n\t\t\t\t\t\t\t\t\t\t\t{cardsData[columnKey].length}\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<Dropdown>\n\t\t\t\t\t\t\t\t\t\t<DropdownToggle hasIcon={false}>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\ticon='MoreVert'\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={darkModeStatus ? 'dark' : undefined}\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='More actions'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t<DropdownMenu isAlignmentEnd>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='Edit'>Rename column</Button>\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='Speed'>Set column limit</Button>\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='AddBox'>Add new column</Button>\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem isDivider />\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='Delete'>Delete column</Button>\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<Droppable droppableId={columnKey}>\n\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\tprovidedDroppable: DroppableProvided,\n\t\t\t\t\t\t\t\t\tsnapshotDroppable: DroppableStateSnapshot,\n\t\t\t\t\t\t\t\t) => (\n\t\t\t\t\t\t\t\t\t<CardBody\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t\t\t{...providedDroppable.droppableProps}\n\t\t\t\t\t\t\t\t\t\tref={providedDroppable.innerRef}\n\t\t\t\t\t\t\t\t\t\tstyle={getListStyle(snapshotDroppable.isDraggingOver)}>\n\t\t\t\t\t\t\t\t\t\t<ColumnCardWrapper\n\t\t\t\t\t\t\t\t\t\t\tcolumnKey={columnKey}\n\t\t\t\t\t\t\t\t\t\t\tcolumnsData={columnsData}\n\t\t\t\t\t\t\t\t\t\t\tcardsData={cardsData}\n\t\t\t\t\t\t\t\t\t\t\tsetCardsData={setCardsData}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{providedDroppable.placeholder}\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t\t\t<CardFooterLeft>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor={columnData.color}\n\t\t\t\t\t\t\t\t\t\tisLight\n\t\t\t\t\t\t\t\t\t\ticon='AddTask'\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditModalStatus(true)}>\n\t\t\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</CardFooterLeft>\n\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Modal setIsOpen={setEditModalStatus} isOpen={editModalStatus} size='lg' isScrollable>\n\t\t\t\t<ModalHeader className='px-4' setIsOpen={setEditModalStatus}>\n\t\t\t\t\t<ModalTitle id='project-edit'>New Card</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody className='px-4'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col-md-8'>\n\t\t\t\t\t\t\t<Card shadow='sm'>\n\t\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t\t<CardLabel icon='Info' iconColor='success'>\n\t\t\t\t\t\t\t\t\t\t<CardTitle>Task Information</CardTitle>\n\t\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t<div className='row g-4'>\n\t\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\n\t\t\t\t\t\t\t\t\t\t\tid='cardName'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Task Name'>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.cardName}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\n\t\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Description'>\n\t\t\t\t\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.description}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-md-4'>\n\t\t\t\t\t\t\t<div className='row g-4 sticky-top'>\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='groupId' label='Status'>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.groupId}>\n\t\t\t\t\t\t\t\t\t\t{Object.keys(columnsData).map((columnItemKey) => (\n\t\t\t\t\t\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\t\t\t\t\t\tkey={columnsData[columnItemKey].id}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={columnsData[columnItemKey].id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{columnsData[columnItemKey].title}\n\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='assignee' label='Assignee'>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.assignee}>\n\t\t\t\t\t\t\t\t\t\t{Object.keys(USERS).map((u) => (\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t<Option key={USERS[u].id} value={USERS[u].username}>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${USERS[u].name} ${USERS[u].surname}`\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='tags' label='Tags'>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.tags}>\n\t\t\t\t\t\t\t\t\t\t{Object.keys(TAGS).map((t) => (\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t<Option key={TAGS[t].id} value={TAGS[t].id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\tTAGS[t].title\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter className='px-4 pb-4'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tclassName='w-100'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={formik.handleSubmit}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default Columns;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DragDropContext, DropResult } from '@hello-pangea/dnd';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport { demoPagesMenu } from '../../../menu';\nimport SubHeader, {\n\tSubHeaderLeft,\n\tSubHeaderRight,\n\tSubheaderSeparator,\n} from '../../../layout/SubHeader/SubHeader';\nimport Page from '../../../layout/Page/Page';\nimport Badge from '../../../components/bootstrap/Badge';\nimport COLORS from '../../../common/data/enumColors';\nimport USERS from '../../../common/data/userDummyData';\n\nimport Slide2 from '../../../assets/img/wanna/slide/scene-2.png';\nimport Slide4 from '../../../assets/img/wanna/slide/scene-4.png';\nimport Slide6 from '../../../assets/img/wanna/slide/scene-6.png';\nimport TAGS from '../../../common/data/boardTagsData';\nimport CommonAvatarTeam from '../../../common/other/CommonAvatarTeam';\nimport Button from '../../../components/bootstrap/Button';\nimport useDarkMode from '../../../hooks/useDarkMode';\nimport { TCards, TColumnsData } from './type/types';\nimport { move, reorder } from './helper/helper';\nimport Board from './component/Board';\nimport Columns from './component/Columns';\n\nconst ProjectManagementsProject = () => {\n\tconst { darkModeStatus } = useDarkMode();\n\tconst navigate = useNavigate();\n\tconst columnsData: TColumnsData = {\n\t\tcolumn1: {\n\t\t\tid: 'column1',\n\t\t\ttitle: 'Backlog',\n\t\t\tcolor: darkModeStatus ? COLORS.LIGHT.name : COLORS.DARK.name,\n\t\t\ticon: 'RateReview',\n\t\t},\n\t\tcolumn2: { id: 'column2', title: 'To Do', color: COLORS.INFO.name, icon: 'DoneOutline' },\n\t\tcolumn3: {\n\t\t\tid: 'column3',\n\t\t\ttitle: 'Pending',\n\t\t\tcolor: COLORS.INFO.name,\n\t\t\ticon: 'PendingActions',\n\t\t},\n\t\tcolumn4: { id: 'column4', title: 'Run', color: COLORS.INFO.name, icon: 'DirectionsRun' },\n\t\tcolumn5: { id: 'column5', title: 'Done', color: COLORS.SUCCESS.name, icon: 'Verified' },\n\t};\n\n\tconst [state, setState] = useState<TCards>({\n\t\tcolumn1: [\n\t\t\t{\n\t\t\t\tid: 'Card1',\n\t\t\t\ttitle: 'Mail App',\n\t\t\t\tsubtitle: 'Facit Themes',\n\t\t\t\tdescription: 'Mail application and screens will be added',\n\t\t\t\tlabel: '7 day left',\n\t\t\t\tuser: USERS.JOHN,\n\t\t\t\timg: Slide2,\n\t\t\t\ttags: [TAGS.critical, TAGS.design, TAGS.code],\n\t\t\t\ttasks: [\n\t\t\t\t\t{ id: 1, text: 'Page UI & UX design', status: true },\n\t\t\t\t\t{ id: 2, text: 'HTML & SCSS coding', status: true },\n\t\t\t\t\t{ id: 3, text: 'React Components to do', status: false },\n\t\t\t\t],\n\t\t\t\tattachments: [\n\t\t\t\t\t{ id: 1, path: 'somefile.txt', file: 'TXT' },\n\t\t\t\t\t{ id: 2, path: 'somefile.txt', file: 'WORD' },\n\t\t\t\t\t{ id: 3, path: 'somefile.txt', file: 'PSD' },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'Card2',\n\t\t\t\ttitle: 'Invoice',\n\t\t\t\tsubtitle: 'Facit Themes',\n\t\t\t\tdescription: 'Invoice preview and new creation screens will be added',\n\t\t\t\tuser: USERS.ELLA,\n\t\t\t\tlabel: '5 day left',\n\t\t\t\ttags: [TAGS.revise, TAGS.design],\n\t\t\t\ttasks: [\n\t\t\t\t\t{ id: 1, text: 'Lorem ipsum dolor', status: true },\n\t\t\t\t\t{ id: 2, text: 'Sit amet.', status: false },\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\tcolumn2: [\n\t\t\t{\n\t\t\t\tid: 'Card3',\n\t\t\t\ttitle: 'Landing Page Update',\n\t\t\t\tsubtitle: 'Omtanke Team',\n\t\t\t\tdescription: 'Will be redesigned',\n\t\t\t\tlabel: '5 day left',\n\t\t\t\tuser: USERS.GRACE,\n\t\t\t\ttags: [TAGS.design, TAGS.code],\n\t\t\t\ttasks: [\n\t\t\t\t\t{ id: 1, text: 'Draft drawings will be made', status: true },\n\t\t\t\t\t{ id: 2, text: 'Page will be updated', status: false },\n\t\t\t\t\t{ id: 3, text: 'Will be sent for review.', status: false },\n\t\t\t\t],\n\t\t\t\tattachments: [{ id: 2, path: 'somefile.txt', file: 'WORD' }],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'Card4',\n\t\t\t\ttitle: 'Write Blog',\n\t\t\t\tsubtitle: 'Facit Themes',\n\t\t\t\tdescription: 'Explain why it should be chosen',\n\t\t\t\tlabel: '7 day left',\n\t\t\t\tuser: USERS.JOHN,\n\t\t\t\timg: Slide4,\n\t\t\t\ttags: [TAGS.design],\n\t\t\t\ttasks: [{ id: 1, text: 'Lorem ipsum dolor', status: true }],\n\t\t\t\tattachments: [{ id: 1, path: 'somefile.txt', file: 'TXT' }],\n\t\t\t},\n\t\t],\n\t\tcolumn3: [],\n\t\tcolumn4: [\n\t\t\t{\n\t\t\t\tid: 'Card5',\n\t\t\t\ttitle: 'Bug Fix',\n\t\t\t\tsubtitle: 'Facit Themes',\n\t\t\t\tdescription: 'Minor bugs will be fixed',\n\t\t\t\tlabel: '5 day left',\n\t\t\t\tuser: USERS.GRACE,\n\t\t\t\ttags: [TAGS.review, TAGS.design, TAGS.code],\n\t\t\t\ttasks: [\n\t\t\t\t\t{ id: 1, text: 'Lorem ipsum dolor', status: true },\n\t\t\t\t\t{ id: 2, text: 'Sit amet.', status: false },\n\t\t\t\t\t{ id: 3, text: 'Aliquam quis varius turpis.', status: false },\n\t\t\t\t],\n\t\t\t\tattachments: [\n\t\t\t\t\t{ id: 1, path: 'somefile.txt', file: 'TXT' },\n\t\t\t\t\t{ id: 2, path: 'somefile.txt', file: 'WORD' },\n\t\t\t\t\t{ id: 3, path: 'somefile.txt', file: 'PSD' },\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\tcolumn5: [\n\t\t\t{\n\t\t\t\tid: 'Card6',\n\t\t\t\ttitle: 'Project App',\n\t\t\t\tsubtitle: 'Facit Themes',\n\t\t\t\tdescription: 'Project tracking screen will be added',\n\t\t\t\tlabel: '1 day ago',\n\t\t\t\tuser: USERS.JOHN,\n\t\t\t\timg: Slide6,\n\t\t\t\ttags: [TAGS.critical, TAGS.design],\n\t\t\t\ttasks: [\n\t\t\t\t\t{ id: 1, text: 'Lorem ipsum dolor', status: true },\n\t\t\t\t\t{ id: 2, text: 'Sit amet.', status: false },\n\t\t\t\t\t{ id: 3, text: 'Aliquam quis varius turpis.', status: false },\n\t\t\t\t],\n\t\t\t\tattachments: [\n\t\t\t\t\t{ id: 1, path: 'somefile.txt', file: 'TXT' },\n\t\t\t\t\t{ id: 2, path: 'somefile.txt', file: 'WORD' },\n\t\t\t\t\t{ id: 3, path: 'somefile.txt', file: 'PSD' },\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t});\n\n\tconst onDragEnd = (result: DropResult) => {\n\t\tconst { source, destination } = result;\n\n\t\t// dropped outside the list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (source.droppableId === destination.droppableId) {\n\t\t\tconst ITEMS = reorder(state[source.droppableId], source.index, destination.index);\n\n\t\t\tconst sourceList = source.droppableId;\n\t\t\tsetState({ ...state, [sourceList]: ITEMS });\n\t\t} else {\n\t\t\tconst RESULT = move(\n\t\t\t\tstate[source.droppableId],\n\t\t\t\tstate[destination.droppableId],\n\t\t\t\tsource,\n\t\t\t\tdestination,\n\t\t\t);\n\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\t...RESULT,\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<PageWrapper title={demoPagesMenu.projectManagement.subMenu.item.text}>\n\t\t\t<SubHeader>\n\t\t\t\t<SubHeaderLeft>\n\t\t\t\t\t<Button color='info' isLink icon='ArrowBack' onClick={() => navigate(-1)}>\n\t\t\t\t\t\tBack to List\n\t\t\t\t\t</Button>\n\t\t\t\t\t<SubheaderSeparator />\n\t\t\t\t\t<span>\n\t\t\t\t\t\tThere are{' '}\n\t\t\t\t\t\t<Badge color='info' isLight>\n\t\t\t\t\t\t\t2 teams\n\t\t\t\t\t\t</Badge>{' '}\n\t\t\t\t\t\tyou are in and{' '}\n\t\t\t\t\t\t<Badge color='success' isLight>\n\t\t\t\t\t\t\t5 projects\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t.\n\t\t\t\t\t</span>\n\t\t\t\t</SubHeaderLeft>\n\t\t\t\t<SubHeaderRight>\n\t\t\t\t\t<CommonAvatarTeam>\n\t\t\t\t\t\t<strong>Facit</strong> Team\n\t\t\t\t\t</CommonAvatarTeam>\n\t\t\t\t</SubHeaderRight>\n\t\t\t</SubHeader>\n\t\t\t<Page container='fluid'>\n\t\t\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t\t\t<Board>\n\t\t\t\t\t\t<Columns\n\t\t\t\t\t\t\tcolumnsData={columnsData}\n\t\t\t\t\t\t\tcardsData={state}\n\t\t\t\t\t\t\tsetCardsData={setState}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Board>\n\t\t\t\t</DragDropContext>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default ProjectManagementsProject;\n"],"names":["CommonAvatarTeam","_ref","children","isAlignmentEnd","_jsxs","_Fragment","_jsx","className","AvatarGroup","Avatar","src","USERS","srcSet","color","userName","defaultProps","undefined","memo","Badge","shadow","rounded","isLight","props","darkModeStatus","useDarkMode","classNames","Option","value","disabled","ariaLabelledby","Options","_ref2","list","map","item","text","label","ChecksGroup","forwardRef","ref","id","isInline","isValid","isTouched","invalidFeedback","validFeedback","isTooltipFeedback","Children","child","cloneElement","isValidMessage","Validation","isTooltip","displayName","Checks","name","type","checked","isFormCheckInput","onBlur","onChange","onFocus","onInput","onInvalid","onSelect","ariaLabel","INNER","htmlFor","Select","required","placeholder","ariaDescribedby","multiple","title","size","defaultValue","hidden","TAGS","critical","COLORS","design","code","review","revise","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","removed","splice","index","result","droppableId","_card$attachments","_card$tasks","columnKey","columnsData","card","cardsData","setCardsData","editModalStatus","setEditModalStatus","useState","formik","useFormik","initialValues","cardName","groupId","description","assignee","user","username","task","tasks","filter","f","status","m","toString","tags","onSubmit","values","RESULT","CardHeader","CardLabel","CardTitle","tag","onClick","subtitle","CardSubTitle","CardActions","surname","CardBody","attachments","length","Icon","icon","img","alt","CardFooter","CardFooterLeft","Modal","setIsOpen","isOpen","isScrollable","ModalHeader","ModalTitle","ModalBody","Card","iconColor","FormGroup","Input","handleChange","Textarea","Button","isOutline","a","file","t","includes","Chat","CHATS","msg","ChatGroup","messages","isReply","InputGroup","Object","keys","columnItemKey","u","ModalFooter","handleSubmit","cardsInTheColumn","Draggable","draggableId","providedDraggable","snapshotDraggable","borderSize","isDragging","innerRef","draggableProps","dragHandleProps","style","draggableStyle","userSelect","ColumnCard","getItemStyle","columnData","Dropdown","DropdownToggle","hasIcon","DropdownMenu","DropdownItem","isDivider","Droppable","providedDroppable","snapshotDroppable","droppableProps","isDraggingOver","background","ColumnCardWrapper","ProjectManagementsProject","navigate","useNavigate","column1","column2","column3","column4","column5","state","setState","Slide2","path","Slide4","Slide6","PageWrapper","demoPagesMenu","SubHeader","SubHeaderLeft","isLink","SubheaderSeparator","SubHeaderRight","Page","container","DragDropContext","onDragEnd","ITEMS","reorder","startIndex","endIndex","sourceList","Board","Columns"],"sourceRoot":""}