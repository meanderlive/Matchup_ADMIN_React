{"version":3,"file":"static/js/9598.da59ae1f.chunk.js","mappings":"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","sources":["components/bootstrap/Accordion.tsx","pages/presentation/MediaLibraryManagement/MediaLibraryManagement.tsx"],"sourcesContent":["import React, {\n\tChildren,\n\tcloneElement,\n\tElementType,\n\tforwardRef,\n\tReactElement,\n\tReactNode,\n\tuseState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\nimport TagWrapper from '../TagWrapper';\nimport Collapse from './Collapse';\nimport { TColor } from '../../type/color-type';\nimport { TIcons } from '../../type/icons-type';\n\ntype TActiveItemId = string | number | boolean | null;\n\ninterface IAccordionItemProps {\n\tid: string | number;\n\ticon?: TIcons;\n\ttitle: string;\n\tchildren: ReactNode;\n\ttag?: ElementType;\n\theaderTag?: ElementType;\n\toverWriteColor?: null | TColor;\n\tparentId?: string | number | null;\n\tactiveItem?: TActiveItemId;\n\tsetActiveItem?: any;\n}\t\nexport const AccordionItem = forwardRef<HTMLDivElement, IAccordionItemProps>(\n\t({ id, icon, title, children, tag, headerTag, overWriteColor, ...props }, ref) => {\n\t\t// eslint-disable-next-line react/prop-types\n\t\tconst ACTIVE = props.activeItem === id;\n\n\t\treturn (\n\t\t\t<TagWrapper tag={tag} ref={ref} className={classNames('accordion-item')}>\n\t\t\t\t<TagWrapper tag={headerTag} className={classNames('accordion-header')} id={id}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={classNames('accordion-button', {\n\t\t\t\t\t\t\tcollapsed: !ACTIVE,\n\t\t\t\t\t\t\t[`accordion-button-${overWriteColor}`]: overWriteColor,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tdata-bs-toggle='collapse'\n\t\t\t\t\t\tdata-bs-target={`#${id}Collapse`}\n\t\t\t\t\t\taria-expanded={ACTIVE}\n\t\t\t\t\t\taria-controls={`${id}Collapse`}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t\t\t\tACTIVE ? props.setActiveItem(null) : props.setActiveItem(id)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t{icon && <Icon icon={icon} className='accordion-icon' />}\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</button>\n\t\t\t\t</TagWrapper>\n\t\t\t\t<Collapse\n\t\t\t\t\tisOpen={ACTIVE}\n\t\t\t\t\tid={`${id}Collapse`}\n\t\t\t\t\tclassName={classNames('accordion-collapse')}\n\t\t\t\t\taria-labelledby={id}\n\t\t\t\t\tdata-bs-parent={`#${props.parentId}`}>\n\t\t\t\t\t<div className={classNames('accordion-body')}>{children}</div>\n\t\t\t\t</Collapse>\n\t\t\t</TagWrapper>\n\t\t);\n\t},\n);\nAccordionItem.displayName = 'AccordionItem';\nAccordionItem.propTypes = {\n\t/**\n\t * Unique ID\n\t */\n\tid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n\t/**\n\t * Automatically added\n\t */\n\tparentId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t/**\n\t * Item title\n\t */\n\ttitle: PropTypes.string.isRequired,\n\t/**\n\t * Item Content\n\t */\n\tchildren: PropTypes.node.isRequired,\n\t/**\n\t * Item title icon\n\t */\n\ticon: PropTypes.string,\n\ttag: PropTypes.oneOf(['div', 'section']),\n\theaderTag: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'div', 'span', 'section']),\n\t/**\n\t * If you have chosen color from the accordion's own properties, you can overwrite it with this.\n\t */\n\toverWriteColor: PropTypes.oneOf([\n\t\t'primary',\n\t\t'secondary',\n\t\t'success',\n\t\t'info',\n\t\t'warning',\n\t\t'danger',\n\t\t'light',\n\t\t'dark',\n\t]),\n};\nAccordionItem.defaultProps = {\n\tparentId: null,\n\ticon: undefined,\n\ttag: 'div',\n\theaderTag: 'h2',\n\toverWriteColor: null,\n\tactiveItem: undefined,\n\tsetActiveItem: undefined,\n};\n\ninterface IAccordionProps {\n\ttag?: 'div' | 'section';\n\tid: string | number;\n\tactiveItemId?: TActiveItemId;\n\tchildren: ReactElement<IAccordionItemProps> | ReactElement<IAccordionItemProps>[] | Array<any>;\n\tshadow?: null | 'none' | 'sm' | 'default' | 'lg';\n\tcolor?: TColor;\n\tisFlush?: boolean;\n\tclassName?: string;\n}\nconst Accordion = forwardRef<HTMLDivElement | HTMLTableSectionElement, IAccordionProps>(\n\t({ tag, id, activeItemId, children, shadow, color, isFlush, className }, ref) => {\n\t\tconst [activeItem, setActiveItem] = useState<TActiveItemId>(\n\t\t\tactiveItemId === false\n\t\t\t\t? null\n\t\t\t\t: activeItemId || (Array.isArray(children) && children?.flat()[0].props.id),\n\t\t);\n\n\t\treturn (\n\t\t\t<TagWrapper\n\t\t\t\ttag={tag}\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'accordion',\n\t\t\t\t\t{\n\t\t\t\t\t\t'accordion-flush': isFlush,\n\t\t\t\t\t\t'shadow-none': isFlush,\n\t\t\t\t\t\t[`shadow${shadow !== 'default' ? `-${shadow}` : ''}`]: !!shadow,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\tid={id}>\n\t\t\t\t{Children.map(children, (child) =>\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t['AccordionItem'].includes(child?.type?.displayName) ? (\n\t\t\t\t\t\tcloneElement(child as unknown as ReactElement<any>, {\n\t\t\t\t\t\t\tactiveItem,\n\t\t\t\t\t\t\tsetActiveItem,\n\t\t\t\t\t\t\tparentId: id,\n\t\t\t\t\t\t\toverWriteColor: child?.props?.overWriteColor || color,\n\t\t\t\t\t\t})\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<code className='d-block'>\n\t\t\t\t\t\t\tOnly AccordionItem component should be used as a child.\n\t\t\t\t\t\t</code>\n\t\t\t\t\t),\n\t\t\t\t)}\n\t\t\t</TagWrapper>\n\t\t);\n\t},\n);\nAccordion.displayName = 'Accordion';\nAccordion.propTypes = {\n\tid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n\t/**\n\t * By default, the first is enabled, you can enter the AcordionItem ID you want and make it appear active.\n\t * If you don't want any of them to be active, you can give it \"false\".\n\t */\n\tactiveItemId: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number]),\n\t// @ts-ignore\n\tchildren: PropTypes.node.isRequired,\n\t/**\n\t * If checked true the shadow is cleared.\n\t */\n\tisFlush: PropTypes.bool,\n\tclassName: PropTypes.string,\n\ttag: PropTypes.oneOf(['div', 'section']),\n\tshadow: PropTypes.oneOf([null, 'none', 'sm', 'default', 'lg']),\n\t/**\n\t * Active item color\n\t */\n\tcolor: PropTypes.oneOf([\n\t\t'primary',\n\t\t'secondary',\n\t\t'success',\n\t\t'info',\n\t\t'warning',\n\t\t'danger',\n\t\t'light',\n\t\t'dark',\n\t]),\n};\nAccordion.defaultProps = {\n\tactiveItemId: null,\n\tisFlush: false,\n\tclassName: undefined,\n\ttag: 'div',\n\tshadow: 'default',\n\tcolor: 'primary',\n};\n\nexport default Accordion;\n","import React, { useEffect, useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport dayjs from 'dayjs';\nimport { useTour } from '@reactour/tour';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport SubHeader, { SubHeaderLeft, SubHeaderRight } from '../../../layout/SubHeader/SubHeader';\nimport Page from '../../../layout/Page/Page';\nimport { demoPagesMenu } from '../../../menu';\nimport Button from '../../../components/bootstrap/Button';\nimport Popovers from '../../../components/bootstrap/Popovers';\nimport Icon from '../../../components/icon/Icon';\nimport CommonSalePerformance from '../../_common/CRMDashboard/CommonSalePerformance';\nimport CommonTopSales from '../../_common/CRMDashboard/CommonTopSales';\nimport CommonLatestTransActions from '../../_common/CRMDashboard/CommonLatestTransActions';\nimport CommonIncome from '../../_common/CRMDashboard/CommonIncome';\nimport Card, { CardActions, CardBody, CardHeader, CardLabel, CardSubTitle, CardTitle } from '../../../components/bootstrap/Card';\nimport useDarkMode from '../../../hooks/useDarkMode';\n\nimport main_banner from '../../../assets/banner/bg.jpg'\nimport main_banner2 from '../../../assets/banner/01.png'\nimport login from '../../../assets/banner/login.jpg'\nimport signup from '../../../assets/banner/reg.146f635242902986a4a5.jpg'\nimport logo from '../../../assets/banner/logomarier.782c85e1633a1103997b.png'\nimport Chat from '../../../assets/banner/chatbg2.6d1cbbdc4e10c5c323b6.jpg'\nimport Download from '../../../assets/banner/download_img.png'\n\n\n\n\n\n\nimport Accordion, { AccordionItem } from '../../../components/bootstrap/Accordion';\n\nconst CrmDashboard = () => {\n\n\n    const { darkModeStatus } = useDarkMode();\n\t/**\n\t * For Tour\n\t */\n\tconst { currentStep, setCurrentStep } = useTour();\n\tuseEffect(() => {\n\t\tif (currentStep === 3) setCurrentStep(4);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [currentStep]);\n\n\tconst [state, setState] = useState({\n\t\tselection: {\n\t\t\tstartDate: dayjs().startOf('week').add(-1, 'week').toDate(),\n\t\t\tendDate: dayjs().endOf('week').toDate(),\n\t\t\tkey: 'selection',\n\t\t},\n\t\tselection2: {\n\t\t\tstartDate: dayjs().startOf('week').add(-1, 'week').add(2, 'day').toDate(),\n\t\t\tendDate: dayjs().endOf('week').add(-4, 'day').toDate(),\n\t\t\tkey: 'selection2',\n\t\t},\n\t\tselection3: {\n\t\t\tstartDate: dayjs().startOf('week').add(3, 'week').add(2, 'day').toDate(),\n\t\t\tendDate: dayjs().startOf('week').add(3, 'week').add(2, 'day').toDate(),\n\t\t\tkey: 'selection3',\n\t\t},\n\t});\n\n\n\n    const mediaBanner = [\n        {\n            name: 'Main Page Back Banner',\n            img: main_banner\n        },\n        {\n            name: 'Main Page Back Sec Banner',\n            img: main_banner2\n        },\n        {\n            name: 'Login Page Back Banner',\n            img: login\n        },\n        {\n            name: 'Signup Page Back Banner',\n            img: signup \n        },\n        {\n            name: 'Home Page Back Banner',\n            img: main_banner\n        },\n        {\n            name: 'Header Logo',\n            img: logo\n        },\n        {\n            name: 'Chat Page Back Banner',\n            img: Chat\n        },\n        {\n            name: 'Download App Section Banner',\n            img: Download\n        }\n    ];\n    \n\n\tconst datePicker = (\n\t\t<DateRangePicker\n\t\t\tonChange={(item) => setState({ ...state, ...item })}\n\t\t\t// showSelectionPreview\n\t\t\tmoveRangeOnFirstSelection={false}\n\t\t\tretainEndDateOnFirstSelection={false}\n\t\t\tmonths={2}\n\t\t\tranges={[state.selection, state.selection2, state.selection3]}\n\t\t\tdirection='horizontal'\n\t\t\trangeColors={[\n\t\t\t\tString(process.env.REACT_APP_PRIMARY_COLOR),\n\t\t\t\tString(process.env.REACT_APP_SECONDARY_COLOR),\n\t\t\t\tString(process.env.REACT_APP_SUCCESS_COLOR),\n\t\t\t]}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<PageWrapper title={demoPagesMenu.crm.subMenu.dashboard.text}>\n\t\t\t \n\n\t\t\t<Page>\n            <div className='row'>\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<div className='display-5 fw-bold py-3'>Media Library Management</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-md-12'>\n\n\n\n                    <div >\n\t\t\t\t\t\t\t\t\t\t<Accordion id='accSample-2' isFlush shadow='none' >\n\n\n\n                                            {mediaBanner && mediaBanner.map((i,index)=>(\n \n\n                                                <AccordionItem\n                                                key={i.name}\n                                                \n\t\t\t\t\t\t\t\t\t\t\t\tid={`accor${index}-2`}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={i.name}\n                                                \n\t\t\t\t\t\t\t\t\t\t\t\ticon='Photo'>\n\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t <Card >\n\t\t\t\t\t\t\t <CardHeader>\n                                <CardActions>\n                                <Button\n\t\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\tisLight\n\t\t\t\t\t\t\t\t\tclassName='w-100 h-100'\n\t\t\t\t\t\t\t\t\ticon='AddCircle'>\n\t\t\t\t\t\t\t\t\tUpdate Banner\n\t\t\t\t\t\t\t\t</Button>\n                                </CardActions>\n                             </CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n                                <div style={{width:'100%'}}>\n\n\t\t\t\t\t\t\t\t<img src={i.img} width='100%' alt=\"main_banner\"   />\n                                </div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t</AccordionItem>\n                               \n                                        ))}\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t\t\t\t\t</div> \n\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default CrmDashboard;\n"],"names":["AccordionItem","forwardRef","_ref","ref","id","icon","title","children","tag","headerTag","overWriteColor","props","ACTIVE","activeItem","_jsxs","TagWrapper","className","classNames","_jsx","collapsed","type","onClick","setActiveItem","Icon","Collapse","isOpen","parentId","displayName","defaultProps","undefined","Accordion","_ref2","activeItemId","shadow","color","isFlush","useState","Array","isArray","flat","Children","child","_child$type","_child$props","includes","cloneElement","CrmDashboard","darkModeStatus","useDarkMode","currentStep","setCurrentStep","useTour","useEffect","state","setState","selection","startDate","dayjs","startOf","add","toDate","endDate","endOf","key","selection2","selection3","mediaBanner","name","img","main_banner","main_banner2","login","signup","logo","Chat","Download","DateRangePicker","String","process","PageWrapper","demoPagesMenu","Page","map","i","index","Card","CardHeader","CardActions","Button","size","isLight","CardBody","style","width","src","alt"],"sourceRoot":""}