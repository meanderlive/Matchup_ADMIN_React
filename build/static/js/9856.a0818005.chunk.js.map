{"version":3,"file":"static/js/9856.a0818005.chunk.js","mappings":"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","sources":["assets/img/instagram.svg","common/function/generateDayWiseTimeSeries.ts","common/other/CommonStoryBtn.tsx","components/bootstrap/Breadcrumb.tsx","pages/documentation/charts/chart-line/LineBasic.tsx","pages/documentation/charts/chart-line/LineWithLabel.tsx","pages/documentation/charts/chart-line/LineZoomableTimeSeries.tsx","pages/documentation/charts/chart-line/LineWithAnnotations.tsx","pages/documentation/charts/chart-line/LineSyncingOptions.tsx","pages/documentation/charts/chart-line/LineBrush.tsx","pages/documentation/charts/chart-line/LineStep.tsx","pages/documentation/charts/chart-line/LineGradient.tsx","pages/documentation/charts/chart-line/LineRealtime.tsx","pages/documentation/charts/chart-line/LineDashed.tsx","pages/documentation/charts/chart-line/LineWithMissingData.tsx","pages/documentation/charts/ChartLinePage.tsx"],"sourcesContent":["var _linearGradient, _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgInstagram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    height: \"1em\",\n    viewBox: \"0 0 24 24\",\n    width: \"1em\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"svg-icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _linearGradient || (_linearGradient = /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_1_\",\n    gradientTransform: \"matrix(0 -1.982 -1.844 0 -132.522 -51.077)\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -37.106,\n    x2: -26.555,\n    y1: -72.705,\n    y2: -84.047\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#fd5\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.5,\n    stopColor: \"#ff543e\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#c837ab\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m1.5 1.633c-1.886 1.959-1.5 4.04-1.5 10.362 0 5.25-.916 10.513 3.878 11.752 1.497.385 14.761.385 16.256-.002 1.996-.515 3.62-2.134 3.842-4.957.031-.394.031-13.185-.001-13.587-.236-3.007-2.087-4.74-4.526-5.091-.559-.081-.671-.105-3.539-.11-10.173.005-12.403-.448-14.41 1.633z\",\n    fill: \"url(#SVGID_1_)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m11.998 3.139c-3.631 0-7.079-.323-8.396 3.057-.544 1.396-.465 3.209-.465 5.805 0 2.278-.073 4.419.465 5.804 1.314 3.382 4.79 3.058 8.394 3.058 3.477 0 7.062.362 8.395-3.058.545-1.41.465-3.196.465-5.804 0-3.462.191-5.697-1.488-7.375-1.7-1.7-3.999-1.487-7.374-1.487zm-.794 1.597c7.574-.012 8.538-.854 8.006 10.843-.189 4.137-3.339 3.683-7.211 3.683-7.06 0-7.263-.202-7.263-7.265 0-7.145.56-7.257 6.468-7.263zm5.524 1.471c-.587 0-1.063.476-1.063 1.063s.476 1.063 1.063 1.063 1.063-.476 1.063-1.063-.476-1.063-1.063-1.063zm-4.73 1.243c-2.513 0-4.55 2.038-4.55 4.551s2.037 4.55 4.55 4.55 4.549-2.037 4.549-4.55-2.036-4.551-4.549-4.551zm0 1.597c3.905 0 3.91 5.908 0 5.908-3.904 0-3.91-5.908 0-5.908z\",\n    fill: \"#fff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgInstagram);\nexport default __webpack_public_path__ + \"static/media/instagram.a844f6d79f18c0caaaf28939ef83b446.svg\";\nexport { ForwardRef as ReactComponent };","import { ApexOptions } from 'apexcharts';\n\nconst generateDayWiseTimeSeries = (\n\tbaseval: number,\n\tcount: number,\n\tyrange: { min: any; max: any },\n\t// @ts-ignore\n): ApexOptions['series']['data'][] => {\n\tlet i = 0;\n\tconst series2 = [];\n\twhile (i < count) {\n\t\tconst x = baseval;\n\t\tconst y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n\t\tseries2.push([x, y]);\n\t\tbaseval += 86400000;\n\t\ti += 1;\n\t}\n\treturn series2;\n};\n\nexport default generateDayWiseTimeSeries;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport Button, { IButtonProps } from '../../components/bootstrap/Button';\n\ninterface ICommonStoryBtnProps extends IButtonProps {\n\tto: string;\n}\nconst CommonStoryBtn: FC<ICommonStoryBtnProps> = ({ to, ...props }) => {\n\treturn (\n\t\t<Button\n\t\t\tcolor='storybook'\n\t\t\ticon='CustomStorybook'\n\t\t\ttag='a'\n\t\t\ttarget='_blank'\n\t\t\tisLight\n\t\t\thref={`${process.env.REACT_APP_STORYBOOK_URL}${to}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\tStorybook\n\t\t</Button>\n\t);\n};\nCommonStoryBtn.propTypes = {\n\tto: PropTypes.string.isRequired,\n};\n\nexport default CommonStoryBtn;\n","import React, {\n\tChildren,\n\tcloneElement,\n\tFC,\n\tJSXElementConstructor,\n\tReactElement,\n\tReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport TagWrapper from '../TagWrapper';\nimport Icon from '../icon/Icon';\n\ninterface IBreadcrumbItemProps extends Record<string, any> {\n\tchildren: ReactNode;\n\tariaLabel?: string;\n\tclassName?: string;\n\ttag?: string;\n\tto: string;\n\tisActive?: boolean;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\n\tchildren,\n\tariaLabel,\n\tclassName,\n\ttag,\n\tto,\n\tisActive,\n\tdivider,\n}) => {\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\n\t\t\taria-current={isActive ? 'page' : null}\n\t\t\taria-label={ariaLabel || children}>\n\t\t\t{divider &&\n\t\t\t\ttypeof divider !== 'string' &&\n\t\t\t\tcloneElement(divider, {\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\n\t\t\t\t})}\n\t\t\t{isActive ? (\n\t\t\t\tchildren\n\t\t\t) : (\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\n\t\t\t\t\t{children}\n\t\t\t\t</NavLink>\n\t\t\t)}\n\t\t</TagWrapper>\n\t);\n};\nBreadcrumbItem.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tariaLabel: PropTypes.string,\n\tclassName: PropTypes.string,\n\ttag: PropTypes.string,\n\tto: PropTypes.string.isRequired,\n\tisActive: PropTypes.bool,\n\t// @ts-ignore\n\tdivider: PropTypes.node,\n};\nBreadcrumbItem.defaultProps = {\n\tclassName: undefined,\n\tariaLabel: undefined,\n\ttag: 'li',\n\tisActive: false,\n\tdivider: undefined,\n};\n\n// TODO:: children or list req\ninterface IBreadcrumbProps extends Record<string, any> {\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\n\tlist?: {\n\t\ttitle: string;\n\t\tto: string;\n\t\ttag?: 'div' | 'li';\n\t}[];\n\ttag?: 'nav' | 'div' | 'section';\n\tlistTag?: 'div' | 'ol' | 'ul';\n\titemTag?: 'div' | 'li';\n\tariaLabel?: string | null;\n\tautoActive?: boolean;\n\tisToHome?: ReactNode;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\n\tchildren,\n\tlist,\n\ttag,\n\tlistTag,\n\titemTag,\n\tariaLabel,\n\tautoActive,\n\tisToHome,\n\tdivider,\n}) => {\n\tconst DIVIDER = divider !== 'string' && divider;\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\taria-label={ariaLabel}\n\t\t\tstyle={\n\t\t\t\tdivider\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\n\t\t\t\t\t  }\n\t\t\t\t\t: null\n\t\t\t}>\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\n\t\t\t\t{isToHome && (\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\n\t\t\t\t\t\t{isToHome}\n\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t)}\n\t\t\t\t{list\n\t\t\t\t\t? list.map((item, index) => (\n\t\t\t\t\t\t\t<BreadcrumbItem\n\t\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\n\t\t\t\t\t\t\t\tto={item.to}\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\n\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t\t  ))\n\t\t\t\t\t: Children.map(children, (child, index) =>\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tcloneElement(child, {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  )}\n\t\t\t</TagWrapper>\n\t\t</TagWrapper>\n\t);\n};\nBreadcrumb.propTypes = {\n\t// @ts-ignore\n\tchildren: PropTypes.node,\n\ttag: PropTypes.oneOf(['nav', 'div', 'section']),\n\tlistTag: PropTypes.oneOf(['div', 'ol', 'ul']),\n\titemTag: PropTypes.oneOf(['div', 'li']),\n\tariaLabel: PropTypes.string,\n\t// @ts-ignore\n\tlist: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\ttitle: PropTypes.string.isRequired,\n\t\t\tto: PropTypes.string.isRequired,\n\t\t}),\n\t),\n\t/**\n\t * The last element is automatically activated\n\t */\n\tautoActive: PropTypes.bool,\n\t/**\n\t * Icon component or string\n\t */\n\tisToHome: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Icon component or string\n\t */\n\t// @ts-ignore\n\tdivider: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n};\nBreadcrumb.defaultProps = {\n\tchildren: undefined,\n\ttag: 'nav',\n\tlistTag: 'ol',\n\titemTag: 'li',\n\tariaLabel: 'breadcrumb',\n\tlist: undefined,\n\tautoActive: true,\n\tisToHome: <Icon icon='HolidayVillage' />,\n\tdivider: <Icon icon='ChevronRight' />,\n};\n\nexport default Breadcrumb;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardActions,\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\nimport CommonStoryBtn from '../../../../common/other/CommonStoryBtn';\n\nconst LineBasic = () => {\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'Desktops',\n\t\t\t\tdata: [10, 41, 35, 51, 49, 62, 69, 91, 148],\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'line',\n\t\t\t\tzoom: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\tcurve: 'straight',\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Product Trends by Month',\n\t\t\t\talign: 'left',\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\trow: {\n\t\t\t\t\tcolors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t},\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\tcategories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<CommonStoryBtn to='/story/extra-chart-line--line-basic' />\n\t\t\t\t\t</CardActions>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart\n\t\t\t\t\t\tseries={state.series}\n\t\t\t\t\t\toptions={state.options}\n\t\t\t\t\t\ttype={state.options.chart?.type}\n\t\t\t\t\t\theight={state.options.chart?.height}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineBasic;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\n\nconst LineWithLabel = () => {\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'High - 2013',\n\t\t\t\tdata: [28, 29, 33, 36, 32, 32, 33],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Low - 2013',\n\t\t\t\tdata: [12, 11, 14, 18, 17, 13, 13],\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'line',\n\t\t\t\tdropShadow: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcolor: '#000',\n\t\t\t\t\ttop: 18,\n\t\t\t\t\tleft: 7,\n\t\t\t\t\tblur: 10,\n\t\t\t\t\topacity: 0.2,\n\t\t\t\t},\n\t\t\t\ttoolbar: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttheme: 'dark',\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: true,\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\tcurve: 'smooth',\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Average High & Low Temperature',\n\t\t\t\talign: 'left',\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tborderColor: '#e7e7e7',\n\t\t\t\trow: {\n\t\t\t\t\tcolors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n\t\t\t\t\topacity: 0.5,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmarkers: {\n\t\t\t\tsize: 1,\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\tcategories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Month',\n\t\t\t\t},\n\t\t\t},\n\t\t\tyaxis: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Temperature',\n\t\t\t\t},\n\t\t\t\tmin: 5,\n\t\t\t\tmax: 40,\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tposition: 'top',\n\t\t\t\thorizontalAlign: 'right',\n\t\t\t\tfloating: true,\n\t\t\t\toffsetY: -25,\n\t\t\t\toffsetX: -5,\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='warning'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart\n\t\t\t\t\t\tseries={state.series}\n\t\t\t\t\t\toptions={state.options}\n\t\t\t\t\t\ttype={state.options.chart?.type}\n\t\t\t\t\t\theight={state.options.chart?.height}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineWithLabel;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\nimport { dataSeries } from '../../../../common/data/chartDummyData';\n\nconst LineZoomableTimeSeries = () => {\n\tlet ts2 = 1484418600000;\n\tconst dates: any[] = [];\n\tfor (let i = 0; i < 120; i += 1) {\n\t\tts2 += 86400000;\n\t\tconst innerArr = [ts2, dataSeries[1][i].value];\n\t\tdates.push(innerArr);\n\t}\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'XYZ MOTORS',\n\t\t\t\tdata: dates,\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\ttype: 'area',\n\t\t\t\tstacked: false,\n\t\t\t\theight: 350,\n\t\t\t\tzoom: {\n\t\t\t\t\ttype: 'x',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tautoScaleYaxis: true,\n\t\t\t\t},\n\t\t\t\ttoolbar: {\n\t\t\t\t\tautoSelected: 'zoom',\n\t\t\t\t},\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t\tmarkers: {\n\t\t\t\tsize: 0,\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Stock Price Movement',\n\t\t\t\talign: 'left',\n\t\t\t},\n\t\t\tfill: {\n\t\t\t\ttype: 'gradient',\n\t\t\t\tgradient: {\n\t\t\t\t\tshadeIntensity: 1,\n\t\t\t\t\tinverseColors: false,\n\t\t\t\t\topacityFrom: 0.5,\n\t\t\t\t\topacityTo: 0,\n\t\t\t\t\tstops: [0, 90, 100],\n\t\t\t\t},\n\t\t\t},\n\t\t\tyaxis: {\n\t\t\t\tlabels: {\n\t\t\t\t\tformatter(val) {\n\t\t\t\t\t\treturn (val / 1000000).toFixed(0);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Price',\n\t\t\t\t},\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\ttype: 'datetime',\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tshared: false,\n\t\t\t\ty: {\n\t\t\t\t\tformatter(val) {\n\t\t\t\t\t\treturn (val / 1000000).toFixed(0);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='danger'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>area</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart\n\t\t\t\t\t\tseries={state.series}\n\t\t\t\t\t\toptions={state.options}\n\t\t\t\t\t\ttype={state.options.chart?.type}\n\t\t\t\t\t\theight={state.options.chart?.height}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineZoomableTimeSeries;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\nimport { series } from '../../../../common/data/chartDummyData';\nimport Instagram from '../../../../assets/img/instagram.svg';\n\nconst LineWithAnnotations = () => {\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tdata: series.monthDataSeries1.prices,\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tannotations: {\n\t\t\t\tyaxis: [\n\t\t\t\t\t{\n\t\t\t\t\t\ty: 8200,\n\t\t\t\t\t\tborderColor: process.env.REACT_APP_SUCCESS_COLOR,\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_SUCCESS_COLOR,\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_SUCCESS_COLOR,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttext: 'Support',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ty: 8600,\n\t\t\t\t\t\ty2: 9000,\n\t\t\t\t\t\tborderColor: '#000',\n\t\t\t\t\t\tfillColor: process.env.REACT_APP_WARNING_COLOR,\n\t\t\t\t\t\topacity: 0.2,\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_WARNING_COLOR,\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tfontSize: '10px',\n\t\t\t\t\t\t\t\tcolor: '#333',\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_WARNING_COLOR,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttext: 'Y-axis range',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\txaxis: [\n\t\t\t\t\t{\n\t\t\t\t\t\tx: new Date('23 Nov 2017').getTime(),\n\t\t\t\t\t\tstrokeDashArray: 0,\n\t\t\t\t\t\tborderColor: process.env.REACT_APP_PRIMARY_COLOR,\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_PRIMARY_COLOR,\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_PRIMARY_COLOR,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttext: 'Anno Test',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tx: new Date('26 Nov 2017').getTime(),\n\t\t\t\t\t\tx2: new Date('28 Nov 2017').getTime(),\n\t\t\t\t\t\tfillColor: process.env.REACT_APP_SUCCESS_COLOR,\n\t\t\t\t\t\topacity: 0.4,\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_SUCCESS_COLOR,\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tfontSize: '10px',\n\t\t\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_SUCCESS_COLOR,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toffsetY: -10,\n\t\t\t\t\t\t\ttext: 'X-axis range',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpoints: [\n\t\t\t\t\t{\n\t\t\t\t\t\tx: new Date('01 Dec 2017').getTime(),\n\t\t\t\t\t\ty: 8607.55,\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tsize: 8,\n\t\t\t\t\t\t\tfillColor: '#fff',\n\t\t\t\t\t\t\tstrokeColor: 'red',\n\t\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\t\tcssClass: 'apexcharts-custom-class',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_DANGER_COLOR,\n\t\t\t\t\t\t\toffsetY: 0,\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_DANGER_COLOR,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttext: 'Point Annotation',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tx: new Date('08 Dec 2017').getTime(),\n\t\t\t\t\t\ty: 9340.85,\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tsize: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\timage: {\n\t\t\t\t\t\t\tpath: Instagram,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\tcurve: 'straight',\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tpadding: {\n\t\t\t\t\tright: 30,\n\t\t\t\t\tleft: 20,\n\t\t\t\t},\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Line with Annotations',\n\t\t\t\talign: 'left',\n\t\t\t},\n\t\t\tlabels: series.monthDataSeries1.dates,\n\t\t\txaxis: {\n\t\t\t\ttype: 'datetime',\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='success'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart series={state.series} options={state.options} type='line' height={350} />\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineWithAnnotations;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\nimport generateDayWiseTimeSeries from '../../../../common/function/generateDayWiseTimeSeries';\n\nconst LineSyncingOptions = () => {\n\tconst syncingChartsOptions: IChartOptions['options'] = {\n\t\tchart: {\n\t\t\theight: 160,\n\t\t},\n\t\tdataLabels: {\n\t\t\tenabled: false,\n\t\t},\n\t\tstroke: {\n\t\t\tcurve: 'straight',\n\t\t},\n\t\ttoolbar: {\n\t\t\ttools: {\n\t\t\t\tselection: false,\n\t\t\t},\n\t\t},\n\t\tmarkers: {\n\t\t\tsize: 6,\n\t\t\thover: {\n\t\t\t\tsize: 10,\n\t\t\t},\n\t\t},\n\t\ttooltip: {\n\t\t\tfollowCursor: false,\n\t\t\ttheme: 'dark',\n\t\t},\n\t\tgrid: {\n\t\t\t// @ts-ignore\n\t\t\tclipMarkers: false,\n\t\t},\n\t\tyaxis: {\n\t\t\ttickAmount: 2,\n\t\t},\n\t\txaxis: {\n\t\t\ttype: 'datetime',\n\t\t},\n\t};\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tdata: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n\t\t\t\t\tmin: 10,\n\t\t\t\t\tmax: 60,\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\t...syncingChartsOptions,\n\t\t\tchart: {\n\t\t\t\tid: 'fb',\n\t\t\t\tgroup: 'social',\n\t\t\t\ttype: 'line',\n\t\t\t\theight: 160,\n\t\t\t},\n\t\t\tcolors: ['#008FFB'],\n\t\t\tyaxis: {\n\t\t\t\tlabels: {\n\t\t\t\t\tminWidth: 40,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\tseriesLine2: [\n\t\t\t{\n\t\t\t\tdata: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n\t\t\t\t\tmin: 10,\n\t\t\t\t\tmax: 30,\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t\toptionsLine2: {\n\t\t\t...syncingChartsOptions,\n\t\t\tchart: {\n\t\t\t\tid: 'tw',\n\t\t\t\tgroup: 'social',\n\t\t\t\ttype: 'line',\n\t\t\t\theight: 160,\n\t\t\t},\n\t\t\tcolors: [process.env.REACT_APP_WARNING_COLOR],\n\t\t\tyaxis: {\n\t\t\t\tlabels: {\n\t\t\t\t\tminWidth: 40,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\tseriesArea: [\n\t\t\t{\n\t\t\t\tdata: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n\t\t\t\t\tmin: 10,\n\t\t\t\t\tmax: 60,\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t\toptionsArea: {\n\t\t\t...syncingChartsOptions,\n\t\t\tchart: {\n\t\t\t\tid: 'yt',\n\t\t\t\tgroup: 'social',\n\t\t\t\ttype: 'area',\n\t\t\t\theight: 160,\n\t\t\t},\n\t\t\tcolors: [process.env.REACT_APP_SUCCESS_COLOR],\n\t\t\tyaxis: {\n\t\t\t\tlabels: {\n\t\t\t\t\tminWidth: 40,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='info'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line & area</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={160} />\n\t\t\t\t\t<Chart\n\t\t\t\t\t\toptions={state.optionsLine2}\n\t\t\t\t\t\tseries={state.seriesLine2}\n\t\t\t\t\t\ttype='line'\n\t\t\t\t\t\theight={160}\n\t\t\t\t\t/>\n\t\t\t\t\t<Chart\n\t\t\t\t\t\toptions={state.optionsArea}\n\t\t\t\t\t\tseries={state.seriesArea}\n\t\t\t\t\t\ttype='area'\n\t\t\t\t\t\theight={160}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineSyncingOptions;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\nimport generateDayWiseTimeSeries from '../../../../common/function/generateDayWiseTimeSeries';\n\nconst LineBrush = () => {\n\tconst brushData = generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 185, {\n\t\tmin: 30,\n\t\tmax: 90,\n\t});\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tdata: brushData,\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\tid: 'chart2',\n\t\t\t\ttype: 'line',\n\t\t\t\theight: 230,\n\t\t\t\ttoolbar: {\n\t\t\t\t\tautoSelected: 'pan',\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tcolors: [process.env.REACT_APP_PRIMARY_COLOR],\n\t\t\tstroke: {\n\t\t\t\twidth: 3,\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t\tfill: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t\tmarkers: {\n\t\t\t\tsize: 0,\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\ttype: 'datetime',\n\t\t\t},\n\t\t},\n\n\t\tseriesLine: [\n\t\t\t{\n\t\t\t\tdata: brushData,\n\t\t\t},\n\t\t],\n\t\toptionsLine: {\n\t\t\tchart: {\n\t\t\t\tid: 'chart1',\n\t\t\t\theight: 130,\n\t\t\t\ttype: 'area',\n\t\t\t\tbrush: {\n\t\t\t\t\ttarget: 'chart2',\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t\tselection: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\txaxis: {\n\t\t\t\t\t\tmin: new Date('19 Jun 2017').getTime(),\n\t\t\t\t\t\tmax: new Date('14 Aug 2017').getTime(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tcolors: [process.env.REACT_APP_INFO_COLOR],\n\t\t\tfill: {\n\t\t\t\ttype: 'gradient',\n\t\t\t\tgradient: {\n\t\t\t\t\topacityFrom: 0.91,\n\t\t\t\t\topacityTo: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\ttype: 'datetime',\n\t\t\t\ttooltip: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tyaxis: {\n\t\t\t\ttickAmount: 2,\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line & area</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={230} />\n\t\t\t\t\t<Chart\n\t\t\t\t\t\toptions={state.optionsLine}\n\t\t\t\t\t\tseries={state.seriesLine}\n\t\t\t\t\t\ttype='area'\n\t\t\t\t\t\theight={130}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\t\tmarginTop: -40,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineBrush;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\n\nconst LineStep = () => {\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tdata: [34, 44, 54, 21, 12, 43, 33, 23, 66, 66, 58],\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\ttype: 'line',\n\t\t\t\theight: 350,\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\tcurve: 'stepline',\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Stepline Chart',\n\t\t\t\talign: 'left',\n\t\t\t},\n\t\t\tmarkers: {\n\t\t\t\thover: {\n\t\t\t\t\tsizeOffset: 4,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineStep;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\n\nconst LineGradient = () => {\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'Likes',\n\t\t\t\tdata: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5],\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'line',\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttheme: 'dark',\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\twidth: 7,\n\t\t\t\tcurve: 'smooth',\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\ttype: 'datetime',\n\t\t\t\tcategories: [\n\t\t\t\t\t'1/11/2000',\n\t\t\t\t\t'2/11/2000',\n\t\t\t\t\t'3/11/2000',\n\t\t\t\t\t'4/11/2000',\n\t\t\t\t\t'5/11/2000',\n\t\t\t\t\t'6/11/2000',\n\t\t\t\t\t'7/11/2000',\n\t\t\t\t\t'8/11/2000',\n\t\t\t\t\t'9/11/2000',\n\t\t\t\t\t'10/11/2000',\n\t\t\t\t\t'11/11/2000',\n\t\t\t\t\t'12/11/2000',\n\t\t\t\t\t'1/11/2001',\n\t\t\t\t\t'2/11/2001',\n\t\t\t\t\t'3/11/2001',\n\t\t\t\t\t'4/11/2001',\n\t\t\t\t\t'5/11/2001',\n\t\t\t\t\t'6/11/2001',\n\t\t\t\t],\n\t\t\t\ttickAmount: 10,\n\t\t\t\tlabels: {\n\t\t\t\t\tformatter(value, timestamp, opts) {\n\t\t\t\t\t\treturn opts.dateFormatter(\n\t\t\t\t\t\t\tnew Date(typeof timestamp === 'number' ? timestamp : ''),\n\t\t\t\t\t\t\t'dd MMM',\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Social Media',\n\t\t\t\talign: 'left',\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: '16px',\n\t\t\t\t\tcolor: '#666',\n\t\t\t\t},\n\t\t\t},\n\t\t\tfill: {\n\t\t\t\ttype: 'gradient',\n\t\t\t\tgradient: {\n\t\t\t\t\tshade: 'dark',\n\t\t\t\t\tgradientToColors: [String(process.env.REACT_APP_SECONDARY_COLOR)],\n\t\t\t\t\tshadeIntensity: 1,\n\t\t\t\t\ttype: 'horizontal',\n\t\t\t\t\topacityFrom: 1,\n\t\t\t\t\topacityTo: 1,\n\t\t\t\t\tstops: [0, 100, 100, 100],\n\t\t\t\t},\n\t\t\t},\n\t\t\tmarkers: {\n\t\t\t\tsize: 4,\n\t\t\t\tcolors: ['#FFA41B'],\n\t\t\t\tstrokeColors: '#fff',\n\t\t\t\tstrokeWidth: 2,\n\t\t\t\thover: {\n\t\t\t\t\tsize: 7,\n\t\t\t\t},\n\t\t\t},\n\t\t\tyaxis: {\n\t\t\t\tmin: -10,\n\t\t\t\tmax: 40,\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Engagement',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineGradient;\n","import React, { useEffect, useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\n\nconst LineRealtime = () => {\n\tlet lastDate = 0;\n\tconst data: any[] = [];\n\tconst TICK_INTERVAL = 86400000;\n\tconst X_AXIS_RANGE = 777600000;\n\tconst getDayWiseTimeSeries = (\n\t\tbaseval: number,\n\t\tcount: number,\n\t\tyrange: { min: any; max: any },\n\t) => {\n\t\tlet i = 0;\n\t\twhile (i < count) {\n\t\t\tconst x = baseval;\n\t\t\tconst y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n\t\t\tdata.push({\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t});\n\t\t\tlastDate = baseval;\n\t\t\tbaseval += TICK_INTERVAL;\n\t\t\ti += 1;\n\t\t}\n\t};\n\tgetDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\n\t\tmin: 10,\n\t\tmax: 90,\n\t});\n\tconst getNewSeries = (baseval: number, yrange: { min: any; max: any }) => {\n\t\tconst newDate = baseval + TICK_INTERVAL;\n\t\tlastDate = newDate;\n\n\t\tfor (let i = 0; i < data.length - 10; i += 1) {\n\t\t\t// IMPORTANT\n\t\t\t// we reset the x and y of the data which is out of drawing area\n\t\t\t// to prevent memory leaks\n\t\t\tdata[i].x = newDate - X_AXIS_RANGE - TICK_INTERVAL;\n\t\t\tdata[i].y = 0;\n\t\t}\n\n\t\tdata.push({\n\t\t\tx: newDate,\n\t\t\ty: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min,\n\t\t});\n\t};\n\tconst [state, setState] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tdata: data.slice(),\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\tid: 'realtime',\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'line',\n\t\t\t\tanimations: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\teasing: 'linear',\n\t\t\t\t\tdynamicAnimation: {\n\t\t\t\t\t\tspeed: 1000,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttoolbar: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t\tzoom: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\tcurve: 'smooth',\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Dynamic Updating Chart',\n\t\t\t\talign: 'left',\n\t\t\t},\n\t\t\tmarkers: {\n\t\t\t\tsize: 0,\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\ttype: 'datetime',\n\t\t\t\trange: X_AXIS_RANGE,\n\t\t\t},\n\t\t\tyaxis: {\n\t\t\t\tmax: 100,\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tshow: false,\n\t\t\t},\n\t\t},\n\t});\n\tuseEffect(() => {\n\t\twindow.setInterval(() => {\n\t\t\tgetNewSeries(lastDate, {\n\t\t\t\tmin: 10,\n\t\t\t\tmax: 90,\n\t\t\t});\n\t\t\tsetState({\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: data.slice(),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\toptions: {\n\t\t\t\t\t...state.options,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\t// ApexCharts.exec('realtime', 'updateSeries', [\n\t\t\t// \t{\n\t\t\t// \t\tdata,\n\t\t\t// \t},\n\t\t\t// ]);\n\t\t}, 1000);\n\t\treturn () => {};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineRealtime;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\n\nconst LineDashed = () => {\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'Session Duration',\n\t\t\t\tdata: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Page Views',\n\t\t\t\tdata: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Total Visits',\n\t\t\t\tdata: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47],\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'line',\n\t\t\t\tzoom: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\twidth: [5, 7, 5],\n\t\t\t\tcurve: 'straight',\n\t\t\t\tdashArray: [0, 8, 5],\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: 'Page Statistics',\n\t\t\t\talign: 'left',\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttooltipHoverFormatter(val, opts) {\n\t\t\t\t\treturn `${val} - <strong>${\n\t\t\t\t\t\topts.w.globals.series[opts.seriesIndex][opts.dataPointIndex]\n\t\t\t\t\t}</strong>`;\n\t\t\t\t},\n\t\t\t},\n\t\t\tmarkers: {\n\t\t\t\tsize: 0,\n\t\t\t\thover: {\n\t\t\t\t\tsizeOffset: 6,\n\t\t\t\t},\n\t\t\t},\n\t\t\txaxis: {\n\t\t\t\tcategories: [\n\t\t\t\t\t'01 Jan',\n\t\t\t\t\t'02 Jan',\n\t\t\t\t\t'03 Jan',\n\t\t\t\t\t'04 Jan',\n\t\t\t\t\t'05 Jan',\n\t\t\t\t\t'06 Jan',\n\t\t\t\t\t'07 Jan',\n\t\t\t\t\t'08 Jan',\n\t\t\t\t\t'09 Jan',\n\t\t\t\t\t'10 Jan',\n\t\t\t\t\t'11 Jan',\n\t\t\t\t\t'12 Jan',\n\t\t\t\t],\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ty: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tformatter(val) {\n\t\t\t\t\t\t\t\treturn `${val} (mins)`;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tformatter(val) {\n\t\t\t\t\t\t\t\treturn `${val} per session`;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tformatter(val) {\n\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tborderColor: '#f1f1f1',\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-lg-6'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineDashed;\n","import React, { useState } from 'react';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../../components/bootstrap/Card';\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\n\nconst LineWithMissingData = () => {\n\tconst [state] = useState<IChartOptions>({\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'Peter',\n\t\t\t\tdata: [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Johnny',\n\t\t\t\tdata: [\n\t\t\t\t\t10,\n\t\t\t\t\t15,\n\t\t\t\t\tnull,\n\t\t\t\t\t12,\n\t\t\t\t\tnull,\n\t\t\t\t\t10,\n\t\t\t\t\t12,\n\t\t\t\t\t15,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t12,\n\t\t\t\t\tnull,\n\t\t\t\t\t14,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'David',\n\t\t\t\tdata: [null, null, null, null, 3, 4, 1, 3, 4, 6, 7, 9, 5, null, null, null],\n\t\t\t},\n\t\t],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'line',\n\t\t\t\tzoom: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tanimations: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tstroke: {\n\t\t\t\twidth: [5, 5, 4],\n\t\t\t\tcurve: 'straight',\n\t\t\t},\n\t\t\tlabels: [\n\t\t\t\t'1',\n\t\t\t\t'2',\n\t\t\t\t'3',\n\t\t\t\t'4',\n\t\t\t\t'5',\n\t\t\t\t'6',\n\t\t\t\t'7',\n\t\t\t\t'8',\n\t\t\t\t'9',\n\t\t\t\t'10',\n\t\t\t\t'11',\n\t\t\t\t'12',\n\t\t\t\t'13',\n\t\t\t\t'14',\n\t\t\t\t'15',\n\t\t\t\t'16',\n\t\t\t],\n\t\t\ttitle: {\n\t\t\t\ttext: 'Missing data (null values)',\n\t\t\t},\n\t\t\txaxis: {},\n\t\t},\n\t});\n\treturn (\n\t\t<div className='col-12'>\n\t\t\t<Card stretch>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\n\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\ttype <small>line</small>\n\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\n\t\t\t\t\t</CardLabel>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default LineWithMissingData;\n","import React from 'react';\nimport SubHeader, { SubHeaderLeft, SubHeaderRight } from '../../../layout/SubHeader/SubHeader';\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\nimport Page from '../../../layout/Page/Page';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport LineBasic from './chart-line/LineBasic';\nimport LineWithLabel from './chart-line/LineWithLabel';\nimport LineZoomableTimeSeries from './chart-line/LineZoomableTimeSeries';\nimport LineWithAnnotations from './chart-line/LineWithAnnotations';\nimport LineSyncingOptions from './chart-line/LineSyncingOptions';\nimport LineBrush from './chart-line/LineBrush';\nimport LineStep from './chart-line/LineStep';\nimport LineGradient from './chart-line/LineGradient';\nimport LineRealtime from './chart-line/LineRealtime';\nimport LineDashed from './chart-line/LineDashed';\nimport LineWithMissingData from './chart-line/LineWithMissingData';\nimport CommonStoryBtn from '../../../common/other/CommonStoryBtn';\nimport { componentPagesMenu } from '../../../menu';\n\nconst ChartLinePage = () => {\n\treturn (\n\t\t<PageWrapper title={componentPagesMenu.charts.subMenu.chartsLine.text}>\n\t\t\t<SubHeader>\n\t\t\t\t<SubHeaderLeft>\n\t\t\t\t\t<Breadcrumb\n\t\t\t\t\t\tlist={[\n\t\t\t\t\t\t\t{ title: 'Charts', to: '/charts' },\n\t\t\t\t\t\t\t{ title: 'Line', to: '/charts/line' },\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</SubHeaderLeft>\n\t\t\t\t<SubHeaderRight>\n\t\t\t\t\t<CommonStoryBtn to='/story/extra-chart-line--line-basic' />\n\t\t\t\t</SubHeaderRight>\n\t\t\t</SubHeader>\n\t\t\t<Page>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<LineBasic />\n\t\t\t\t\t<LineWithLabel />\n\n\t\t\t\t\t<LineZoomableTimeSeries />\n\t\t\t\t\t<LineWithAnnotations />\n\n\t\t\t\t\t<LineSyncingOptions />\n\t\t\t\t\t<LineBrush />\n\n\t\t\t\t\t<LineStep />\n\t\t\t\t\t<LineGradient />\n\n\t\t\t\t\t<LineRealtime />\n\t\t\t\t\t<LineDashed />\n\n\t\t\t\t\t<LineWithMissingData />\n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default ChartLinePage;\n"],"names":["generateDayWiseTimeSeries","baseval","count","yrange","i","series2","x","y","Math","floor","random","max","min","push","_ref","to","props","_jsx","Button","color","icon","tag","target","isLight","href","children","BreadcrumbItem","ariaLabel","className","isActive","divider","_jsxs","TagWrapper","classNames","active","cloneElement","NavLink","defaultProps","undefined","Breadcrumb","_ref2","list","listTag","itemTag","autoActive","isToHome","DIVIDER","style","map","item","index","length","title","Children","child","Icon","LineBasic","_state$options$chart","_state$options$chart2","state","useState","series","name","data","options","chart","height","type","zoom","enabled","dataLabels","stroke","curve","text","align","grid","row","colors","opacity","xaxis","categories","Card","stretch","CardHeader","CardLabel","CardTitle","CardSubTitle","CardActions","CommonStoryBtn","CardBody","Chart","LineWithLabel","dropShadow","top","left","blur","toolbar","show","tooltip","theme","borderColor","markers","size","yaxis","legend","position","horizontalAlign","floating","offsetY","offsetX","iconColor","LineZoomableTimeSeries","ts2","dates","innerArr","dataSeries","value","stacked","autoScaleYaxis","autoSelected","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","labels","formatter","val","toFixed","shared","LineWithAnnotations","annotations","process","label","background","y2","fillColor","fontSize","Date","getTime","strokeDashArray","x2","points","marker","strokeColor","radius","cssClass","image","path","Instagram","padding","right","LineSyncingOptions","syncingChartsOptions","tools","selection","hover","followCursor","clipMarkers","tickAmount","id","group","minWidth","seriesLine2","optionsLine2","seriesArea","optionsArea","LineBrush","brushData","width","seriesLine","optionsLine","brush","marginTop","LineStep","sizeOffset","LineGradient","timestamp","opts","dateFormatter","shade","gradientToColors","String","strokeColors","strokeWidth","LineRealtime","lastDate","TICK_INTERVAL","X_AXIS_RANGE","getDayWiseTimeSeries","setState","slice","animations","easing","dynamicAnimation","speed","range","useEffect","window","setInterval","getNewSeries","newDate","LineDashed","dashArray","tooltipHoverFormatter","w","globals","seriesIndex","dataPointIndex","LineWithMissingData","ChartLinePage","PageWrapper","componentPagesMenu","SubHeader","SubHeaderLeft","SubHeaderRight","Page"],"sourceRoot":""}